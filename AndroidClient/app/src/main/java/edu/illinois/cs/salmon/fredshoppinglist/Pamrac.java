// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pamrac.proto

package pamrac;

public final class Pamrac {
  private Pamrac() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PAMRACMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.PAMRACMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes user_fingerprint = 1;</code>
     *
     * <pre>
     *A pretty painless way to make it easy to extend the server to hosting multiple users.
     *Just about every interaction with the server has an implicit ", and you are doing this with the files
     *of the user who you host". So, to allow the server to host multiple users, we can instead have every 
     *message be explicit about which user we're talking about, by specifying the user's fingerprint.
     * </pre>
     */
    boolean hasUserFingerprint();
    /**
     * <code>optional bytes user_fingerprint = 1;</code>
     *
     * <pre>
     *A pretty painless way to make it easy to extend the server to hosting multiple users.
     *Just about every interaction with the server has an implicit ", and you are doing this with the files
     *of the user who you host". So, to allow the server to host multiple users, we can instead have every 
     *message be explicit about which user we're talking about, by specifying the user's fingerprint.
     * </pre>
     */
    com.google.protobuf.ByteString getUserFingerprint();

    /**
     * <code>required .pamrac.PAMRACMessage.Type type = 2;</code>
     *
     * <pre>
     *Which of these optional fields below should we expect to actually be present?
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .pamrac.PAMRACMessage.Type type = 2;</code>
     *
     * <pre>
     *Which of these optional fields below should we expect to actually be present?
     * </pre>
     */
    pamrac.Pamrac.PAMRACMessage.Type getType();

    /**
     * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
     */
    boolean hasInitBlobRequest();
    /**
     * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
     */
    pamrac.Pamrac.InitBlobRequest getInitBlobRequest();
    /**
     * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
     */
    pamrac.Pamrac.InitBlobRequestOrBuilder getInitBlobRequestOrBuilder();

    /**
     * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
     */
    boolean hasInitBlobResponse();
    /**
     * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
     */
    pamrac.Pamrac.InitBlobResponse getInitBlobResponse();
    /**
     * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
     */
    pamrac.Pamrac.InitBlobResponseOrBuilder getInitBlobResponseOrBuilder();

    /**
     * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
     */
    boolean hasBlobRequest();
    /**
     * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
     */
    pamrac.Pamrac.BlobRequest getBlobRequest();
    /**
     * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
     */
    pamrac.Pamrac.BlobRequestOrBuilder getBlobRequestOrBuilder();

    /**
     * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
     */
    boolean hasBlobResponse();
    /**
     * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
     */
    pamrac.Pamrac.BlobResponse getBlobResponse();
    /**
     * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
     */
    pamrac.Pamrac.BlobResponseOrBuilder getBlobResponseOrBuilder();

    /**
     * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
     */
    boolean hasInitUploadRequest();
    /**
     * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
     */
    pamrac.Pamrac.InitUploadRequest getInitUploadRequest();
    /**
     * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
     */
    pamrac.Pamrac.InitUploadRequestOrBuilder getInitUploadRequestOrBuilder();

    /**
     * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
     */
    boolean hasInitUploadResponse();
    /**
     * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
     */
    pamrac.Pamrac.InitUploadResponse getInitUploadResponse();
    /**
     * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
     */
    pamrac.Pamrac.InitUploadResponseOrBuilder getInitUploadResponseOrBuilder();

    /**
     * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
     */
    boolean hasBlobUpload();
    /**
     * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
     */
    pamrac.Pamrac.BlobUpload getBlobUpload();
    /**
     * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
     */
    pamrac.Pamrac.BlobUploadOrBuilder getBlobUploadOrBuilder();

    /**
     * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
     *
     * <pre>
     *optional InitShareUpload empty message; type only
     * </pre>
     */
    boolean hasNonceResponse();
    /**
     * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
     *
     * <pre>
     *optional InitShareUpload empty message; type only
     * </pre>
     */
    pamrac.Pamrac.NonceResponse getNonceResponse();
    /**
     * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
     *
     * <pre>
     *optional InitShareUpload empty message; type only
     * </pre>
     */
    pamrac.Pamrac.NonceResponseOrBuilder getNonceResponseOrBuilder();

    /**
     * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
     * </pre>
     */
    boolean hasShareUpload();
    /**
     * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
     * </pre>
     */
    pamrac.Pamrac.ShareUpload getShareUpload();
    /**
     * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
     * </pre>
     */
    pamrac.Pamrac.ShareUploadOrBuilder getShareUploadOrBuilder();

    /**
     * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
     */
    boolean hasInitShareRequest();
    /**
     * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
     */
    pamrac.Pamrac.InitShareRequest getInitShareRequest();
    /**
     * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
     */
    pamrac.Pamrac.InitShareRequestOrBuilder getInitShareRequestOrBuilder();

    /**
     * <code>optional .pamrac.ShareRequest share_request = 13;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareResponse init_share_response;
     * </pre>
     */
    boolean hasShareRequest();
    /**
     * <code>optional .pamrac.ShareRequest share_request = 13;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareResponse init_share_response;
     * </pre>
     */
    pamrac.Pamrac.ShareRequest getShareRequest();
    /**
     * <code>optional .pamrac.ShareRequest share_request = 13;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareResponse init_share_response;
     * </pre>
     */
    pamrac.Pamrac.ShareRequestOrBuilder getShareRequestOrBuilder();

    /**
     * <code>optional .pamrac.KeyShare key_share = 14;</code>
     */
    boolean hasKeyShare();
    /**
     * <code>optional .pamrac.KeyShare key_share = 14;</code>
     */
    pamrac.Pamrac.KeyShare getKeyShare();
    /**
     * <code>optional .pamrac.KeyShare key_share = 14;</code>
     */
    pamrac.Pamrac.KeyShareOrBuilder getKeyShareOrBuilder();

    /**
     * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
     */
    boolean hasInitShareListRequest();
    /**
     * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
     */
    pamrac.Pamrac.InitShareListRequest getInitShareListRequest();
    /**
     * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
     */
    pamrac.Pamrac.InitShareListRequestOrBuilder getInitShareListRequestOrBuilder();

    /**
     * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
     * </pre>
     */
    boolean hasShareListRequest();
    /**
     * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
     * </pre>
     */
    pamrac.Pamrac.ShareListRequest getShareListRequest();
    /**
     * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
     * </pre>
     */
    pamrac.Pamrac.ShareListRequestOrBuilder getShareListRequestOrBuilder();

    /**
     * <code>optional .pamrac.ShareList share_list = 17;</code>
     */
    boolean hasShareList();
    /**
     * <code>optional .pamrac.ShareList share_list = 17;</code>
     */
    pamrac.Pamrac.ShareList getShareList();
    /**
     * <code>optional .pamrac.ShareList share_list = 17;</code>
     */
    pamrac.Pamrac.ShareListOrBuilder getShareListOrBuilder();
  }
  /**
   * Protobuf type {@code pamrac.PAMRACMessage}
   */
  public static final class PAMRACMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.PAMRACMessage)
      PAMRACMessageOrBuilder {
    // Use PAMRACMessage.newBuilder() to construct.
    private PAMRACMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PAMRACMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PAMRACMessage defaultInstance;
    public static PAMRACMessage getDefaultInstance() {
      return defaultInstance;
    }

    public PAMRACMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PAMRACMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userFingerprint_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              pamrac.Pamrac.PAMRACMessage.Type value = pamrac.Pamrac.PAMRACMessage.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 26: {
              pamrac.Pamrac.InitBlobRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = initBlobRequest_.toBuilder();
              }
              initBlobRequest_ = input.readMessage(pamrac.Pamrac.InitBlobRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initBlobRequest_);
                initBlobRequest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              pamrac.Pamrac.InitBlobResponse.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = initBlobResponse_.toBuilder();
              }
              initBlobResponse_ = input.readMessage(pamrac.Pamrac.InitBlobResponse.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initBlobResponse_);
                initBlobResponse_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              pamrac.Pamrac.BlobRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = blobRequest_.toBuilder();
              }
              blobRequest_ = input.readMessage(pamrac.Pamrac.BlobRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blobRequest_);
                blobRequest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              pamrac.Pamrac.BlobResponse.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = blobResponse_.toBuilder();
              }
              blobResponse_ = input.readMessage(pamrac.Pamrac.BlobResponse.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blobResponse_);
                blobResponse_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              pamrac.Pamrac.InitUploadRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = initUploadRequest_.toBuilder();
              }
              initUploadRequest_ = input.readMessage(pamrac.Pamrac.InitUploadRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initUploadRequest_);
                initUploadRequest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              pamrac.Pamrac.InitUploadResponse.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = initUploadResponse_.toBuilder();
              }
              initUploadResponse_ = input.readMessage(pamrac.Pamrac.InitUploadResponse.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initUploadResponse_);
                initUploadResponse_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              pamrac.Pamrac.BlobUpload.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = blobUpload_.toBuilder();
              }
              blobUpload_ = input.readMessage(pamrac.Pamrac.BlobUpload.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blobUpload_);
                blobUpload_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 82: {
              pamrac.Pamrac.NonceResponse.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = nonceResponse_.toBuilder();
              }
              nonceResponse_ = input.readMessage(pamrac.Pamrac.NonceResponse.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nonceResponse_);
                nonceResponse_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 90: {
              pamrac.Pamrac.ShareUpload.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = shareUpload_.toBuilder();
              }
              shareUpload_ = input.readMessage(pamrac.Pamrac.ShareUpload.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shareUpload_);
                shareUpload_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 98: {
              pamrac.Pamrac.InitShareRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = initShareRequest_.toBuilder();
              }
              initShareRequest_ = input.readMessage(pamrac.Pamrac.InitShareRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initShareRequest_);
                initShareRequest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 106: {
              pamrac.Pamrac.ShareRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = shareRequest_.toBuilder();
              }
              shareRequest_ = input.readMessage(pamrac.Pamrac.ShareRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shareRequest_);
                shareRequest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 114: {
              pamrac.Pamrac.KeyShare.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = keyShare_.toBuilder();
              }
              keyShare_ = input.readMessage(pamrac.Pamrac.KeyShare.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keyShare_);
                keyShare_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 122: {
              pamrac.Pamrac.InitShareListRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = initShareListRequest_.toBuilder();
              }
              initShareListRequest_ = input.readMessage(pamrac.Pamrac.InitShareListRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initShareListRequest_);
                initShareListRequest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 130: {
              pamrac.Pamrac.ShareListRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = shareListRequest_.toBuilder();
              }
              shareListRequest_ = input.readMessage(pamrac.Pamrac.ShareListRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shareListRequest_);
                shareListRequest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 138: {
              pamrac.Pamrac.ShareList.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = shareList_.toBuilder();
              }
              shareList_ = input.readMessage(pamrac.Pamrac.ShareList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shareList_);
                shareList_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_PAMRACMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_PAMRACMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.PAMRACMessage.class, pamrac.Pamrac.PAMRACMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<PAMRACMessage> PARSER =
        new com.google.protobuf.AbstractParser<PAMRACMessage>() {
      public PAMRACMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PAMRACMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PAMRACMessage> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code pamrac.PAMRACMessage.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INIT_BLOB_REQUEST = 0;</code>
       */
      INIT_BLOB_REQUEST(0, 0),
      /**
       * <code>INIT_BLOB_RESPONSE = 1;</code>
       */
      INIT_BLOB_RESPONSE(1, 1),
      /**
       * <code>BLOB_REQUEST = 2;</code>
       */
      BLOB_REQUEST(2, 2),
      /**
       * <code>BLOB_RESPONSE = 3;</code>
       */
      BLOB_RESPONSE(3, 3),
      /**
       * <code>INIT_UPLOAD_REQUEST = 4;</code>
       */
      INIT_UPLOAD_REQUEST(4, 4),
      /**
       * <code>INIT_UPLOAD_RESPONSE = 5;</code>
       */
      INIT_UPLOAD_RESPONSE(5, 5),
      /**
       * <code>BLOB_UPLOAD = 6;</code>
       */
      BLOB_UPLOAD(6, 6),
      /**
       * <code>INIT_SHARE_UPLOAD = 7;</code>
       *
       * <pre>
       *NOTE: no message defined; just here in the enum.
       * </pre>
       */
      INIT_SHARE_UPLOAD(7, 7),
      /**
       * <code>NONCE_RESPNSE = 8;</code>
       */
      NONCE_RESPNSE(8, 8),
      /**
       * <code>SHARE_UPLOAD = 9;</code>
       *
       * <pre>
       *NOTE is now NonceResponse SHARE_UPLOAD_NONCE
       * </pre>
       */
      SHARE_UPLOAD(9, 9),
      /**
       * <code>INIT_SHARE_REQUEST = 10;</code>
       */
      INIT_SHARE_REQUEST(10, 10),
      /**
       * <code>SHARE_REQUEST = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse INIT_SHARE_RESPONSE
       * </pre>
       */
      SHARE_REQUEST(11, 11),
      /**
       * <code>KEY_SHARE = 12;</code>
       */
      KEY_SHARE(12, 12),
      /**
       * <code>INIT_SHARE_LIST_REQUEST = 13;</code>
       */
      INIT_SHARE_LIST_REQUEST(13, 13),
      /**
       * <code>SHARE_LIST_REQUEST = 14;</code>
       *
       * <pre>
       *NOTE is now NonceResponse INIT_SHARE_LIST_RESPONSE
       * </pre>
       */
      SHARE_LIST_REQUEST(14, 14),
      /**
       * <code>SHARE_LIST = 15;</code>
       */
      SHARE_LIST(15, 15),
      ;

      /**
       * <code>INIT_BLOB_REQUEST = 0;</code>
       */
      public static final int INIT_BLOB_REQUEST_VALUE = 0;
      /**
       * <code>INIT_BLOB_RESPONSE = 1;</code>
       */
      public static final int INIT_BLOB_RESPONSE_VALUE = 1;
      /**
       * <code>BLOB_REQUEST = 2;</code>
       */
      public static final int BLOB_REQUEST_VALUE = 2;
      /**
       * <code>BLOB_RESPONSE = 3;</code>
       */
      public static final int BLOB_RESPONSE_VALUE = 3;
      /**
       * <code>INIT_UPLOAD_REQUEST = 4;</code>
       */
      public static final int INIT_UPLOAD_REQUEST_VALUE = 4;
      /**
       * <code>INIT_UPLOAD_RESPONSE = 5;</code>
       */
      public static final int INIT_UPLOAD_RESPONSE_VALUE = 5;
      /**
       * <code>BLOB_UPLOAD = 6;</code>
       */
      public static final int BLOB_UPLOAD_VALUE = 6;
      /**
       * <code>INIT_SHARE_UPLOAD = 7;</code>
       *
       * <pre>
       *NOTE: no message defined; just here in the enum.
       * </pre>
       */
      public static final int INIT_SHARE_UPLOAD_VALUE = 7;
      /**
       * <code>NONCE_RESPNSE = 8;</code>
       */
      public static final int NONCE_RESPNSE_VALUE = 8;
      /**
       * <code>SHARE_UPLOAD = 9;</code>
       *
       * <pre>
       *NOTE is now NonceResponse SHARE_UPLOAD_NONCE
       * </pre>
       */
      public static final int SHARE_UPLOAD_VALUE = 9;
      /**
       * <code>INIT_SHARE_REQUEST = 10;</code>
       */
      public static final int INIT_SHARE_REQUEST_VALUE = 10;
      /**
       * <code>SHARE_REQUEST = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse INIT_SHARE_RESPONSE
       * </pre>
       */
      public static final int SHARE_REQUEST_VALUE = 11;
      /**
       * <code>KEY_SHARE = 12;</code>
       */
      public static final int KEY_SHARE_VALUE = 12;
      /**
       * <code>INIT_SHARE_LIST_REQUEST = 13;</code>
       */
      public static final int INIT_SHARE_LIST_REQUEST_VALUE = 13;
      /**
       * <code>SHARE_LIST_REQUEST = 14;</code>
       *
       * <pre>
       *NOTE is now NonceResponse INIT_SHARE_LIST_RESPONSE
       * </pre>
       */
      public static final int SHARE_LIST_REQUEST_VALUE = 14;
      /**
       * <code>SHARE_LIST = 15;</code>
       */
      public static final int SHARE_LIST_VALUE = 15;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 0: return INIT_BLOB_REQUEST;
          case 1: return INIT_BLOB_RESPONSE;
          case 2: return BLOB_REQUEST;
          case 3: return BLOB_RESPONSE;
          case 4: return INIT_UPLOAD_REQUEST;
          case 5: return INIT_UPLOAD_RESPONSE;
          case 6: return BLOB_UPLOAD;
          case 7: return INIT_SHARE_UPLOAD;
          case 8: return NONCE_RESPNSE;
          case 9: return SHARE_UPLOAD;
          case 10: return INIT_SHARE_REQUEST;
          case 11: return SHARE_REQUEST;
          case 12: return KEY_SHARE;
          case 13: return INIT_SHARE_LIST_REQUEST;
          case 14: return SHARE_LIST_REQUEST;
          case 15: return SHARE_LIST;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return pamrac.Pamrac.PAMRACMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:pamrac.PAMRACMessage.Type)
    }

    private int bitField0_;
    public static final int USER_FINGERPRINT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString userFingerprint_;
    /**
     * <code>optional bytes user_fingerprint = 1;</code>
     *
     * <pre>
     *A pretty painless way to make it easy to extend the server to hosting multiple users.
     *Just about every interaction with the server has an implicit ", and you are doing this with the files
     *of the user who you host". So, to allow the server to host multiple users, we can instead have every 
     *message be explicit about which user we're talking about, by specifying the user's fingerprint.
     * </pre>
     */
    public boolean hasUserFingerprint() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes user_fingerprint = 1;</code>
     *
     * <pre>
     *A pretty painless way to make it easy to extend the server to hosting multiple users.
     *Just about every interaction with the server has an implicit ", and you are doing this with the files
     *of the user who you host". So, to allow the server to host multiple users, we can instead have every 
     *message be explicit about which user we're talking about, by specifying the user's fingerprint.
     * </pre>
     */
    public com.google.protobuf.ByteString getUserFingerprint() {
      return userFingerprint_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private pamrac.Pamrac.PAMRACMessage.Type type_;
    /**
     * <code>required .pamrac.PAMRACMessage.Type type = 2;</code>
     *
     * <pre>
     *Which of these optional fields below should we expect to actually be present?
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .pamrac.PAMRACMessage.Type type = 2;</code>
     *
     * <pre>
     *Which of these optional fields below should we expect to actually be present?
     * </pre>
     */
    public pamrac.Pamrac.PAMRACMessage.Type getType() {
      return type_;
    }

    public static final int INIT_BLOB_REQUEST_FIELD_NUMBER = 3;
    private pamrac.Pamrac.InitBlobRequest initBlobRequest_;
    /**
     * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
     */
    public boolean hasInitBlobRequest() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
     */
    public pamrac.Pamrac.InitBlobRequest getInitBlobRequest() {
      return initBlobRequest_;
    }
    /**
     * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
     */
    public pamrac.Pamrac.InitBlobRequestOrBuilder getInitBlobRequestOrBuilder() {
      return initBlobRequest_;
    }

    public static final int INIT_BLOB_RESPONSE_FIELD_NUMBER = 4;
    private pamrac.Pamrac.InitBlobResponse initBlobResponse_;
    /**
     * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
     */
    public boolean hasInitBlobResponse() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
     */
    public pamrac.Pamrac.InitBlobResponse getInitBlobResponse() {
      return initBlobResponse_;
    }
    /**
     * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
     */
    public pamrac.Pamrac.InitBlobResponseOrBuilder getInitBlobResponseOrBuilder() {
      return initBlobResponse_;
    }

    public static final int BLOB_REQUEST_FIELD_NUMBER = 5;
    private pamrac.Pamrac.BlobRequest blobRequest_;
    /**
     * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
     */
    public boolean hasBlobRequest() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
     */
    public pamrac.Pamrac.BlobRequest getBlobRequest() {
      return blobRequest_;
    }
    /**
     * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
     */
    public pamrac.Pamrac.BlobRequestOrBuilder getBlobRequestOrBuilder() {
      return blobRequest_;
    }

    public static final int BLOB_RESPONSE_FIELD_NUMBER = 6;
    private pamrac.Pamrac.BlobResponse blobResponse_;
    /**
     * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
     */
    public boolean hasBlobResponse() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
     */
    public pamrac.Pamrac.BlobResponse getBlobResponse() {
      return blobResponse_;
    }
    /**
     * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
     */
    public pamrac.Pamrac.BlobResponseOrBuilder getBlobResponseOrBuilder() {
      return blobResponse_;
    }

    public static final int INIT_UPLOAD_REQUEST_FIELD_NUMBER = 7;
    private pamrac.Pamrac.InitUploadRequest initUploadRequest_;
    /**
     * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
     */
    public boolean hasInitUploadRequest() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
     */
    public pamrac.Pamrac.InitUploadRequest getInitUploadRequest() {
      return initUploadRequest_;
    }
    /**
     * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
     */
    public pamrac.Pamrac.InitUploadRequestOrBuilder getInitUploadRequestOrBuilder() {
      return initUploadRequest_;
    }

    public static final int INIT_UPLOAD_RESPONSE_FIELD_NUMBER = 8;
    private pamrac.Pamrac.InitUploadResponse initUploadResponse_;
    /**
     * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
     */
    public boolean hasInitUploadResponse() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
     */
    public pamrac.Pamrac.InitUploadResponse getInitUploadResponse() {
      return initUploadResponse_;
    }
    /**
     * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
     */
    public pamrac.Pamrac.InitUploadResponseOrBuilder getInitUploadResponseOrBuilder() {
      return initUploadResponse_;
    }

    public static final int BLOB_UPLOAD_FIELD_NUMBER = 9;
    private pamrac.Pamrac.BlobUpload blobUpload_;
    /**
     * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
     */
    public boolean hasBlobUpload() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
     */
    public pamrac.Pamrac.BlobUpload getBlobUpload() {
      return blobUpload_;
    }
    /**
     * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
     */
    public pamrac.Pamrac.BlobUploadOrBuilder getBlobUploadOrBuilder() {
      return blobUpload_;
    }

    public static final int NONCE_RESPONSE_FIELD_NUMBER = 10;
    private pamrac.Pamrac.NonceResponse nonceResponse_;
    /**
     * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
     *
     * <pre>
     *optional InitShareUpload empty message; type only
     * </pre>
     */
    public boolean hasNonceResponse() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
     *
     * <pre>
     *optional InitShareUpload empty message; type only
     * </pre>
     */
    public pamrac.Pamrac.NonceResponse getNonceResponse() {
      return nonceResponse_;
    }
    /**
     * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
     *
     * <pre>
     *optional InitShareUpload empty message; type only
     * </pre>
     */
    public pamrac.Pamrac.NonceResponseOrBuilder getNonceResponseOrBuilder() {
      return nonceResponse_;
    }

    public static final int SHARE_UPLOAD_FIELD_NUMBER = 11;
    private pamrac.Pamrac.ShareUpload shareUpload_;
    /**
     * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
     * </pre>
     */
    public boolean hasShareUpload() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
     * </pre>
     */
    public pamrac.Pamrac.ShareUpload getShareUpload() {
      return shareUpload_;
    }
    /**
     * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
     * </pre>
     */
    public pamrac.Pamrac.ShareUploadOrBuilder getShareUploadOrBuilder() {
      return shareUpload_;
    }

    public static final int INIT_SHARE_REQUEST_FIELD_NUMBER = 12;
    private pamrac.Pamrac.InitShareRequest initShareRequest_;
    /**
     * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
     */
    public boolean hasInitShareRequest() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
     */
    public pamrac.Pamrac.InitShareRequest getInitShareRequest() {
      return initShareRequest_;
    }
    /**
     * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
     */
    public pamrac.Pamrac.InitShareRequestOrBuilder getInitShareRequestOrBuilder() {
      return initShareRequest_;
    }

    public static final int SHARE_REQUEST_FIELD_NUMBER = 13;
    private pamrac.Pamrac.ShareRequest shareRequest_;
    /**
     * <code>optional .pamrac.ShareRequest share_request = 13;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareResponse init_share_response;
     * </pre>
     */
    public boolean hasShareRequest() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .pamrac.ShareRequest share_request = 13;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareResponse init_share_response;
     * </pre>
     */
    public pamrac.Pamrac.ShareRequest getShareRequest() {
      return shareRequest_;
    }
    /**
     * <code>optional .pamrac.ShareRequest share_request = 13;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareResponse init_share_response;
     * </pre>
     */
    public pamrac.Pamrac.ShareRequestOrBuilder getShareRequestOrBuilder() {
      return shareRequest_;
    }

    public static final int KEY_SHARE_FIELD_NUMBER = 14;
    private pamrac.Pamrac.KeyShare keyShare_;
    /**
     * <code>optional .pamrac.KeyShare key_share = 14;</code>
     */
    public boolean hasKeyShare() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .pamrac.KeyShare key_share = 14;</code>
     */
    public pamrac.Pamrac.KeyShare getKeyShare() {
      return keyShare_;
    }
    /**
     * <code>optional .pamrac.KeyShare key_share = 14;</code>
     */
    public pamrac.Pamrac.KeyShareOrBuilder getKeyShareOrBuilder() {
      return keyShare_;
    }

    public static final int INIT_SHARE_LIST_REQUEST_FIELD_NUMBER = 15;
    private pamrac.Pamrac.InitShareListRequest initShareListRequest_;
    /**
     * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
     */
    public boolean hasInitShareListRequest() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
     */
    public pamrac.Pamrac.InitShareListRequest getInitShareListRequest() {
      return initShareListRequest_;
    }
    /**
     * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
     */
    public pamrac.Pamrac.InitShareListRequestOrBuilder getInitShareListRequestOrBuilder() {
      return initShareListRequest_;
    }

    public static final int SHARE_LIST_REQUEST_FIELD_NUMBER = 16;
    private pamrac.Pamrac.ShareListRequest shareListRequest_;
    /**
     * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
     * </pre>
     */
    public boolean hasShareListRequest() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
     * </pre>
     */
    public pamrac.Pamrac.ShareListRequest getShareListRequest() {
      return shareListRequest_;
    }
    /**
     * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
     *
     * <pre>
     *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
     * </pre>
     */
    public pamrac.Pamrac.ShareListRequestOrBuilder getShareListRequestOrBuilder() {
      return shareListRequest_;
    }

    public static final int SHARE_LIST_FIELD_NUMBER = 17;
    private pamrac.Pamrac.ShareList shareList_;
    /**
     * <code>optional .pamrac.ShareList share_list = 17;</code>
     */
    public boolean hasShareList() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .pamrac.ShareList share_list = 17;</code>
     */
    public pamrac.Pamrac.ShareList getShareList() {
      return shareList_;
    }
    /**
     * <code>optional .pamrac.ShareList share_list = 17;</code>
     */
    public pamrac.Pamrac.ShareListOrBuilder getShareListOrBuilder() {
      return shareList_;
    }

    private void initFields() {
      userFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      type_ = pamrac.Pamrac.PAMRACMessage.Type.INIT_BLOB_REQUEST;
      initBlobRequest_ = pamrac.Pamrac.InitBlobRequest.getDefaultInstance();
      initBlobResponse_ = pamrac.Pamrac.InitBlobResponse.getDefaultInstance();
      blobRequest_ = pamrac.Pamrac.BlobRequest.getDefaultInstance();
      blobResponse_ = pamrac.Pamrac.BlobResponse.getDefaultInstance();
      initUploadRequest_ = pamrac.Pamrac.InitUploadRequest.getDefaultInstance();
      initUploadResponse_ = pamrac.Pamrac.InitUploadResponse.getDefaultInstance();
      blobUpload_ = pamrac.Pamrac.BlobUpload.getDefaultInstance();
      nonceResponse_ = pamrac.Pamrac.NonceResponse.getDefaultInstance();
      shareUpload_ = pamrac.Pamrac.ShareUpload.getDefaultInstance();
      initShareRequest_ = pamrac.Pamrac.InitShareRequest.getDefaultInstance();
      shareRequest_ = pamrac.Pamrac.ShareRequest.getDefaultInstance();
      keyShare_ = pamrac.Pamrac.KeyShare.getDefaultInstance();
      initShareListRequest_ = pamrac.Pamrac.InitShareListRequest.getDefaultInstance();
      shareListRequest_ = pamrac.Pamrac.ShareListRequest.getDefaultInstance();
      shareList_ = pamrac.Pamrac.ShareList.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasInitBlobRequest()) {
        if (!getInitBlobRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasInitBlobResponse()) {
        if (!getInitBlobResponse().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBlobRequest()) {
        if (!getBlobRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBlobResponse()) {
        if (!getBlobResponse().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasInitUploadRequest()) {
        if (!getInitUploadRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasInitUploadResponse()) {
        if (!getInitUploadResponse().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBlobUpload()) {
        if (!getBlobUpload().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasNonceResponse()) {
        if (!getNonceResponse().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasShareUpload()) {
        if (!getShareUpload().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasInitShareRequest()) {
        if (!getInitShareRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasShareRequest()) {
        if (!getShareRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasKeyShare()) {
        if (!getKeyShare().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasInitShareListRequest()) {
        if (!getInitShareListRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasShareListRequest()) {
        if (!getShareListRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasShareList()) {
        if (!getShareList().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, userFingerprint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, initBlobRequest_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, initBlobResponse_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, blobRequest_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, blobResponse_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, initUploadRequest_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, initUploadResponse_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, blobUpload_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, nonceResponse_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, shareUpload_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, initShareRequest_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(13, shareRequest_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(14, keyShare_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(15, initShareListRequest_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(16, shareListRequest_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(17, shareList_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, userFingerprint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, initBlobRequest_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, initBlobResponse_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, blobRequest_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, blobResponse_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, initUploadRequest_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, initUploadResponse_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, blobUpload_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, nonceResponse_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, shareUpload_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, initShareRequest_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, shareRequest_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, keyShare_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, initShareListRequest_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, shareListRequest_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, shareList_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.PAMRACMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.PAMRACMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.PAMRACMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.PAMRACMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.PAMRACMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.PAMRACMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.PAMRACMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.PAMRACMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.PAMRACMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.PAMRACMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.PAMRACMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.PAMRACMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.PAMRACMessage)
        pamrac.Pamrac.PAMRACMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_PAMRACMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_PAMRACMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.PAMRACMessage.class, pamrac.Pamrac.PAMRACMessage.Builder.class);
      }

      // Construct using pamrac.Pamrac.PAMRACMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInitBlobRequestFieldBuilder();
          getInitBlobResponseFieldBuilder();
          getBlobRequestFieldBuilder();
          getBlobResponseFieldBuilder();
          getInitUploadRequestFieldBuilder();
          getInitUploadResponseFieldBuilder();
          getBlobUploadFieldBuilder();
          getNonceResponseFieldBuilder();
          getShareUploadFieldBuilder();
          getInitShareRequestFieldBuilder();
          getShareRequestFieldBuilder();
          getKeyShareFieldBuilder();
          getInitShareListRequestFieldBuilder();
          getShareListRequestFieldBuilder();
          getShareListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = pamrac.Pamrac.PAMRACMessage.Type.INIT_BLOB_REQUEST;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (initBlobRequestBuilder_ == null) {
          initBlobRequest_ = pamrac.Pamrac.InitBlobRequest.getDefaultInstance();
        } else {
          initBlobRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (initBlobResponseBuilder_ == null) {
          initBlobResponse_ = pamrac.Pamrac.InitBlobResponse.getDefaultInstance();
        } else {
          initBlobResponseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (blobRequestBuilder_ == null) {
          blobRequest_ = pamrac.Pamrac.BlobRequest.getDefaultInstance();
        } else {
          blobRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (blobResponseBuilder_ == null) {
          blobResponse_ = pamrac.Pamrac.BlobResponse.getDefaultInstance();
        } else {
          blobResponseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (initUploadRequestBuilder_ == null) {
          initUploadRequest_ = pamrac.Pamrac.InitUploadRequest.getDefaultInstance();
        } else {
          initUploadRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (initUploadResponseBuilder_ == null) {
          initUploadResponse_ = pamrac.Pamrac.InitUploadResponse.getDefaultInstance();
        } else {
          initUploadResponseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (blobUploadBuilder_ == null) {
          blobUpload_ = pamrac.Pamrac.BlobUpload.getDefaultInstance();
        } else {
          blobUploadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (nonceResponseBuilder_ == null) {
          nonceResponse_ = pamrac.Pamrac.NonceResponse.getDefaultInstance();
        } else {
          nonceResponseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (shareUploadBuilder_ == null) {
          shareUpload_ = pamrac.Pamrac.ShareUpload.getDefaultInstance();
        } else {
          shareUploadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (initShareRequestBuilder_ == null) {
          initShareRequest_ = pamrac.Pamrac.InitShareRequest.getDefaultInstance();
        } else {
          initShareRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (shareRequestBuilder_ == null) {
          shareRequest_ = pamrac.Pamrac.ShareRequest.getDefaultInstance();
        } else {
          shareRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (keyShareBuilder_ == null) {
          keyShare_ = pamrac.Pamrac.KeyShare.getDefaultInstance();
        } else {
          keyShareBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (initShareListRequestBuilder_ == null) {
          initShareListRequest_ = pamrac.Pamrac.InitShareListRequest.getDefaultInstance();
        } else {
          initShareListRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (shareListRequestBuilder_ == null) {
          shareListRequest_ = pamrac.Pamrac.ShareListRequest.getDefaultInstance();
        } else {
          shareListRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (shareListBuilder_ == null) {
          shareList_ = pamrac.Pamrac.ShareList.getDefaultInstance();
        } else {
          shareListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_PAMRACMessage_descriptor;
      }

      public pamrac.Pamrac.PAMRACMessage getDefaultInstanceForType() {
        return pamrac.Pamrac.PAMRACMessage.getDefaultInstance();
      }

      public pamrac.Pamrac.PAMRACMessage build() {
        pamrac.Pamrac.PAMRACMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.PAMRACMessage buildPartial() {
        pamrac.Pamrac.PAMRACMessage result = new pamrac.Pamrac.PAMRACMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userFingerprint_ = userFingerprint_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (initBlobRequestBuilder_ == null) {
          result.initBlobRequest_ = initBlobRequest_;
        } else {
          result.initBlobRequest_ = initBlobRequestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (initBlobResponseBuilder_ == null) {
          result.initBlobResponse_ = initBlobResponse_;
        } else {
          result.initBlobResponse_ = initBlobResponseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (blobRequestBuilder_ == null) {
          result.blobRequest_ = blobRequest_;
        } else {
          result.blobRequest_ = blobRequestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (blobResponseBuilder_ == null) {
          result.blobResponse_ = blobResponse_;
        } else {
          result.blobResponse_ = blobResponseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (initUploadRequestBuilder_ == null) {
          result.initUploadRequest_ = initUploadRequest_;
        } else {
          result.initUploadRequest_ = initUploadRequestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (initUploadResponseBuilder_ == null) {
          result.initUploadResponse_ = initUploadResponse_;
        } else {
          result.initUploadResponse_ = initUploadResponseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (blobUploadBuilder_ == null) {
          result.blobUpload_ = blobUpload_;
        } else {
          result.blobUpload_ = blobUploadBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (nonceResponseBuilder_ == null) {
          result.nonceResponse_ = nonceResponse_;
        } else {
          result.nonceResponse_ = nonceResponseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (shareUploadBuilder_ == null) {
          result.shareUpload_ = shareUpload_;
        } else {
          result.shareUpload_ = shareUploadBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (initShareRequestBuilder_ == null) {
          result.initShareRequest_ = initShareRequest_;
        } else {
          result.initShareRequest_ = initShareRequestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (shareRequestBuilder_ == null) {
          result.shareRequest_ = shareRequest_;
        } else {
          result.shareRequest_ = shareRequestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (keyShareBuilder_ == null) {
          result.keyShare_ = keyShare_;
        } else {
          result.keyShare_ = keyShareBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (initShareListRequestBuilder_ == null) {
          result.initShareListRequest_ = initShareListRequest_;
        } else {
          result.initShareListRequest_ = initShareListRequestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (shareListRequestBuilder_ == null) {
          result.shareListRequest_ = shareListRequest_;
        } else {
          result.shareListRequest_ = shareListRequestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (shareListBuilder_ == null) {
          result.shareList_ = shareList_;
        } else {
          result.shareList_ = shareListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.PAMRACMessage) {
          return mergeFrom((pamrac.Pamrac.PAMRACMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.PAMRACMessage other) {
        if (other == pamrac.Pamrac.PAMRACMessage.getDefaultInstance()) return this;
        if (other.hasUserFingerprint()) {
          setUserFingerprint(other.getUserFingerprint());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasInitBlobRequest()) {
          mergeInitBlobRequest(other.getInitBlobRequest());
        }
        if (other.hasInitBlobResponse()) {
          mergeInitBlobResponse(other.getInitBlobResponse());
        }
        if (other.hasBlobRequest()) {
          mergeBlobRequest(other.getBlobRequest());
        }
        if (other.hasBlobResponse()) {
          mergeBlobResponse(other.getBlobResponse());
        }
        if (other.hasInitUploadRequest()) {
          mergeInitUploadRequest(other.getInitUploadRequest());
        }
        if (other.hasInitUploadResponse()) {
          mergeInitUploadResponse(other.getInitUploadResponse());
        }
        if (other.hasBlobUpload()) {
          mergeBlobUpload(other.getBlobUpload());
        }
        if (other.hasNonceResponse()) {
          mergeNonceResponse(other.getNonceResponse());
        }
        if (other.hasShareUpload()) {
          mergeShareUpload(other.getShareUpload());
        }
        if (other.hasInitShareRequest()) {
          mergeInitShareRequest(other.getInitShareRequest());
        }
        if (other.hasShareRequest()) {
          mergeShareRequest(other.getShareRequest());
        }
        if (other.hasKeyShare()) {
          mergeKeyShare(other.getKeyShare());
        }
        if (other.hasInitShareListRequest()) {
          mergeInitShareListRequest(other.getInitShareListRequest());
        }
        if (other.hasShareListRequest()) {
          mergeShareListRequest(other.getShareListRequest());
        }
        if (other.hasShareList()) {
          mergeShareList(other.getShareList());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasInitBlobRequest()) {
          if (!getInitBlobRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasInitBlobResponse()) {
          if (!getInitBlobResponse().isInitialized()) {
            
            return false;
          }
        }
        if (hasBlobRequest()) {
          if (!getBlobRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasBlobResponse()) {
          if (!getBlobResponse().isInitialized()) {
            
            return false;
          }
        }
        if (hasInitUploadRequest()) {
          if (!getInitUploadRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasInitUploadResponse()) {
          if (!getInitUploadResponse().isInitialized()) {
            
            return false;
          }
        }
        if (hasBlobUpload()) {
          if (!getBlobUpload().isInitialized()) {
            
            return false;
          }
        }
        if (hasNonceResponse()) {
          if (!getNonceResponse().isInitialized()) {
            
            return false;
          }
        }
        if (hasShareUpload()) {
          if (!getShareUpload().isInitialized()) {
            
            return false;
          }
        }
        if (hasInitShareRequest()) {
          if (!getInitShareRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasShareRequest()) {
          if (!getShareRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasKeyShare()) {
          if (!getKeyShare().isInitialized()) {
            
            return false;
          }
        }
        if (hasInitShareListRequest()) {
          if (!getInitShareListRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasShareListRequest()) {
          if (!getShareListRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasShareList()) {
          if (!getShareList().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.PAMRACMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.PAMRACMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString userFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes user_fingerprint = 1;</code>
       *
       * <pre>
       *A pretty painless way to make it easy to extend the server to hosting multiple users.
       *Just about every interaction with the server has an implicit ", and you are doing this with the files
       *of the user who you host". So, to allow the server to host multiple users, we can instead have every 
       *message be explicit about which user we're talking about, by specifying the user's fingerprint.
       * </pre>
       */
      public boolean hasUserFingerprint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes user_fingerprint = 1;</code>
       *
       * <pre>
       *A pretty painless way to make it easy to extend the server to hosting multiple users.
       *Just about every interaction with the server has an implicit ", and you are doing this with the files
       *of the user who you host". So, to allow the server to host multiple users, we can instead have every 
       *message be explicit about which user we're talking about, by specifying the user's fingerprint.
       * </pre>
       */
      public com.google.protobuf.ByteString getUserFingerprint() {
        return userFingerprint_;
      }
      /**
       * <code>optional bytes user_fingerprint = 1;</code>
       *
       * <pre>
       *A pretty painless way to make it easy to extend the server to hosting multiple users.
       *Just about every interaction with the server has an implicit ", and you are doing this with the files
       *of the user who you host". So, to allow the server to host multiple users, we can instead have every 
       *message be explicit about which user we're talking about, by specifying the user's fingerprint.
       * </pre>
       */
      public Builder setUserFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes user_fingerprint = 1;</code>
       *
       * <pre>
       *A pretty painless way to make it easy to extend the server to hosting multiple users.
       *Just about every interaction with the server has an implicit ", and you are doing this with the files
       *of the user who you host". So, to allow the server to host multiple users, we can instead have every 
       *message be explicit about which user we're talking about, by specifying the user's fingerprint.
       * </pre>
       */
      public Builder clearUserFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userFingerprint_ = getDefaultInstance().getUserFingerprint();
        onChanged();
        return this;
      }

      private pamrac.Pamrac.PAMRACMessage.Type type_ = pamrac.Pamrac.PAMRACMessage.Type.INIT_BLOB_REQUEST;
      /**
       * <code>required .pamrac.PAMRACMessage.Type type = 2;</code>
       *
       * <pre>
       *Which of these optional fields below should we expect to actually be present?
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .pamrac.PAMRACMessage.Type type = 2;</code>
       *
       * <pre>
       *Which of these optional fields below should we expect to actually be present?
       * </pre>
       */
      public pamrac.Pamrac.PAMRACMessage.Type getType() {
        return type_;
      }
      /**
       * <code>required .pamrac.PAMRACMessage.Type type = 2;</code>
       *
       * <pre>
       *Which of these optional fields below should we expect to actually be present?
       * </pre>
       */
      public Builder setType(pamrac.Pamrac.PAMRACMessage.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .pamrac.PAMRACMessage.Type type = 2;</code>
       *
       * <pre>
       *Which of these optional fields below should we expect to actually be present?
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = pamrac.Pamrac.PAMRACMessage.Type.INIT_BLOB_REQUEST;
        onChanged();
        return this;
      }

      private pamrac.Pamrac.InitBlobRequest initBlobRequest_ = pamrac.Pamrac.InitBlobRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitBlobRequest, pamrac.Pamrac.InitBlobRequest.Builder, pamrac.Pamrac.InitBlobRequestOrBuilder> initBlobRequestBuilder_;
      /**
       * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
       */
      public boolean hasInitBlobRequest() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
       */
      public pamrac.Pamrac.InitBlobRequest getInitBlobRequest() {
        if (initBlobRequestBuilder_ == null) {
          return initBlobRequest_;
        } else {
          return initBlobRequestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
       */
      public Builder setInitBlobRequest(pamrac.Pamrac.InitBlobRequest value) {
        if (initBlobRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initBlobRequest_ = value;
          onChanged();
        } else {
          initBlobRequestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
       */
      public Builder setInitBlobRequest(
          pamrac.Pamrac.InitBlobRequest.Builder builderForValue) {
        if (initBlobRequestBuilder_ == null) {
          initBlobRequest_ = builderForValue.build();
          onChanged();
        } else {
          initBlobRequestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
       */
      public Builder mergeInitBlobRequest(pamrac.Pamrac.InitBlobRequest value) {
        if (initBlobRequestBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              initBlobRequest_ != pamrac.Pamrac.InitBlobRequest.getDefaultInstance()) {
            initBlobRequest_ =
              pamrac.Pamrac.InitBlobRequest.newBuilder(initBlobRequest_).mergeFrom(value).buildPartial();
          } else {
            initBlobRequest_ = value;
          }
          onChanged();
        } else {
          initBlobRequestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
       */
      public Builder clearInitBlobRequest() {
        if (initBlobRequestBuilder_ == null) {
          initBlobRequest_ = pamrac.Pamrac.InitBlobRequest.getDefaultInstance();
          onChanged();
        } else {
          initBlobRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
       */
      public pamrac.Pamrac.InitBlobRequest.Builder getInitBlobRequestBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getInitBlobRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
       */
      public pamrac.Pamrac.InitBlobRequestOrBuilder getInitBlobRequestOrBuilder() {
        if (initBlobRequestBuilder_ != null) {
          return initBlobRequestBuilder_.getMessageOrBuilder();
        } else {
          return initBlobRequest_;
        }
      }
      /**
       * <code>optional .pamrac.InitBlobRequest init_blob_request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitBlobRequest, pamrac.Pamrac.InitBlobRequest.Builder, pamrac.Pamrac.InitBlobRequestOrBuilder> 
          getInitBlobRequestFieldBuilder() {
        if (initBlobRequestBuilder_ == null) {
          initBlobRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.InitBlobRequest, pamrac.Pamrac.InitBlobRequest.Builder, pamrac.Pamrac.InitBlobRequestOrBuilder>(
                  getInitBlobRequest(),
                  getParentForChildren(),
                  isClean());
          initBlobRequest_ = null;
        }
        return initBlobRequestBuilder_;
      }

      private pamrac.Pamrac.InitBlobResponse initBlobResponse_ = pamrac.Pamrac.InitBlobResponse.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitBlobResponse, pamrac.Pamrac.InitBlobResponse.Builder, pamrac.Pamrac.InitBlobResponseOrBuilder> initBlobResponseBuilder_;
      /**
       * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
       */
      public boolean hasInitBlobResponse() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
       */
      public pamrac.Pamrac.InitBlobResponse getInitBlobResponse() {
        if (initBlobResponseBuilder_ == null) {
          return initBlobResponse_;
        } else {
          return initBlobResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
       */
      public Builder setInitBlobResponse(pamrac.Pamrac.InitBlobResponse value) {
        if (initBlobResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initBlobResponse_ = value;
          onChanged();
        } else {
          initBlobResponseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
       */
      public Builder setInitBlobResponse(
          pamrac.Pamrac.InitBlobResponse.Builder builderForValue) {
        if (initBlobResponseBuilder_ == null) {
          initBlobResponse_ = builderForValue.build();
          onChanged();
        } else {
          initBlobResponseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
       */
      public Builder mergeInitBlobResponse(pamrac.Pamrac.InitBlobResponse value) {
        if (initBlobResponseBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              initBlobResponse_ != pamrac.Pamrac.InitBlobResponse.getDefaultInstance()) {
            initBlobResponse_ =
              pamrac.Pamrac.InitBlobResponse.newBuilder(initBlobResponse_).mergeFrom(value).buildPartial();
          } else {
            initBlobResponse_ = value;
          }
          onChanged();
        } else {
          initBlobResponseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
       */
      public Builder clearInitBlobResponse() {
        if (initBlobResponseBuilder_ == null) {
          initBlobResponse_ = pamrac.Pamrac.InitBlobResponse.getDefaultInstance();
          onChanged();
        } else {
          initBlobResponseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
       */
      public pamrac.Pamrac.InitBlobResponse.Builder getInitBlobResponseBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getInitBlobResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
       */
      public pamrac.Pamrac.InitBlobResponseOrBuilder getInitBlobResponseOrBuilder() {
        if (initBlobResponseBuilder_ != null) {
          return initBlobResponseBuilder_.getMessageOrBuilder();
        } else {
          return initBlobResponse_;
        }
      }
      /**
       * <code>optional .pamrac.InitBlobResponse init_blob_response = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitBlobResponse, pamrac.Pamrac.InitBlobResponse.Builder, pamrac.Pamrac.InitBlobResponseOrBuilder> 
          getInitBlobResponseFieldBuilder() {
        if (initBlobResponseBuilder_ == null) {
          initBlobResponseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.InitBlobResponse, pamrac.Pamrac.InitBlobResponse.Builder, pamrac.Pamrac.InitBlobResponseOrBuilder>(
                  getInitBlobResponse(),
                  getParentForChildren(),
                  isClean());
          initBlobResponse_ = null;
        }
        return initBlobResponseBuilder_;
      }

      private pamrac.Pamrac.BlobRequest blobRequest_ = pamrac.Pamrac.BlobRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.BlobRequest, pamrac.Pamrac.BlobRequest.Builder, pamrac.Pamrac.BlobRequestOrBuilder> blobRequestBuilder_;
      /**
       * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
       */
      public boolean hasBlobRequest() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
       */
      public pamrac.Pamrac.BlobRequest getBlobRequest() {
        if (blobRequestBuilder_ == null) {
          return blobRequest_;
        } else {
          return blobRequestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
       */
      public Builder setBlobRequest(pamrac.Pamrac.BlobRequest value) {
        if (blobRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blobRequest_ = value;
          onChanged();
        } else {
          blobRequestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
       */
      public Builder setBlobRequest(
          pamrac.Pamrac.BlobRequest.Builder builderForValue) {
        if (blobRequestBuilder_ == null) {
          blobRequest_ = builderForValue.build();
          onChanged();
        } else {
          blobRequestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
       */
      public Builder mergeBlobRequest(pamrac.Pamrac.BlobRequest value) {
        if (blobRequestBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              blobRequest_ != pamrac.Pamrac.BlobRequest.getDefaultInstance()) {
            blobRequest_ =
              pamrac.Pamrac.BlobRequest.newBuilder(blobRequest_).mergeFrom(value).buildPartial();
          } else {
            blobRequest_ = value;
          }
          onChanged();
        } else {
          blobRequestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
       */
      public Builder clearBlobRequest() {
        if (blobRequestBuilder_ == null) {
          blobRequest_ = pamrac.Pamrac.BlobRequest.getDefaultInstance();
          onChanged();
        } else {
          blobRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
       */
      public pamrac.Pamrac.BlobRequest.Builder getBlobRequestBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBlobRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
       */
      public pamrac.Pamrac.BlobRequestOrBuilder getBlobRequestOrBuilder() {
        if (blobRequestBuilder_ != null) {
          return blobRequestBuilder_.getMessageOrBuilder();
        } else {
          return blobRequest_;
        }
      }
      /**
       * <code>optional .pamrac.BlobRequest blob_request = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.BlobRequest, pamrac.Pamrac.BlobRequest.Builder, pamrac.Pamrac.BlobRequestOrBuilder> 
          getBlobRequestFieldBuilder() {
        if (blobRequestBuilder_ == null) {
          blobRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.BlobRequest, pamrac.Pamrac.BlobRequest.Builder, pamrac.Pamrac.BlobRequestOrBuilder>(
                  getBlobRequest(),
                  getParentForChildren(),
                  isClean());
          blobRequest_ = null;
        }
        return blobRequestBuilder_;
      }

      private pamrac.Pamrac.BlobResponse blobResponse_ = pamrac.Pamrac.BlobResponse.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.BlobResponse, pamrac.Pamrac.BlobResponse.Builder, pamrac.Pamrac.BlobResponseOrBuilder> blobResponseBuilder_;
      /**
       * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
       */
      public boolean hasBlobResponse() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
       */
      public pamrac.Pamrac.BlobResponse getBlobResponse() {
        if (blobResponseBuilder_ == null) {
          return blobResponse_;
        } else {
          return blobResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
       */
      public Builder setBlobResponse(pamrac.Pamrac.BlobResponse value) {
        if (blobResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blobResponse_ = value;
          onChanged();
        } else {
          blobResponseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
       */
      public Builder setBlobResponse(
          pamrac.Pamrac.BlobResponse.Builder builderForValue) {
        if (blobResponseBuilder_ == null) {
          blobResponse_ = builderForValue.build();
          onChanged();
        } else {
          blobResponseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
       */
      public Builder mergeBlobResponse(pamrac.Pamrac.BlobResponse value) {
        if (blobResponseBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              blobResponse_ != pamrac.Pamrac.BlobResponse.getDefaultInstance()) {
            blobResponse_ =
              pamrac.Pamrac.BlobResponse.newBuilder(blobResponse_).mergeFrom(value).buildPartial();
          } else {
            blobResponse_ = value;
          }
          onChanged();
        } else {
          blobResponseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
       */
      public Builder clearBlobResponse() {
        if (blobResponseBuilder_ == null) {
          blobResponse_ = pamrac.Pamrac.BlobResponse.getDefaultInstance();
          onChanged();
        } else {
          blobResponseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
       */
      public pamrac.Pamrac.BlobResponse.Builder getBlobResponseBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getBlobResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
       */
      public pamrac.Pamrac.BlobResponseOrBuilder getBlobResponseOrBuilder() {
        if (blobResponseBuilder_ != null) {
          return blobResponseBuilder_.getMessageOrBuilder();
        } else {
          return blobResponse_;
        }
      }
      /**
       * <code>optional .pamrac.BlobResponse blob_response = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.BlobResponse, pamrac.Pamrac.BlobResponse.Builder, pamrac.Pamrac.BlobResponseOrBuilder> 
          getBlobResponseFieldBuilder() {
        if (blobResponseBuilder_ == null) {
          blobResponseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.BlobResponse, pamrac.Pamrac.BlobResponse.Builder, pamrac.Pamrac.BlobResponseOrBuilder>(
                  getBlobResponse(),
                  getParentForChildren(),
                  isClean());
          blobResponse_ = null;
        }
        return blobResponseBuilder_;
      }

      private pamrac.Pamrac.InitUploadRequest initUploadRequest_ = pamrac.Pamrac.InitUploadRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitUploadRequest, pamrac.Pamrac.InitUploadRequest.Builder, pamrac.Pamrac.InitUploadRequestOrBuilder> initUploadRequestBuilder_;
      /**
       * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
       */
      public boolean hasInitUploadRequest() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
       */
      public pamrac.Pamrac.InitUploadRequest getInitUploadRequest() {
        if (initUploadRequestBuilder_ == null) {
          return initUploadRequest_;
        } else {
          return initUploadRequestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
       */
      public Builder setInitUploadRequest(pamrac.Pamrac.InitUploadRequest value) {
        if (initUploadRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initUploadRequest_ = value;
          onChanged();
        } else {
          initUploadRequestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
       */
      public Builder setInitUploadRequest(
          pamrac.Pamrac.InitUploadRequest.Builder builderForValue) {
        if (initUploadRequestBuilder_ == null) {
          initUploadRequest_ = builderForValue.build();
          onChanged();
        } else {
          initUploadRequestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
       */
      public Builder mergeInitUploadRequest(pamrac.Pamrac.InitUploadRequest value) {
        if (initUploadRequestBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              initUploadRequest_ != pamrac.Pamrac.InitUploadRequest.getDefaultInstance()) {
            initUploadRequest_ =
              pamrac.Pamrac.InitUploadRequest.newBuilder(initUploadRequest_).mergeFrom(value).buildPartial();
          } else {
            initUploadRequest_ = value;
          }
          onChanged();
        } else {
          initUploadRequestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
       */
      public Builder clearInitUploadRequest() {
        if (initUploadRequestBuilder_ == null) {
          initUploadRequest_ = pamrac.Pamrac.InitUploadRequest.getDefaultInstance();
          onChanged();
        } else {
          initUploadRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
       */
      public pamrac.Pamrac.InitUploadRequest.Builder getInitUploadRequestBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getInitUploadRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
       */
      public pamrac.Pamrac.InitUploadRequestOrBuilder getInitUploadRequestOrBuilder() {
        if (initUploadRequestBuilder_ != null) {
          return initUploadRequestBuilder_.getMessageOrBuilder();
        } else {
          return initUploadRequest_;
        }
      }
      /**
       * <code>optional .pamrac.InitUploadRequest init_upload_request = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitUploadRequest, pamrac.Pamrac.InitUploadRequest.Builder, pamrac.Pamrac.InitUploadRequestOrBuilder> 
          getInitUploadRequestFieldBuilder() {
        if (initUploadRequestBuilder_ == null) {
          initUploadRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.InitUploadRequest, pamrac.Pamrac.InitUploadRequest.Builder, pamrac.Pamrac.InitUploadRequestOrBuilder>(
                  getInitUploadRequest(),
                  getParentForChildren(),
                  isClean());
          initUploadRequest_ = null;
        }
        return initUploadRequestBuilder_;
      }

      private pamrac.Pamrac.InitUploadResponse initUploadResponse_ = pamrac.Pamrac.InitUploadResponse.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitUploadResponse, pamrac.Pamrac.InitUploadResponse.Builder, pamrac.Pamrac.InitUploadResponseOrBuilder> initUploadResponseBuilder_;
      /**
       * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
       */
      public boolean hasInitUploadResponse() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
       */
      public pamrac.Pamrac.InitUploadResponse getInitUploadResponse() {
        if (initUploadResponseBuilder_ == null) {
          return initUploadResponse_;
        } else {
          return initUploadResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
       */
      public Builder setInitUploadResponse(pamrac.Pamrac.InitUploadResponse value) {
        if (initUploadResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initUploadResponse_ = value;
          onChanged();
        } else {
          initUploadResponseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
       */
      public Builder setInitUploadResponse(
          pamrac.Pamrac.InitUploadResponse.Builder builderForValue) {
        if (initUploadResponseBuilder_ == null) {
          initUploadResponse_ = builderForValue.build();
          onChanged();
        } else {
          initUploadResponseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
       */
      public Builder mergeInitUploadResponse(pamrac.Pamrac.InitUploadResponse value) {
        if (initUploadResponseBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              initUploadResponse_ != pamrac.Pamrac.InitUploadResponse.getDefaultInstance()) {
            initUploadResponse_ =
              pamrac.Pamrac.InitUploadResponse.newBuilder(initUploadResponse_).mergeFrom(value).buildPartial();
          } else {
            initUploadResponse_ = value;
          }
          onChanged();
        } else {
          initUploadResponseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
       */
      public Builder clearInitUploadResponse() {
        if (initUploadResponseBuilder_ == null) {
          initUploadResponse_ = pamrac.Pamrac.InitUploadResponse.getDefaultInstance();
          onChanged();
        } else {
          initUploadResponseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
       */
      public pamrac.Pamrac.InitUploadResponse.Builder getInitUploadResponseBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getInitUploadResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
       */
      public pamrac.Pamrac.InitUploadResponseOrBuilder getInitUploadResponseOrBuilder() {
        if (initUploadResponseBuilder_ != null) {
          return initUploadResponseBuilder_.getMessageOrBuilder();
        } else {
          return initUploadResponse_;
        }
      }
      /**
       * <code>optional .pamrac.InitUploadResponse init_upload_response = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitUploadResponse, pamrac.Pamrac.InitUploadResponse.Builder, pamrac.Pamrac.InitUploadResponseOrBuilder> 
          getInitUploadResponseFieldBuilder() {
        if (initUploadResponseBuilder_ == null) {
          initUploadResponseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.InitUploadResponse, pamrac.Pamrac.InitUploadResponse.Builder, pamrac.Pamrac.InitUploadResponseOrBuilder>(
                  getInitUploadResponse(),
                  getParentForChildren(),
                  isClean());
          initUploadResponse_ = null;
        }
        return initUploadResponseBuilder_;
      }

      private pamrac.Pamrac.BlobUpload blobUpload_ = pamrac.Pamrac.BlobUpload.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.BlobUpload, pamrac.Pamrac.BlobUpload.Builder, pamrac.Pamrac.BlobUploadOrBuilder> blobUploadBuilder_;
      /**
       * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
       */
      public boolean hasBlobUpload() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
       */
      public pamrac.Pamrac.BlobUpload getBlobUpload() {
        if (blobUploadBuilder_ == null) {
          return blobUpload_;
        } else {
          return blobUploadBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
       */
      public Builder setBlobUpload(pamrac.Pamrac.BlobUpload value) {
        if (blobUploadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blobUpload_ = value;
          onChanged();
        } else {
          blobUploadBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
       */
      public Builder setBlobUpload(
          pamrac.Pamrac.BlobUpload.Builder builderForValue) {
        if (blobUploadBuilder_ == null) {
          blobUpload_ = builderForValue.build();
          onChanged();
        } else {
          blobUploadBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
       */
      public Builder mergeBlobUpload(pamrac.Pamrac.BlobUpload value) {
        if (blobUploadBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              blobUpload_ != pamrac.Pamrac.BlobUpload.getDefaultInstance()) {
            blobUpload_ =
              pamrac.Pamrac.BlobUpload.newBuilder(blobUpload_).mergeFrom(value).buildPartial();
          } else {
            blobUpload_ = value;
          }
          onChanged();
        } else {
          blobUploadBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
       */
      public Builder clearBlobUpload() {
        if (blobUploadBuilder_ == null) {
          blobUpload_ = pamrac.Pamrac.BlobUpload.getDefaultInstance();
          onChanged();
        } else {
          blobUploadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
       */
      public pamrac.Pamrac.BlobUpload.Builder getBlobUploadBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getBlobUploadFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
       */
      public pamrac.Pamrac.BlobUploadOrBuilder getBlobUploadOrBuilder() {
        if (blobUploadBuilder_ != null) {
          return blobUploadBuilder_.getMessageOrBuilder();
        } else {
          return blobUpload_;
        }
      }
      /**
       * <code>optional .pamrac.BlobUpload blob_upload = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.BlobUpload, pamrac.Pamrac.BlobUpload.Builder, pamrac.Pamrac.BlobUploadOrBuilder> 
          getBlobUploadFieldBuilder() {
        if (blobUploadBuilder_ == null) {
          blobUploadBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.BlobUpload, pamrac.Pamrac.BlobUpload.Builder, pamrac.Pamrac.BlobUploadOrBuilder>(
                  getBlobUpload(),
                  getParentForChildren(),
                  isClean());
          blobUpload_ = null;
        }
        return blobUploadBuilder_;
      }

      private pamrac.Pamrac.NonceResponse nonceResponse_ = pamrac.Pamrac.NonceResponse.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.NonceResponse, pamrac.Pamrac.NonceResponse.Builder, pamrac.Pamrac.NonceResponseOrBuilder> nonceResponseBuilder_;
      /**
       * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
       *
       * <pre>
       *optional InitShareUpload empty message; type only
       * </pre>
       */
      public boolean hasNonceResponse() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
       *
       * <pre>
       *optional InitShareUpload empty message; type only
       * </pre>
       */
      public pamrac.Pamrac.NonceResponse getNonceResponse() {
        if (nonceResponseBuilder_ == null) {
          return nonceResponse_;
        } else {
          return nonceResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
       *
       * <pre>
       *optional InitShareUpload empty message; type only
       * </pre>
       */
      public Builder setNonceResponse(pamrac.Pamrac.NonceResponse value) {
        if (nonceResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nonceResponse_ = value;
          onChanged();
        } else {
          nonceResponseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
       *
       * <pre>
       *optional InitShareUpload empty message; type only
       * </pre>
       */
      public Builder setNonceResponse(
          pamrac.Pamrac.NonceResponse.Builder builderForValue) {
        if (nonceResponseBuilder_ == null) {
          nonceResponse_ = builderForValue.build();
          onChanged();
        } else {
          nonceResponseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
       *
       * <pre>
       *optional InitShareUpload empty message; type only
       * </pre>
       */
      public Builder mergeNonceResponse(pamrac.Pamrac.NonceResponse value) {
        if (nonceResponseBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              nonceResponse_ != pamrac.Pamrac.NonceResponse.getDefaultInstance()) {
            nonceResponse_ =
              pamrac.Pamrac.NonceResponse.newBuilder(nonceResponse_).mergeFrom(value).buildPartial();
          } else {
            nonceResponse_ = value;
          }
          onChanged();
        } else {
          nonceResponseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
       *
       * <pre>
       *optional InitShareUpload empty message; type only
       * </pre>
       */
      public Builder clearNonceResponse() {
        if (nonceResponseBuilder_ == null) {
          nonceResponse_ = pamrac.Pamrac.NonceResponse.getDefaultInstance();
          onChanged();
        } else {
          nonceResponseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
       *
       * <pre>
       *optional InitShareUpload empty message; type only
       * </pre>
       */
      public pamrac.Pamrac.NonceResponse.Builder getNonceResponseBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getNonceResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
       *
       * <pre>
       *optional InitShareUpload empty message; type only
       * </pre>
       */
      public pamrac.Pamrac.NonceResponseOrBuilder getNonceResponseOrBuilder() {
        if (nonceResponseBuilder_ != null) {
          return nonceResponseBuilder_.getMessageOrBuilder();
        } else {
          return nonceResponse_;
        }
      }
      /**
       * <code>optional .pamrac.NonceResponse nonce_response = 10;</code>
       *
       * <pre>
       *optional InitShareUpload empty message; type only
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.NonceResponse, pamrac.Pamrac.NonceResponse.Builder, pamrac.Pamrac.NonceResponseOrBuilder> 
          getNonceResponseFieldBuilder() {
        if (nonceResponseBuilder_ == null) {
          nonceResponseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.NonceResponse, pamrac.Pamrac.NonceResponse.Builder, pamrac.Pamrac.NonceResponseOrBuilder>(
                  getNonceResponse(),
                  getParentForChildren(),
                  isClean());
          nonceResponse_ = null;
        }
        return nonceResponseBuilder_;
      }

      private pamrac.Pamrac.ShareUpload shareUpload_ = pamrac.Pamrac.ShareUpload.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.ShareUpload, pamrac.Pamrac.ShareUpload.Builder, pamrac.Pamrac.ShareUploadOrBuilder> shareUploadBuilder_;
      /**
       * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
       * </pre>
       */
      public boolean hasShareUpload() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
       * </pre>
       */
      public pamrac.Pamrac.ShareUpload getShareUpload() {
        if (shareUploadBuilder_ == null) {
          return shareUpload_;
        } else {
          return shareUploadBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
       * </pre>
       */
      public Builder setShareUpload(pamrac.Pamrac.ShareUpload value) {
        if (shareUploadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shareUpload_ = value;
          onChanged();
        } else {
          shareUploadBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
       * </pre>
       */
      public Builder setShareUpload(
          pamrac.Pamrac.ShareUpload.Builder builderForValue) {
        if (shareUploadBuilder_ == null) {
          shareUpload_ = builderForValue.build();
          onChanged();
        } else {
          shareUploadBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
       * </pre>
       */
      public Builder mergeShareUpload(pamrac.Pamrac.ShareUpload value) {
        if (shareUploadBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              shareUpload_ != pamrac.Pamrac.ShareUpload.getDefaultInstance()) {
            shareUpload_ =
              pamrac.Pamrac.ShareUpload.newBuilder(shareUpload_).mergeFrom(value).buildPartial();
          } else {
            shareUpload_ = value;
          }
          onChanged();
        } else {
          shareUploadBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
       * </pre>
       */
      public Builder clearShareUpload() {
        if (shareUploadBuilder_ == null) {
          shareUpload_ = pamrac.Pamrac.ShareUpload.getDefaultInstance();
          onChanged();
        } else {
          shareUploadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
       * </pre>
       */
      public pamrac.Pamrac.ShareUpload.Builder getShareUploadBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getShareUploadFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
       * </pre>
       */
      public pamrac.Pamrac.ShareUploadOrBuilder getShareUploadOrBuilder() {
        if (shareUploadBuilder_ != null) {
          return shareUploadBuilder_.getMessageOrBuilder();
        } else {
          return shareUpload_;
        }
      }
      /**
       * <code>optional .pamrac.ShareUpload share_upload = 11;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional ShareUploadNonce share_upload_nonce;
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.ShareUpload, pamrac.Pamrac.ShareUpload.Builder, pamrac.Pamrac.ShareUploadOrBuilder> 
          getShareUploadFieldBuilder() {
        if (shareUploadBuilder_ == null) {
          shareUploadBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.ShareUpload, pamrac.Pamrac.ShareUpload.Builder, pamrac.Pamrac.ShareUploadOrBuilder>(
                  getShareUpload(),
                  getParentForChildren(),
                  isClean());
          shareUpload_ = null;
        }
        return shareUploadBuilder_;
      }

      private pamrac.Pamrac.InitShareRequest initShareRequest_ = pamrac.Pamrac.InitShareRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitShareRequest, pamrac.Pamrac.InitShareRequest.Builder, pamrac.Pamrac.InitShareRequestOrBuilder> initShareRequestBuilder_;
      /**
       * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
       */
      public boolean hasInitShareRequest() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
       */
      public pamrac.Pamrac.InitShareRequest getInitShareRequest() {
        if (initShareRequestBuilder_ == null) {
          return initShareRequest_;
        } else {
          return initShareRequestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
       */
      public Builder setInitShareRequest(pamrac.Pamrac.InitShareRequest value) {
        if (initShareRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initShareRequest_ = value;
          onChanged();
        } else {
          initShareRequestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
       */
      public Builder setInitShareRequest(
          pamrac.Pamrac.InitShareRequest.Builder builderForValue) {
        if (initShareRequestBuilder_ == null) {
          initShareRequest_ = builderForValue.build();
          onChanged();
        } else {
          initShareRequestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
       */
      public Builder mergeInitShareRequest(pamrac.Pamrac.InitShareRequest value) {
        if (initShareRequestBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              initShareRequest_ != pamrac.Pamrac.InitShareRequest.getDefaultInstance()) {
            initShareRequest_ =
              pamrac.Pamrac.InitShareRequest.newBuilder(initShareRequest_).mergeFrom(value).buildPartial();
          } else {
            initShareRequest_ = value;
          }
          onChanged();
        } else {
          initShareRequestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
       */
      public Builder clearInitShareRequest() {
        if (initShareRequestBuilder_ == null) {
          initShareRequest_ = pamrac.Pamrac.InitShareRequest.getDefaultInstance();
          onChanged();
        } else {
          initShareRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
       */
      public pamrac.Pamrac.InitShareRequest.Builder getInitShareRequestBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getInitShareRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
       */
      public pamrac.Pamrac.InitShareRequestOrBuilder getInitShareRequestOrBuilder() {
        if (initShareRequestBuilder_ != null) {
          return initShareRequestBuilder_.getMessageOrBuilder();
        } else {
          return initShareRequest_;
        }
      }
      /**
       * <code>optional .pamrac.InitShareRequest init_share_request = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitShareRequest, pamrac.Pamrac.InitShareRequest.Builder, pamrac.Pamrac.InitShareRequestOrBuilder> 
          getInitShareRequestFieldBuilder() {
        if (initShareRequestBuilder_ == null) {
          initShareRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.InitShareRequest, pamrac.Pamrac.InitShareRequest.Builder, pamrac.Pamrac.InitShareRequestOrBuilder>(
                  getInitShareRequest(),
                  getParentForChildren(),
                  isClean());
          initShareRequest_ = null;
        }
        return initShareRequestBuilder_;
      }

      private pamrac.Pamrac.ShareRequest shareRequest_ = pamrac.Pamrac.ShareRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.ShareRequest, pamrac.Pamrac.ShareRequest.Builder, pamrac.Pamrac.ShareRequestOrBuilder> shareRequestBuilder_;
      /**
       * <code>optional .pamrac.ShareRequest share_request = 13;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareResponse init_share_response;
       * </pre>
       */
      public boolean hasShareRequest() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .pamrac.ShareRequest share_request = 13;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareResponse init_share_response;
       * </pre>
       */
      public pamrac.Pamrac.ShareRequest getShareRequest() {
        if (shareRequestBuilder_ == null) {
          return shareRequest_;
        } else {
          return shareRequestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.ShareRequest share_request = 13;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareResponse init_share_response;
       * </pre>
       */
      public Builder setShareRequest(pamrac.Pamrac.ShareRequest value) {
        if (shareRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shareRequest_ = value;
          onChanged();
        } else {
          shareRequestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareRequest share_request = 13;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareResponse init_share_response;
       * </pre>
       */
      public Builder setShareRequest(
          pamrac.Pamrac.ShareRequest.Builder builderForValue) {
        if (shareRequestBuilder_ == null) {
          shareRequest_ = builderForValue.build();
          onChanged();
        } else {
          shareRequestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareRequest share_request = 13;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareResponse init_share_response;
       * </pre>
       */
      public Builder mergeShareRequest(pamrac.Pamrac.ShareRequest value) {
        if (shareRequestBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              shareRequest_ != pamrac.Pamrac.ShareRequest.getDefaultInstance()) {
            shareRequest_ =
              pamrac.Pamrac.ShareRequest.newBuilder(shareRequest_).mergeFrom(value).buildPartial();
          } else {
            shareRequest_ = value;
          }
          onChanged();
        } else {
          shareRequestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareRequest share_request = 13;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareResponse init_share_response;
       * </pre>
       */
      public Builder clearShareRequest() {
        if (shareRequestBuilder_ == null) {
          shareRequest_ = pamrac.Pamrac.ShareRequest.getDefaultInstance();
          onChanged();
        } else {
          shareRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .pamrac.ShareRequest share_request = 13;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareResponse init_share_response;
       * </pre>
       */
      public pamrac.Pamrac.ShareRequest.Builder getShareRequestBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getShareRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.ShareRequest share_request = 13;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareResponse init_share_response;
       * </pre>
       */
      public pamrac.Pamrac.ShareRequestOrBuilder getShareRequestOrBuilder() {
        if (shareRequestBuilder_ != null) {
          return shareRequestBuilder_.getMessageOrBuilder();
        } else {
          return shareRequest_;
        }
      }
      /**
       * <code>optional .pamrac.ShareRequest share_request = 13;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareResponse init_share_response;
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.ShareRequest, pamrac.Pamrac.ShareRequest.Builder, pamrac.Pamrac.ShareRequestOrBuilder> 
          getShareRequestFieldBuilder() {
        if (shareRequestBuilder_ == null) {
          shareRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.ShareRequest, pamrac.Pamrac.ShareRequest.Builder, pamrac.Pamrac.ShareRequestOrBuilder>(
                  getShareRequest(),
                  getParentForChildren(),
                  isClean());
          shareRequest_ = null;
        }
        return shareRequestBuilder_;
      }

      private pamrac.Pamrac.KeyShare keyShare_ = pamrac.Pamrac.KeyShare.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.KeyShare, pamrac.Pamrac.KeyShare.Builder, pamrac.Pamrac.KeyShareOrBuilder> keyShareBuilder_;
      /**
       * <code>optional .pamrac.KeyShare key_share = 14;</code>
       */
      public boolean hasKeyShare() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .pamrac.KeyShare key_share = 14;</code>
       */
      public pamrac.Pamrac.KeyShare getKeyShare() {
        if (keyShareBuilder_ == null) {
          return keyShare_;
        } else {
          return keyShareBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.KeyShare key_share = 14;</code>
       */
      public Builder setKeyShare(pamrac.Pamrac.KeyShare value) {
        if (keyShareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyShare_ = value;
          onChanged();
        } else {
          keyShareBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .pamrac.KeyShare key_share = 14;</code>
       */
      public Builder setKeyShare(
          pamrac.Pamrac.KeyShare.Builder builderForValue) {
        if (keyShareBuilder_ == null) {
          keyShare_ = builderForValue.build();
          onChanged();
        } else {
          keyShareBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .pamrac.KeyShare key_share = 14;</code>
       */
      public Builder mergeKeyShare(pamrac.Pamrac.KeyShare value) {
        if (keyShareBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              keyShare_ != pamrac.Pamrac.KeyShare.getDefaultInstance()) {
            keyShare_ =
              pamrac.Pamrac.KeyShare.newBuilder(keyShare_).mergeFrom(value).buildPartial();
          } else {
            keyShare_ = value;
          }
          onChanged();
        } else {
          keyShareBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .pamrac.KeyShare key_share = 14;</code>
       */
      public Builder clearKeyShare() {
        if (keyShareBuilder_ == null) {
          keyShare_ = pamrac.Pamrac.KeyShare.getDefaultInstance();
          onChanged();
        } else {
          keyShareBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .pamrac.KeyShare key_share = 14;</code>
       */
      public pamrac.Pamrac.KeyShare.Builder getKeyShareBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getKeyShareFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.KeyShare key_share = 14;</code>
       */
      public pamrac.Pamrac.KeyShareOrBuilder getKeyShareOrBuilder() {
        if (keyShareBuilder_ != null) {
          return keyShareBuilder_.getMessageOrBuilder();
        } else {
          return keyShare_;
        }
      }
      /**
       * <code>optional .pamrac.KeyShare key_share = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.KeyShare, pamrac.Pamrac.KeyShare.Builder, pamrac.Pamrac.KeyShareOrBuilder> 
          getKeyShareFieldBuilder() {
        if (keyShareBuilder_ == null) {
          keyShareBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.KeyShare, pamrac.Pamrac.KeyShare.Builder, pamrac.Pamrac.KeyShareOrBuilder>(
                  getKeyShare(),
                  getParentForChildren(),
                  isClean());
          keyShare_ = null;
        }
        return keyShareBuilder_;
      }

      private pamrac.Pamrac.InitShareListRequest initShareListRequest_ = pamrac.Pamrac.InitShareListRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitShareListRequest, pamrac.Pamrac.InitShareListRequest.Builder, pamrac.Pamrac.InitShareListRequestOrBuilder> initShareListRequestBuilder_;
      /**
       * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
       */
      public boolean hasInitShareListRequest() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
       */
      public pamrac.Pamrac.InitShareListRequest getInitShareListRequest() {
        if (initShareListRequestBuilder_ == null) {
          return initShareListRequest_;
        } else {
          return initShareListRequestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
       */
      public Builder setInitShareListRequest(pamrac.Pamrac.InitShareListRequest value) {
        if (initShareListRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initShareListRequest_ = value;
          onChanged();
        } else {
          initShareListRequestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
       */
      public Builder setInitShareListRequest(
          pamrac.Pamrac.InitShareListRequest.Builder builderForValue) {
        if (initShareListRequestBuilder_ == null) {
          initShareListRequest_ = builderForValue.build();
          onChanged();
        } else {
          initShareListRequestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
       */
      public Builder mergeInitShareListRequest(pamrac.Pamrac.InitShareListRequest value) {
        if (initShareListRequestBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              initShareListRequest_ != pamrac.Pamrac.InitShareListRequest.getDefaultInstance()) {
            initShareListRequest_ =
              pamrac.Pamrac.InitShareListRequest.newBuilder(initShareListRequest_).mergeFrom(value).buildPartial();
          } else {
            initShareListRequest_ = value;
          }
          onChanged();
        } else {
          initShareListRequestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
       */
      public Builder clearInitShareListRequest() {
        if (initShareListRequestBuilder_ == null) {
          initShareListRequest_ = pamrac.Pamrac.InitShareListRequest.getDefaultInstance();
          onChanged();
        } else {
          initShareListRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
       */
      public pamrac.Pamrac.InitShareListRequest.Builder getInitShareListRequestBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getInitShareListRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
       */
      public pamrac.Pamrac.InitShareListRequestOrBuilder getInitShareListRequestOrBuilder() {
        if (initShareListRequestBuilder_ != null) {
          return initShareListRequestBuilder_.getMessageOrBuilder();
        } else {
          return initShareListRequest_;
        }
      }
      /**
       * <code>optional .pamrac.InitShareListRequest init_share_list_request = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.InitShareListRequest, pamrac.Pamrac.InitShareListRequest.Builder, pamrac.Pamrac.InitShareListRequestOrBuilder> 
          getInitShareListRequestFieldBuilder() {
        if (initShareListRequestBuilder_ == null) {
          initShareListRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.InitShareListRequest, pamrac.Pamrac.InitShareListRequest.Builder, pamrac.Pamrac.InitShareListRequestOrBuilder>(
                  getInitShareListRequest(),
                  getParentForChildren(),
                  isClean());
          initShareListRequest_ = null;
        }
        return initShareListRequestBuilder_;
      }

      private pamrac.Pamrac.ShareListRequest shareListRequest_ = pamrac.Pamrac.ShareListRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.ShareListRequest, pamrac.Pamrac.ShareListRequest.Builder, pamrac.Pamrac.ShareListRequestOrBuilder> shareListRequestBuilder_;
      /**
       * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
       * </pre>
       */
      public boolean hasShareListRequest() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
       * </pre>
       */
      public pamrac.Pamrac.ShareListRequest getShareListRequest() {
        if (shareListRequestBuilder_ == null) {
          return shareListRequest_;
        } else {
          return shareListRequestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
       * </pre>
       */
      public Builder setShareListRequest(pamrac.Pamrac.ShareListRequest value) {
        if (shareListRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shareListRequest_ = value;
          onChanged();
        } else {
          shareListRequestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
       * </pre>
       */
      public Builder setShareListRequest(
          pamrac.Pamrac.ShareListRequest.Builder builderForValue) {
        if (shareListRequestBuilder_ == null) {
          shareListRequest_ = builderForValue.build();
          onChanged();
        } else {
          shareListRequestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
       * </pre>
       */
      public Builder mergeShareListRequest(pamrac.Pamrac.ShareListRequest value) {
        if (shareListRequestBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              shareListRequest_ != pamrac.Pamrac.ShareListRequest.getDefaultInstance()) {
            shareListRequest_ =
              pamrac.Pamrac.ShareListRequest.newBuilder(shareListRequest_).mergeFrom(value).buildPartial();
          } else {
            shareListRequest_ = value;
          }
          onChanged();
        } else {
          shareListRequestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
       * </pre>
       */
      public Builder clearShareListRequest() {
        if (shareListRequestBuilder_ == null) {
          shareListRequest_ = pamrac.Pamrac.ShareListRequest.getDefaultInstance();
          onChanged();
        } else {
          shareListRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
       * </pre>
       */
      public pamrac.Pamrac.ShareListRequest.Builder getShareListRequestBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getShareListRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
       * </pre>
       */
      public pamrac.Pamrac.ShareListRequestOrBuilder getShareListRequestOrBuilder() {
        if (shareListRequestBuilder_ != null) {
          return shareListRequestBuilder_.getMessageOrBuilder();
        } else {
          return shareListRequest_;
        }
      }
      /**
       * <code>optional .pamrac.ShareListRequest share_list_request = 16;</code>
       *
       * <pre>
       *NOTE is now NonceResponse optional InitShareListResponse init_share_list_response;
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.ShareListRequest, pamrac.Pamrac.ShareListRequest.Builder, pamrac.Pamrac.ShareListRequestOrBuilder> 
          getShareListRequestFieldBuilder() {
        if (shareListRequestBuilder_ == null) {
          shareListRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.ShareListRequest, pamrac.Pamrac.ShareListRequest.Builder, pamrac.Pamrac.ShareListRequestOrBuilder>(
                  getShareListRequest(),
                  getParentForChildren(),
                  isClean());
          shareListRequest_ = null;
        }
        return shareListRequestBuilder_;
      }

      private pamrac.Pamrac.ShareList shareList_ = pamrac.Pamrac.ShareList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.ShareList, pamrac.Pamrac.ShareList.Builder, pamrac.Pamrac.ShareListOrBuilder> shareListBuilder_;
      /**
       * <code>optional .pamrac.ShareList share_list = 17;</code>
       */
      public boolean hasShareList() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .pamrac.ShareList share_list = 17;</code>
       */
      public pamrac.Pamrac.ShareList getShareList() {
        if (shareListBuilder_ == null) {
          return shareList_;
        } else {
          return shareListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.ShareList share_list = 17;</code>
       */
      public Builder setShareList(pamrac.Pamrac.ShareList value) {
        if (shareListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shareList_ = value;
          onChanged();
        } else {
          shareListBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareList share_list = 17;</code>
       */
      public Builder setShareList(
          pamrac.Pamrac.ShareList.Builder builderForValue) {
        if (shareListBuilder_ == null) {
          shareList_ = builderForValue.build();
          onChanged();
        } else {
          shareListBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareList share_list = 17;</code>
       */
      public Builder mergeShareList(pamrac.Pamrac.ShareList value) {
        if (shareListBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              shareList_ != pamrac.Pamrac.ShareList.getDefaultInstance()) {
            shareList_ =
              pamrac.Pamrac.ShareList.newBuilder(shareList_).mergeFrom(value).buildPartial();
          } else {
            shareList_ = value;
          }
          onChanged();
        } else {
          shareListBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareList share_list = 17;</code>
       */
      public Builder clearShareList() {
        if (shareListBuilder_ == null) {
          shareList_ = pamrac.Pamrac.ShareList.getDefaultInstance();
          onChanged();
        } else {
          shareListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .pamrac.ShareList share_list = 17;</code>
       */
      public pamrac.Pamrac.ShareList.Builder getShareListBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getShareListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.ShareList share_list = 17;</code>
       */
      public pamrac.Pamrac.ShareListOrBuilder getShareListOrBuilder() {
        if (shareListBuilder_ != null) {
          return shareListBuilder_.getMessageOrBuilder();
        } else {
          return shareList_;
        }
      }
      /**
       * <code>optional .pamrac.ShareList share_list = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.ShareList, pamrac.Pamrac.ShareList.Builder, pamrac.Pamrac.ShareListOrBuilder> 
          getShareListFieldBuilder() {
        if (shareListBuilder_ == null) {
          shareListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.ShareList, pamrac.Pamrac.ShareList.Builder, pamrac.Pamrac.ShareListOrBuilder>(
                  getShareList(),
                  getParentForChildren(),
                  isClean());
          shareList_ = null;
        }
        return shareListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.PAMRACMessage)
    }

    static {
      defaultInstance = new PAMRACMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.PAMRACMessage)
  }

  public interface BlobFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.BlobFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes salt = 1;</code>
     *
     * <pre>
     *32 bytes of salt. if this is present, the ciphertext is encrypted by a key derived 
     *from PASSWORD and this salt. if not present, it_s just the MASTER key. (That MASTER key is 
     *stored inside of the "masterkey" file, which is encrypted with a PASSWORD-derived key.)
     * </pre>
     */
    boolean hasSalt();
    /**
     * <code>optional bytes salt = 1;</code>
     *
     * <pre>
     *32 bytes of salt. if this is present, the ciphertext is encrypted by a key derived 
     *from PASSWORD and this salt. if not present, it_s just the MASTER key. (That MASTER key is 
     *stored inside of the "masterkey" file, which is encrypted with a PASSWORD-derived key.)
     * </pre>
     */
    com.google.protobuf.ByteString getSalt();

    /**
     * <code>required int32 version = 2;</code>
     *
     * <pre>
     *starts at 1, server should maintain a master "next version number" for all blobs
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 2;</code>
     *
     * <pre>
     *starts at 1, server should maintain a master "next version number" for all blobs
     * </pre>
     */
    int getVersion();

    /**
     * <code>required bytes aes_init_vector = 3;</code>
     */
    boolean hasAesInitVector();
    /**
     * <code>required bytes aes_init_vector = 3;</code>
     */
    com.google.protobuf.ByteString getAesInitVector();

    /**
     * <code>required bytes inner_blob_ciphertext = 4;</code>
     *
     * <pre>
     *AES256 encrypted ciphertext of an InnerBlob message
     * </pre>
     */
    boolean hasInnerBlobCiphertext();
    /**
     * <code>required bytes inner_blob_ciphertext = 4;</code>
     *
     * <pre>
     *AES256 encrypted ciphertext of an InnerBlob message
     * </pre>
     */
    com.google.protobuf.ByteString getInnerBlobCiphertext();
  }
  /**
   * Protobuf type {@code pamrac.BlobFile}
   */
  public static final class BlobFile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.BlobFile)
      BlobFileOrBuilder {
    // Use BlobFile.newBuilder() to construct.
    private BlobFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BlobFile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BlobFile defaultInstance;
    public static BlobFile getDefaultInstance() {
      return defaultInstance;
    }

    public BlobFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BlobFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              salt_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              version_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              aesInitVector_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              innerBlobCiphertext_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_BlobFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_BlobFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.BlobFile.class, pamrac.Pamrac.BlobFile.Builder.class);
    }

    public static com.google.protobuf.Parser<BlobFile> PARSER =
        new com.google.protobuf.AbstractParser<BlobFile>() {
      public BlobFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlobFile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BlobFile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SALT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString salt_;
    /**
     * <code>optional bytes salt = 1;</code>
     *
     * <pre>
     *32 bytes of salt. if this is present, the ciphertext is encrypted by a key derived 
     *from PASSWORD and this salt. if not present, it_s just the MASTER key. (That MASTER key is 
     *stored inside of the "masterkey" file, which is encrypted with a PASSWORD-derived key.)
     * </pre>
     */
    public boolean hasSalt() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes salt = 1;</code>
     *
     * <pre>
     *32 bytes of salt. if this is present, the ciphertext is encrypted by a key derived 
     *from PASSWORD and this salt. if not present, it_s just the MASTER key. (That MASTER key is 
     *stored inside of the "masterkey" file, which is encrypted with a PASSWORD-derived key.)
     * </pre>
     */
    public com.google.protobuf.ByteString getSalt() {
      return salt_;
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private int version_;
    /**
     * <code>required int32 version = 2;</code>
     *
     * <pre>
     *starts at 1, server should maintain a master "next version number" for all blobs
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 version = 2;</code>
     *
     * <pre>
     *starts at 1, server should maintain a master "next version number" for all blobs
     * </pre>
     */
    public int getVersion() {
      return version_;
    }

    public static final int AES_INIT_VECTOR_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString aesInitVector_;
    /**
     * <code>required bytes aes_init_vector = 3;</code>
     */
    public boolean hasAesInitVector() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes aes_init_vector = 3;</code>
     */
    public com.google.protobuf.ByteString getAesInitVector() {
      return aesInitVector_;
    }

    public static final int INNER_BLOB_CIPHERTEXT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString innerBlobCiphertext_;
    /**
     * <code>required bytes inner_blob_ciphertext = 4;</code>
     *
     * <pre>
     *AES256 encrypted ciphertext of an InnerBlob message
     * </pre>
     */
    public boolean hasInnerBlobCiphertext() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bytes inner_blob_ciphertext = 4;</code>
     *
     * <pre>
     *AES256 encrypted ciphertext of an InnerBlob message
     * </pre>
     */
    public com.google.protobuf.ByteString getInnerBlobCiphertext() {
      return innerBlobCiphertext_;
    }

    private void initFields() {
      salt_ = com.google.protobuf.ByteString.EMPTY;
      version_ = 0;
      aesInitVector_ = com.google.protobuf.ByteString.EMPTY;
      innerBlobCiphertext_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAesInitVector()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInnerBlobCiphertext()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, salt_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, aesInitVector_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, innerBlobCiphertext_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, salt_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, aesInitVector_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, innerBlobCiphertext_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.BlobFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.BlobFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.BlobFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.BlobFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.BlobFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.BlobFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.BlobFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.BlobFile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.BlobFile)
        pamrac.Pamrac.BlobFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_BlobFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_BlobFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.BlobFile.class, pamrac.Pamrac.BlobFile.Builder.class);
      }

      // Construct using pamrac.Pamrac.BlobFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        salt_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        aesInitVector_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        innerBlobCiphertext_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_BlobFile_descriptor;
      }

      public pamrac.Pamrac.BlobFile getDefaultInstanceForType() {
        return pamrac.Pamrac.BlobFile.getDefaultInstance();
      }

      public pamrac.Pamrac.BlobFile build() {
        pamrac.Pamrac.BlobFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.BlobFile buildPartial() {
        pamrac.Pamrac.BlobFile result = new pamrac.Pamrac.BlobFile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.salt_ = salt_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.aesInitVector_ = aesInitVector_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.innerBlobCiphertext_ = innerBlobCiphertext_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.BlobFile) {
          return mergeFrom((pamrac.Pamrac.BlobFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.BlobFile other) {
        if (other == pamrac.Pamrac.BlobFile.getDefaultInstance()) return this;
        if (other.hasSalt()) {
          setSalt(other.getSalt());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasAesInitVector()) {
          setAesInitVector(other.getAesInitVector());
        }
        if (other.hasInnerBlobCiphertext()) {
          setInnerBlobCiphertext(other.getInnerBlobCiphertext());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasAesInitVector()) {
          
          return false;
        }
        if (!hasInnerBlobCiphertext()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.BlobFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.BlobFile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString salt_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes salt = 1;</code>
       *
       * <pre>
       *32 bytes of salt. if this is present, the ciphertext is encrypted by a key derived 
       *from PASSWORD and this salt. if not present, it_s just the MASTER key. (That MASTER key is 
       *stored inside of the "masterkey" file, which is encrypted with a PASSWORD-derived key.)
       * </pre>
       */
      public boolean hasSalt() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes salt = 1;</code>
       *
       * <pre>
       *32 bytes of salt. if this is present, the ciphertext is encrypted by a key derived 
       *from PASSWORD and this salt. if not present, it_s just the MASTER key. (That MASTER key is 
       *stored inside of the "masterkey" file, which is encrypted with a PASSWORD-derived key.)
       * </pre>
       */
      public com.google.protobuf.ByteString getSalt() {
        return salt_;
      }
      /**
       * <code>optional bytes salt = 1;</code>
       *
       * <pre>
       *32 bytes of salt. if this is present, the ciphertext is encrypted by a key derived 
       *from PASSWORD and this salt. if not present, it_s just the MASTER key. (That MASTER key is 
       *stored inside of the "masterkey" file, which is encrypted with a PASSWORD-derived key.)
       * </pre>
       */
      public Builder setSalt(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        salt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes salt = 1;</code>
       *
       * <pre>
       *32 bytes of salt. if this is present, the ciphertext is encrypted by a key derived 
       *from PASSWORD and this salt. if not present, it_s just the MASTER key. (That MASTER key is 
       *stored inside of the "masterkey" file, which is encrypted with a PASSWORD-derived key.)
       * </pre>
       */
      public Builder clearSalt() {
        bitField0_ = (bitField0_ & ~0x00000001);
        salt_ = getDefaultInstance().getSalt();
        onChanged();
        return this;
      }

      private int version_ ;
      /**
       * <code>required int32 version = 2;</code>
       *
       * <pre>
       *starts at 1, server should maintain a master "next version number" for all blobs
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 version = 2;</code>
       *
       * <pre>
       *starts at 1, server should maintain a master "next version number" for all blobs
       * </pre>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 2;</code>
       *
       * <pre>
       *starts at 1, server should maintain a master "next version number" for all blobs
       * </pre>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 version = 2;</code>
       *
       * <pre>
       *starts at 1, server should maintain a master "next version number" for all blobs
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString aesInitVector_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes aes_init_vector = 3;</code>
       */
      public boolean hasAesInitVector() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes aes_init_vector = 3;</code>
       */
      public com.google.protobuf.ByteString getAesInitVector() {
        return aesInitVector_;
      }
      /**
       * <code>required bytes aes_init_vector = 3;</code>
       */
      public Builder setAesInitVector(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        aesInitVector_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes aes_init_vector = 3;</code>
       */
      public Builder clearAesInitVector() {
        bitField0_ = (bitField0_ & ~0x00000004);
        aesInitVector_ = getDefaultInstance().getAesInitVector();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString innerBlobCiphertext_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes inner_blob_ciphertext = 4;</code>
       *
       * <pre>
       *AES256 encrypted ciphertext of an InnerBlob message
       * </pre>
       */
      public boolean hasInnerBlobCiphertext() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes inner_blob_ciphertext = 4;</code>
       *
       * <pre>
       *AES256 encrypted ciphertext of an InnerBlob message
       * </pre>
       */
      public com.google.protobuf.ByteString getInnerBlobCiphertext() {
        return innerBlobCiphertext_;
      }
      /**
       * <code>required bytes inner_blob_ciphertext = 4;</code>
       *
       * <pre>
       *AES256 encrypted ciphertext of an InnerBlob message
       * </pre>
       */
      public Builder setInnerBlobCiphertext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        innerBlobCiphertext_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes inner_blob_ciphertext = 4;</code>
       *
       * <pre>
       *AES256 encrypted ciphertext of an InnerBlob message
       * </pre>
       */
      public Builder clearInnerBlobCiphertext() {
        bitField0_ = (bitField0_ & ~0x00000008);
        innerBlobCiphertext_ = getDefaultInstance().getInnerBlobCiphertext();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.BlobFile)
    }

    static {
      defaultInstance = new BlobFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.BlobFile)
  }

  public interface InnerBlobOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.InnerBlob)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string filename = 1;</code>
     *
     * <pre>
     *because files are stored under a hash of the site name, we need to keep track of what the blob
     *is actually for!!!
     * </pre>
     */
    boolean hasFilename();
    /**
     * <code>required string filename = 1;</code>
     *
     * <pre>
     *because files are stored under a hash of the site name, we need to keep track of what the blob
     *is actually for!!!
     * </pre>
     */
    java.lang.String getFilename();
    /**
     * <code>required string filename = 1;</code>
     *
     * <pre>
     *because files are stored under a hash of the site name, we need to keep track of what the blob
     *is actually for!!!
     * </pre>
     */
    com.google.protobuf.ByteString
        getFilenameBytes();

    /**
     * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
     *
     * <pre>
     *username = fred, password = weakpass, etc
     * </pre>
     */
    java.util.List<pamrac.Pamrac.InnerBlob.KeyValue> 
        getFieldsList();
    /**
     * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
     *
     * <pre>
     *username = fred, password = weakpass, etc
     * </pre>
     */
    pamrac.Pamrac.InnerBlob.KeyValue getFields(int index);
    /**
     * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
     *
     * <pre>
     *username = fred, password = weakpass, etc
     * </pre>
     */
    int getFieldsCount();
    /**
     * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
     *
     * <pre>
     *username = fred, password = weakpass, etc
     * </pre>
     */
    java.util.List<? extends pamrac.Pamrac.InnerBlob.KeyValueOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
     *
     * <pre>
     *username = fred, password = weakpass, etc
     * </pre>
     */
    pamrac.Pamrac.InnerBlob.KeyValueOrBuilder getFieldsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pamrac.InnerBlob}
   */
  public static final class InnerBlob extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.InnerBlob)
      InnerBlobOrBuilder {
    // Use InnerBlob.newBuilder() to construct.
    private InnerBlob(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InnerBlob(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InnerBlob defaultInstance;
    public static InnerBlob getDefaultInstance() {
      return defaultInstance;
    }

    public InnerBlob getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InnerBlob(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              filename_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                fields_ = new java.util.ArrayList<pamrac.Pamrac.InnerBlob.KeyValue>();
                mutable_bitField0_ |= 0x00000002;
              }
              fields_.add(input.readMessage(pamrac.Pamrac.InnerBlob.KeyValue.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_InnerBlob_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_InnerBlob_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.InnerBlob.class, pamrac.Pamrac.InnerBlob.Builder.class);
    }

    public static com.google.protobuf.Parser<InnerBlob> PARSER =
        new com.google.protobuf.AbstractParser<InnerBlob>() {
      public InnerBlob parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InnerBlob(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InnerBlob> getParserForType() {
      return PARSER;
    }

    public interface KeyValueOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pamrac.InnerBlob.KeyValue)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required string name = 1;</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>required string value = 2;</code>
       */
      boolean hasValue();
      /**
       * <code>required string value = 2;</code>
       */
      java.lang.String getValue();
      /**
       * <code>required string value = 2;</code>
       */
      com.google.protobuf.ByteString
          getValueBytes();
    }
    /**
     * Protobuf type {@code pamrac.InnerBlob.KeyValue}
     */
    public static final class KeyValue extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pamrac.InnerBlob.KeyValue)
        KeyValueOrBuilder {
      // Use KeyValue.newBuilder() to construct.
      private KeyValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private KeyValue(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final KeyValue defaultInstance;
      public static KeyValue getDefaultInstance() {
        return defaultInstance;
      }

      public KeyValue getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private KeyValue(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                value_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_InnerBlob_KeyValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_InnerBlob_KeyValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.InnerBlob.KeyValue.class, pamrac.Pamrac.InnerBlob.KeyValue.Builder.class);
      }

      public static com.google.protobuf.Parser<KeyValue> PARSER =
          new com.google.protobuf.AbstractParser<KeyValue>() {
        public KeyValue parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new KeyValue(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<KeyValue> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.Object value_;
      /**
       * <code>required string value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        name_ = "";
        value_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getValueBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValueBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pamrac.Pamrac.InnerBlob.KeyValue parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pamrac.Pamrac.InnerBlob.KeyValue parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pamrac.Pamrac.InnerBlob.KeyValue parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pamrac.Pamrac.InnerBlob.KeyValue parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pamrac.Pamrac.InnerBlob.KeyValue parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pamrac.Pamrac.InnerBlob.KeyValue parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pamrac.Pamrac.InnerBlob.KeyValue parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pamrac.Pamrac.InnerBlob.KeyValue parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pamrac.Pamrac.InnerBlob.KeyValue parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pamrac.Pamrac.InnerBlob.KeyValue parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pamrac.Pamrac.InnerBlob.KeyValue prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pamrac.InnerBlob.KeyValue}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pamrac.InnerBlob.KeyValue)
          pamrac.Pamrac.InnerBlob.KeyValueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pamrac.Pamrac.internal_static_pamrac_InnerBlob_KeyValue_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pamrac.Pamrac.internal_static_pamrac_InnerBlob_KeyValue_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pamrac.Pamrac.InnerBlob.KeyValue.class, pamrac.Pamrac.InnerBlob.KeyValue.Builder.class);
        }

        // Construct using pamrac.Pamrac.InnerBlob.KeyValue.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pamrac.Pamrac.internal_static_pamrac_InnerBlob_KeyValue_descriptor;
        }

        public pamrac.Pamrac.InnerBlob.KeyValue getDefaultInstanceForType() {
          return pamrac.Pamrac.InnerBlob.KeyValue.getDefaultInstance();
        }

        public pamrac.Pamrac.InnerBlob.KeyValue build() {
          pamrac.Pamrac.InnerBlob.KeyValue result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pamrac.Pamrac.InnerBlob.KeyValue buildPartial() {
          pamrac.Pamrac.InnerBlob.KeyValue result = new pamrac.Pamrac.InnerBlob.KeyValue(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pamrac.Pamrac.InnerBlob.KeyValue) {
            return mergeFrom((pamrac.Pamrac.InnerBlob.KeyValue)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pamrac.Pamrac.InnerBlob.KeyValue other) {
          if (other == pamrac.Pamrac.InnerBlob.KeyValue.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasValue()) {
            bitField0_ |= 0x00000002;
            value_ = other.value_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pamrac.Pamrac.InnerBlob.KeyValue parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pamrac.Pamrac.InnerBlob.KeyValue) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 1;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object value_ = "";
        /**
         * <code>required string value = 2;</code>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string value = 2;</code>
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              value_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:pamrac.InnerBlob.KeyValue)
      }

      static {
        defaultInstance = new KeyValue(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pamrac.InnerBlob.KeyValue)
    }

    private int bitField0_;
    public static final int FILENAME_FIELD_NUMBER = 1;
    private java.lang.Object filename_;
    /**
     * <code>required string filename = 1;</code>
     *
     * <pre>
     *because files are stored under a hash of the site name, we need to keep track of what the blob
     *is actually for!!!
     * </pre>
     */
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string filename = 1;</code>
     *
     * <pre>
     *because files are stored under a hash of the site name, we need to keep track of what the blob
     *is actually for!!!
     * </pre>
     */
    public java.lang.String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          filename_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string filename = 1;</code>
     *
     * <pre>
     *because files are stored under a hash of the site name, we need to keep track of what the blob
     *is actually for!!!
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_FIELD_NUMBER = 2;
    private java.util.List<pamrac.Pamrac.InnerBlob.KeyValue> fields_;
    /**
     * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
     *
     * <pre>
     *username = fred, password = weakpass, etc
     * </pre>
     */
    public java.util.List<pamrac.Pamrac.InnerBlob.KeyValue> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
     *
     * <pre>
     *username = fred, password = weakpass, etc
     * </pre>
     */
    public java.util.List<? extends pamrac.Pamrac.InnerBlob.KeyValueOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
     *
     * <pre>
     *username = fred, password = weakpass, etc
     * </pre>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
     *
     * <pre>
     *username = fred, password = weakpass, etc
     * </pre>
     */
    public pamrac.Pamrac.InnerBlob.KeyValue getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
     *
     * <pre>
     *username = fred, password = weakpass, etc
     * </pre>
     */
    public pamrac.Pamrac.InnerBlob.KeyValueOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    private void initFields() {
      filename_ = "";
      fields_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFilename()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldsCount(); i++) {
        if (!getFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFilenameBytes());
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(2, fields_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFilenameBytes());
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fields_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.InnerBlob parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InnerBlob parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerBlob parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InnerBlob parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerBlob parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InnerBlob parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerBlob parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.InnerBlob parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerBlob parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InnerBlob parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.InnerBlob prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.InnerBlob}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.InnerBlob)
        pamrac.Pamrac.InnerBlobOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_InnerBlob_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_InnerBlob_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.InnerBlob.class, pamrac.Pamrac.InnerBlob.Builder.class);
      }

      // Construct using pamrac.Pamrac.InnerBlob.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        filename_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_InnerBlob_descriptor;
      }

      public pamrac.Pamrac.InnerBlob getDefaultInstanceForType() {
        return pamrac.Pamrac.InnerBlob.getDefaultInstance();
      }

      public pamrac.Pamrac.InnerBlob build() {
        pamrac.Pamrac.InnerBlob result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.InnerBlob buildPartial() {
        pamrac.Pamrac.InnerBlob result = new pamrac.Pamrac.InnerBlob(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.filename_ = filename_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.InnerBlob) {
          return mergeFrom((pamrac.Pamrac.InnerBlob)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.InnerBlob other) {
        if (other == pamrac.Pamrac.InnerBlob.getDefaultInstance()) return this;
        if (other.hasFilename()) {
          bitField0_ |= 0x00000001;
          filename_ = other.filename_;
          onChanged();
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFilename()) {
          
          return false;
        }
        for (int i = 0; i < getFieldsCount(); i++) {
          if (!getFields(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.InnerBlob parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.InnerBlob) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object filename_ = "";
      /**
       * <code>required string filename = 1;</code>
       *
       * <pre>
       *because files are stored under a hash of the site name, we need to keep track of what the blob
       *is actually for!!!
       * </pre>
       */
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string filename = 1;</code>
       *
       * <pre>
       *because files are stored under a hash of the site name, we need to keep track of what the blob
       *is actually for!!!
       * </pre>
       */
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string filename = 1;</code>
       *
       * <pre>
       *because files are stored under a hash of the site name, we need to keep track of what the blob
       *is actually for!!!
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string filename = 1;</code>
       *
       * <pre>
       *because files are stored under a hash of the site name, we need to keep track of what the blob
       *is actually for!!!
       * </pre>
       */
      public Builder setFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        filename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string filename = 1;</code>
       *
       * <pre>
       *because files are stored under a hash of the site name, we need to keep track of what the blob
       *is actually for!!!
       * </pre>
       */
      public Builder clearFilename() {
        bitField0_ = (bitField0_ & ~0x00000001);
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      /**
       * <code>required string filename = 1;</code>
       *
       * <pre>
       *because files are stored under a hash of the site name, we need to keep track of what the blob
       *is actually for!!!
       * </pre>
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        filename_ = value;
        onChanged();
        return this;
      }

      private java.util.List<pamrac.Pamrac.InnerBlob.KeyValue> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          fields_ = new java.util.ArrayList<pamrac.Pamrac.InnerBlob.KeyValue>(fields_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pamrac.Pamrac.InnerBlob.KeyValue, pamrac.Pamrac.InnerBlob.KeyValue.Builder, pamrac.Pamrac.InnerBlob.KeyValueOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public java.util.List<pamrac.Pamrac.InnerBlob.KeyValue> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public pamrac.Pamrac.InnerBlob.KeyValue getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public Builder setFields(
          int index, pamrac.Pamrac.InnerBlob.KeyValue value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public Builder setFields(
          int index, pamrac.Pamrac.InnerBlob.KeyValue.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public Builder addFields(pamrac.Pamrac.InnerBlob.KeyValue value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public Builder addFields(
          int index, pamrac.Pamrac.InnerBlob.KeyValue value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public Builder addFields(
          pamrac.Pamrac.InnerBlob.KeyValue.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public Builder addFields(
          int index, pamrac.Pamrac.InnerBlob.KeyValue.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends pamrac.Pamrac.InnerBlob.KeyValue> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public pamrac.Pamrac.InnerBlob.KeyValue.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public pamrac.Pamrac.InnerBlob.KeyValueOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public java.util.List<? extends pamrac.Pamrac.InnerBlob.KeyValueOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public pamrac.Pamrac.InnerBlob.KeyValue.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            pamrac.Pamrac.InnerBlob.KeyValue.getDefaultInstance());
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public pamrac.Pamrac.InnerBlob.KeyValue.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, pamrac.Pamrac.InnerBlob.KeyValue.getDefaultInstance());
      }
      /**
       * <code>repeated .pamrac.InnerBlob.KeyValue fields = 2;</code>
       *
       * <pre>
       *username = fred, password = weakpass, etc
       * </pre>
       */
      public java.util.List<pamrac.Pamrac.InnerBlob.KeyValue.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pamrac.Pamrac.InnerBlob.KeyValue, pamrac.Pamrac.InnerBlob.KeyValue.Builder, pamrac.Pamrac.InnerBlob.KeyValueOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pamrac.Pamrac.InnerBlob.KeyValue, pamrac.Pamrac.InnerBlob.KeyValue.Builder, pamrac.Pamrac.InnerBlob.KeyValueOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.InnerBlob)
    }

    static {
      defaultInstance = new InnerBlob(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.InnerBlob)
  }

  public interface InitBlobRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.InitBlobRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes all_hash_xor = 1;</code>
     *
     * <pre>
     *xor of all the cached_blobs.blob_hash fields from the BlobRequest that we would send 
     *if it turns out any are different. (if this xor matches, we can skip sending all of those hashes).
     *(all 0s if we don't have any blobs at all).
     * </pre>
     */
    boolean hasAllHashXor();
    /**
     * <code>required bytes all_hash_xor = 1;</code>
     *
     * <pre>
     *xor of all the cached_blobs.blob_hash fields from the BlobRequest that we would send 
     *if it turns out any are different. (if this xor matches, we can skip sending all of those hashes).
     *(all 0s if we don't have any blobs at all).
     * </pre>
     */
    com.google.protobuf.ByteString getAllHashXor();
  }
  /**
   * Protobuf type {@code pamrac.InitBlobRequest}
   */
  public static final class InitBlobRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.InitBlobRequest)
      InitBlobRequestOrBuilder {
    // Use InitBlobRequest.newBuilder() to construct.
    private InitBlobRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InitBlobRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InitBlobRequest defaultInstance;
    public static InitBlobRequest getDefaultInstance() {
      return defaultInstance;
    }

    public InitBlobRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InitBlobRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              allHashXor_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_InitBlobRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_InitBlobRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.InitBlobRequest.class, pamrac.Pamrac.InitBlobRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<InitBlobRequest> PARSER =
        new com.google.protobuf.AbstractParser<InitBlobRequest>() {
      public InitBlobRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitBlobRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InitBlobRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ALL_HASH_XOR_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString allHashXor_;
    /**
     * <code>required bytes all_hash_xor = 1;</code>
     *
     * <pre>
     *xor of all the cached_blobs.blob_hash fields from the BlobRequest that we would send 
     *if it turns out any are different. (if this xor matches, we can skip sending all of those hashes).
     *(all 0s if we don't have any blobs at all).
     * </pre>
     */
    public boolean hasAllHashXor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes all_hash_xor = 1;</code>
     *
     * <pre>
     *xor of all the cached_blobs.blob_hash fields from the BlobRequest that we would send 
     *if it turns out any are different. (if this xor matches, we can skip sending all of those hashes).
     *(all 0s if we don't have any blobs at all).
     * </pre>
     */
    public com.google.protobuf.ByteString getAllHashXor() {
      return allHashXor_;
    }

    private void initFields() {
      allHashXor_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAllHashXor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, allHashXor_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, allHashXor_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.InitBlobRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitBlobRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitBlobRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitBlobRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitBlobRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitBlobRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitBlobRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.InitBlobRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitBlobRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitBlobRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.InitBlobRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.InitBlobRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.InitBlobRequest)
        pamrac.Pamrac.InitBlobRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_InitBlobRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_InitBlobRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.InitBlobRequest.class, pamrac.Pamrac.InitBlobRequest.Builder.class);
      }

      // Construct using pamrac.Pamrac.InitBlobRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        allHashXor_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_InitBlobRequest_descriptor;
      }

      public pamrac.Pamrac.InitBlobRequest getDefaultInstanceForType() {
        return pamrac.Pamrac.InitBlobRequest.getDefaultInstance();
      }

      public pamrac.Pamrac.InitBlobRequest build() {
        pamrac.Pamrac.InitBlobRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.InitBlobRequest buildPartial() {
        pamrac.Pamrac.InitBlobRequest result = new pamrac.Pamrac.InitBlobRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.allHashXor_ = allHashXor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.InitBlobRequest) {
          return mergeFrom((pamrac.Pamrac.InitBlobRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.InitBlobRequest other) {
        if (other == pamrac.Pamrac.InitBlobRequest.getDefaultInstance()) return this;
        if (other.hasAllHashXor()) {
          setAllHashXor(other.getAllHashXor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAllHashXor()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.InitBlobRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.InitBlobRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString allHashXor_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes all_hash_xor = 1;</code>
       *
       * <pre>
       *xor of all the cached_blobs.blob_hash fields from the BlobRequest that we would send 
       *if it turns out any are different. (if this xor matches, we can skip sending all of those hashes).
       *(all 0s if we don't have any blobs at all).
       * </pre>
       */
      public boolean hasAllHashXor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes all_hash_xor = 1;</code>
       *
       * <pre>
       *xor of all the cached_blobs.blob_hash fields from the BlobRequest that we would send 
       *if it turns out any are different. (if this xor matches, we can skip sending all of those hashes).
       *(all 0s if we don't have any blobs at all).
       * </pre>
       */
      public com.google.protobuf.ByteString getAllHashXor() {
        return allHashXor_;
      }
      /**
       * <code>required bytes all_hash_xor = 1;</code>
       *
       * <pre>
       *xor of all the cached_blobs.blob_hash fields from the BlobRequest that we would send 
       *if it turns out any are different. (if this xor matches, we can skip sending all of those hashes).
       *(all 0s if we don't have any blobs at all).
       * </pre>
       */
      public Builder setAllHashXor(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        allHashXor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes all_hash_xor = 1;</code>
       *
       * <pre>
       *xor of all the cached_blobs.blob_hash fields from the BlobRequest that we would send 
       *if it turns out any are different. (if this xor matches, we can skip sending all of those hashes).
       *(all 0s if we don't have any blobs at all).
       * </pre>
       */
      public Builder clearAllHashXor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        allHashXor_ = getDefaultInstance().getAllHashXor();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.InitBlobRequest)
    }

    static {
      defaultInstance = new InitBlobRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.InitBlobRequest)
  }

  public interface InitBlobResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.InitBlobResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool xor_matches = 1;</code>
     *
     * <pre>
     *if the xor they sent matches what we have, tell them, and then they
     * </pre>
     */
    boolean hasXorMatches();
    /**
     * <code>required bool xor_matches = 1;</code>
     *
     * <pre>
     *if the xor they sent matches what we have, tell them, and then they
     * </pre>
     */
    boolean getXorMatches();

    /**
     * <code>optional bytes nonce = 2;</code>
     *
     * <pre>
     *if the xor didn't match, they'll need to do an actual request.
     * </pre>
     */
    boolean hasNonce();
    /**
     * <code>optional bytes nonce = 2;</code>
     *
     * <pre>
     *if the xor didn't match, they'll need to do an actual request.
     * </pre>
     */
    com.google.protobuf.ByteString getNonce();
  }
  /**
   * Protobuf type {@code pamrac.InitBlobResponse}
   */
  public static final class InitBlobResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.InitBlobResponse)
      InitBlobResponseOrBuilder {
    // Use InitBlobResponse.newBuilder() to construct.
    private InitBlobResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InitBlobResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InitBlobResponse defaultInstance;
    public static InitBlobResponse getDefaultInstance() {
      return defaultInstance;
    }

    public InitBlobResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InitBlobResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              xorMatches_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              nonce_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_InitBlobResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_InitBlobResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.InitBlobResponse.class, pamrac.Pamrac.InitBlobResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<InitBlobResponse> PARSER =
        new com.google.protobuf.AbstractParser<InitBlobResponse>() {
      public InitBlobResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitBlobResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InitBlobResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int XOR_MATCHES_FIELD_NUMBER = 1;
    private boolean xorMatches_;
    /**
     * <code>required bool xor_matches = 1;</code>
     *
     * <pre>
     *if the xor they sent matches what we have, tell them, and then they
     * </pre>
     */
    public boolean hasXorMatches() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool xor_matches = 1;</code>
     *
     * <pre>
     *if the xor they sent matches what we have, tell them, and then they
     * </pre>
     */
    public boolean getXorMatches() {
      return xorMatches_;
    }

    public static final int NONCE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString nonce_;
    /**
     * <code>optional bytes nonce = 2;</code>
     *
     * <pre>
     *if the xor didn't match, they'll need to do an actual request.
     * </pre>
     */
    public boolean hasNonce() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes nonce = 2;</code>
     *
     * <pre>
     *if the xor didn't match, they'll need to do an actual request.
     * </pre>
     */
    public com.google.protobuf.ByteString getNonce() {
      return nonce_;
    }

    private void initFields() {
      xorMatches_ = false;
      nonce_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasXorMatches()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, xorMatches_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, nonce_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, xorMatches_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, nonce_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.InitBlobResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitBlobResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitBlobResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitBlobResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitBlobResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitBlobResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitBlobResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.InitBlobResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitBlobResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitBlobResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.InitBlobResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.InitBlobResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.InitBlobResponse)
        pamrac.Pamrac.InitBlobResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_InitBlobResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_InitBlobResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.InitBlobResponse.class, pamrac.Pamrac.InitBlobResponse.Builder.class);
      }

      // Construct using pamrac.Pamrac.InitBlobResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        xorMatches_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        nonce_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_InitBlobResponse_descriptor;
      }

      public pamrac.Pamrac.InitBlobResponse getDefaultInstanceForType() {
        return pamrac.Pamrac.InitBlobResponse.getDefaultInstance();
      }

      public pamrac.Pamrac.InitBlobResponse build() {
        pamrac.Pamrac.InitBlobResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.InitBlobResponse buildPartial() {
        pamrac.Pamrac.InitBlobResponse result = new pamrac.Pamrac.InitBlobResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.xorMatches_ = xorMatches_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nonce_ = nonce_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.InitBlobResponse) {
          return mergeFrom((pamrac.Pamrac.InitBlobResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.InitBlobResponse other) {
        if (other == pamrac.Pamrac.InitBlobResponse.getDefaultInstance()) return this;
        if (other.hasXorMatches()) {
          setXorMatches(other.getXorMatches());
        }
        if (other.hasNonce()) {
          setNonce(other.getNonce());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasXorMatches()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.InitBlobResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.InitBlobResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean xorMatches_ ;
      /**
       * <code>required bool xor_matches = 1;</code>
       *
       * <pre>
       *if the xor they sent matches what we have, tell them, and then they
       * </pre>
       */
      public boolean hasXorMatches() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool xor_matches = 1;</code>
       *
       * <pre>
       *if the xor they sent matches what we have, tell them, and then they
       * </pre>
       */
      public boolean getXorMatches() {
        return xorMatches_;
      }
      /**
       * <code>required bool xor_matches = 1;</code>
       *
       * <pre>
       *if the xor they sent matches what we have, tell them, and then they
       * </pre>
       */
      public Builder setXorMatches(boolean value) {
        bitField0_ |= 0x00000001;
        xorMatches_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool xor_matches = 1;</code>
       *
       * <pre>
       *if the xor they sent matches what we have, tell them, and then they
       * </pre>
       */
      public Builder clearXorMatches() {
        bitField0_ = (bitField0_ & ~0x00000001);
        xorMatches_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString nonce_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes nonce = 2;</code>
       *
       * <pre>
       *if the xor didn't match, they'll need to do an actual request.
       * </pre>
       */
      public boolean hasNonce() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes nonce = 2;</code>
       *
       * <pre>
       *if the xor didn't match, they'll need to do an actual request.
       * </pre>
       */
      public com.google.protobuf.ByteString getNonce() {
        return nonce_;
      }
      /**
       * <code>optional bytes nonce = 2;</code>
       *
       * <pre>
       *if the xor didn't match, they'll need to do an actual request.
       * </pre>
       */
      public Builder setNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes nonce = 2;</code>
       *
       * <pre>
       *if the xor didn't match, they'll need to do an actual request.
       * </pre>
       */
      public Builder clearNonce() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nonce_ = getDefaultInstance().getNonce();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.InitBlobResponse)
    }

    static {
      defaultInstance = new InitBlobResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.InitBlobResponse)
  }

  public interface BlobRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.BlobRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
     *
     * <pre>
     *we're telling the server that we already have these versions of these blobs
     * </pre>
     */
    java.util.List<pamrac.Pamrac.BlobRequest.BlobHash> 
        getCachedBlobsList();
    /**
     * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
     *
     * <pre>
     *we're telling the server that we already have these versions of these blobs
     * </pre>
     */
    pamrac.Pamrac.BlobRequest.BlobHash getCachedBlobs(int index);
    /**
     * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
     *
     * <pre>
     *we're telling the server that we already have these versions of these blobs
     * </pre>
     */
    int getCachedBlobsCount();
    /**
     * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
     *
     * <pre>
     *we're telling the server that we already have these versions of these blobs
     * </pre>
     */
    java.util.List<? extends pamrac.Pamrac.BlobRequest.BlobHashOrBuilder> 
        getCachedBlobsOrBuilderList();
    /**
     * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
     *
     * <pre>
     *we're telling the server that we already have these versions of these blobs
     * </pre>
     */
    pamrac.Pamrac.BlobRequest.BlobHashOrBuilder getCachedBlobsOrBuilder(
        int index);

    /**
     * <code>required bytes DOWNLOADSECRET_proof = 2;</code>
     *
     * <pre>
     *prove that you know DOWNLOADSECRET by sending sha256(DOWNLOADSECRET~proof_nonce) (proof_nonce having 
     *been supplied by the server's InitBlobResponse). (so that not just anyone can download the blobs).
     * </pre>
     */
    boolean hasDOWNLOADSECRETProof();
    /**
     * <code>required bytes DOWNLOADSECRET_proof = 2;</code>
     *
     * <pre>
     *prove that you know DOWNLOADSECRET by sending sha256(DOWNLOADSECRET~proof_nonce) (proof_nonce having 
     *been supplied by the server's InitBlobResponse). (so that not just anyone can download the blobs).
     * </pre>
     */
    com.google.protobuf.ByteString getDOWNLOADSECRETProof();

    /**
     * <code>required bytes proof_nonce = 3;</code>
     *
     * <pre>
     *nonce for DOWNLOADSECRET_proof
     * </pre>
     */
    boolean hasProofNonce();
    /**
     * <code>required bytes proof_nonce = 3;</code>
     *
     * <pre>
     *nonce for DOWNLOADSECRET_proof
     * </pre>
     */
    com.google.protobuf.ByteString getProofNonce();
  }
  /**
   * Protobuf type {@code pamrac.BlobRequest}
   */
  public static final class BlobRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.BlobRequest)
      BlobRequestOrBuilder {
    // Use BlobRequest.newBuilder() to construct.
    private BlobRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BlobRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BlobRequest defaultInstance;
    public static BlobRequest getDefaultInstance() {
      return defaultInstance;
    }

    public BlobRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BlobRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cachedBlobs_ = new java.util.ArrayList<pamrac.Pamrac.BlobRequest.BlobHash>();
                mutable_bitField0_ |= 0x00000001;
              }
              cachedBlobs_.add(input.readMessage(pamrac.Pamrac.BlobRequest.BlobHash.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              dOWNLOADSECRETProof_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              proofNonce_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cachedBlobs_ = java.util.Collections.unmodifiableList(cachedBlobs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_BlobRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_BlobRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.BlobRequest.class, pamrac.Pamrac.BlobRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<BlobRequest> PARSER =
        new com.google.protobuf.AbstractParser<BlobRequest>() {
      public BlobRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlobRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BlobRequest> getParserForType() {
      return PARSER;
    }

    public interface BlobHashOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pamrac.BlobRequest.BlobHash)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required string blob_name = 1;</code>
       *
       * <pre>
       *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
       *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
       * </pre>
       */
      boolean hasBlobName();
      /**
       * <code>required string blob_name = 1;</code>
       *
       * <pre>
       *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
       *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
       * </pre>
       */
      java.lang.String getBlobName();
      /**
       * <code>required string blob_name = 1;</code>
       *
       * <pre>
       *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
       *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
       * </pre>
       */
      com.google.protobuf.ByteString
          getBlobNameBytes();

      /**
       * <code>required bytes blob_hash = 2;</code>
       *
       * <pre>
       *a hash of the contents of the blob file (which is not a protocol buffer, just a file)
       * </pre>
       */
      boolean hasBlobHash();
      /**
       * <code>required bytes blob_hash = 2;</code>
       *
       * <pre>
       *a hash of the contents of the blob file (which is not a protocol buffer, just a file)
       * </pre>
       */
      com.google.protobuf.ByteString getBlobHash();

      /**
       * <code>required bool irretrievable = 3;</code>
       *
       * <pre>
       *if true, this is in blobs-irretrievable/, else it's stored in blobs/
       * </pre>
       */
      boolean hasIrretrievable();
      /**
       * <code>required bool irretrievable = 3;</code>
       *
       * <pre>
       *if true, this is in blobs-irretrievable/, else it's stored in blobs/
       * </pre>
       */
      boolean getIrretrievable();
    }
    /**
     * Protobuf type {@code pamrac.BlobRequest.BlobHash}
     */
    public static final class BlobHash extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pamrac.BlobRequest.BlobHash)
        BlobHashOrBuilder {
      // Use BlobHash.newBuilder() to construct.
      private BlobHash(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BlobHash(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BlobHash defaultInstance;
      public static BlobHash getDefaultInstance() {
        return defaultInstance;
      }

      public BlobHash getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BlobHash(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                blobName_ = bs;
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                blobHash_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                irretrievable_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_BlobRequest_BlobHash_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_BlobRequest_BlobHash_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.BlobRequest.BlobHash.class, pamrac.Pamrac.BlobRequest.BlobHash.Builder.class);
      }

      public static com.google.protobuf.Parser<BlobHash> PARSER =
          new com.google.protobuf.AbstractParser<BlobHash>() {
        public BlobHash parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BlobHash(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BlobHash> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int BLOB_NAME_FIELD_NUMBER = 1;
      private java.lang.Object blobName_;
      /**
       * <code>required string blob_name = 1;</code>
       *
       * <pre>
       *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
       *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
       * </pre>
       */
      public boolean hasBlobName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string blob_name = 1;</code>
       *
       * <pre>
       *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
       *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
       * </pre>
       */
      public java.lang.String getBlobName() {
        java.lang.Object ref = blobName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            blobName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string blob_name = 1;</code>
       *
       * <pre>
       *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
       *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBlobNameBytes() {
        java.lang.Object ref = blobName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          blobName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BLOB_HASH_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString blobHash_;
      /**
       * <code>required bytes blob_hash = 2;</code>
       *
       * <pre>
       *a hash of the contents of the blob file (which is not a protocol buffer, just a file)
       * </pre>
       */
      public boolean hasBlobHash() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes blob_hash = 2;</code>
       *
       * <pre>
       *a hash of the contents of the blob file (which is not a protocol buffer, just a file)
       * </pre>
       */
      public com.google.protobuf.ByteString getBlobHash() {
        return blobHash_;
      }

      public static final int IRRETRIEVABLE_FIELD_NUMBER = 3;
      private boolean irretrievable_;
      /**
       * <code>required bool irretrievable = 3;</code>
       *
       * <pre>
       *if true, this is in blobs-irretrievable/, else it's stored in blobs/
       * </pre>
       */
      public boolean hasIrretrievable() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool irretrievable = 3;</code>
       *
       * <pre>
       *if true, this is in blobs-irretrievable/, else it's stored in blobs/
       * </pre>
       */
      public boolean getIrretrievable() {
        return irretrievable_;
      }

      private void initFields() {
        blobName_ = "";
        blobHash_ = com.google.protobuf.ByteString.EMPTY;
        irretrievable_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasBlobName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBlobHash()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIrretrievable()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getBlobNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, blobHash_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, irretrievable_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getBlobNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, blobHash_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, irretrievable_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pamrac.Pamrac.BlobRequest.BlobHash parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pamrac.Pamrac.BlobRequest.BlobHash parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pamrac.Pamrac.BlobRequest.BlobHash parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pamrac.Pamrac.BlobRequest.BlobHash parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pamrac.Pamrac.BlobRequest.BlobHash parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pamrac.Pamrac.BlobRequest.BlobHash parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pamrac.Pamrac.BlobRequest.BlobHash parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pamrac.Pamrac.BlobRequest.BlobHash parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pamrac.Pamrac.BlobRequest.BlobHash parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pamrac.Pamrac.BlobRequest.BlobHash parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pamrac.Pamrac.BlobRequest.BlobHash prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pamrac.BlobRequest.BlobHash}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pamrac.BlobRequest.BlobHash)
          pamrac.Pamrac.BlobRequest.BlobHashOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pamrac.Pamrac.internal_static_pamrac_BlobRequest_BlobHash_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pamrac.Pamrac.internal_static_pamrac_BlobRequest_BlobHash_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pamrac.Pamrac.BlobRequest.BlobHash.class, pamrac.Pamrac.BlobRequest.BlobHash.Builder.class);
        }

        // Construct using pamrac.Pamrac.BlobRequest.BlobHash.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          blobName_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          blobHash_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          irretrievable_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pamrac.Pamrac.internal_static_pamrac_BlobRequest_BlobHash_descriptor;
        }

        public pamrac.Pamrac.BlobRequest.BlobHash getDefaultInstanceForType() {
          return pamrac.Pamrac.BlobRequest.BlobHash.getDefaultInstance();
        }

        public pamrac.Pamrac.BlobRequest.BlobHash build() {
          pamrac.Pamrac.BlobRequest.BlobHash result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pamrac.Pamrac.BlobRequest.BlobHash buildPartial() {
          pamrac.Pamrac.BlobRequest.BlobHash result = new pamrac.Pamrac.BlobRequest.BlobHash(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.blobName_ = blobName_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.blobHash_ = blobHash_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.irretrievable_ = irretrievable_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pamrac.Pamrac.BlobRequest.BlobHash) {
            return mergeFrom((pamrac.Pamrac.BlobRequest.BlobHash)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pamrac.Pamrac.BlobRequest.BlobHash other) {
          if (other == pamrac.Pamrac.BlobRequest.BlobHash.getDefaultInstance()) return this;
          if (other.hasBlobName()) {
            bitField0_ |= 0x00000001;
            blobName_ = other.blobName_;
            onChanged();
          }
          if (other.hasBlobHash()) {
            setBlobHash(other.getBlobHash());
          }
          if (other.hasIrretrievable()) {
            setIrretrievable(other.getIrretrievable());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasBlobName()) {
            
            return false;
          }
          if (!hasBlobHash()) {
            
            return false;
          }
          if (!hasIrretrievable()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pamrac.Pamrac.BlobRequest.BlobHash parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pamrac.Pamrac.BlobRequest.BlobHash) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object blobName_ = "";
        /**
         * <code>required string blob_name = 1;</code>
         *
         * <pre>
         *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
         *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
         * </pre>
         */
        public boolean hasBlobName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string blob_name = 1;</code>
         *
         * <pre>
         *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
         *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
         * </pre>
         */
        public java.lang.String getBlobName() {
          java.lang.Object ref = blobName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              blobName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string blob_name = 1;</code>
         *
         * <pre>
         *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
         *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
         * </pre>
         */
        public com.google.protobuf.ByteString
            getBlobNameBytes() {
          java.lang.Object ref = blobName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            blobName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string blob_name = 1;</code>
         *
         * <pre>
         *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
         *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
         * </pre>
         */
        public Builder setBlobName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          blobName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string blob_name = 1;</code>
         *
         * <pre>
         *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
         *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
         * </pre>
         */
        public Builder clearBlobName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          blobName_ = getDefaultInstance().getBlobName();
          onChanged();
          return this;
        }
        /**
         * <code>required string blob_name = 1;</code>
         *
         * <pre>
         *this is the name as stored on the server: base64(sha256(name~filenamesalt)) for retrievable, 
         *base64(sha-256("www.secret.com"~filenamesalt~PASSWORD)) for irretrievable
         * </pre>
         */
        public Builder setBlobNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          blobName_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString blobHash_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>required bytes blob_hash = 2;</code>
         *
         * <pre>
         *a hash of the contents of the blob file (which is not a protocol buffer, just a file)
         * </pre>
         */
        public boolean hasBlobHash() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bytes blob_hash = 2;</code>
         *
         * <pre>
         *a hash of the contents of the blob file (which is not a protocol buffer, just a file)
         * </pre>
         */
        public com.google.protobuf.ByteString getBlobHash() {
          return blobHash_;
        }
        /**
         * <code>required bytes blob_hash = 2;</code>
         *
         * <pre>
         *a hash of the contents of the blob file (which is not a protocol buffer, just a file)
         * </pre>
         */
        public Builder setBlobHash(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          blobHash_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bytes blob_hash = 2;</code>
         *
         * <pre>
         *a hash of the contents of the blob file (which is not a protocol buffer, just a file)
         * </pre>
         */
        public Builder clearBlobHash() {
          bitField0_ = (bitField0_ & ~0x00000002);
          blobHash_ = getDefaultInstance().getBlobHash();
          onChanged();
          return this;
        }

        private boolean irretrievable_ ;
        /**
         * <code>required bool irretrievable = 3;</code>
         *
         * <pre>
         *if true, this is in blobs-irretrievable/, else it's stored in blobs/
         * </pre>
         */
        public boolean hasIrretrievable() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required bool irretrievable = 3;</code>
         *
         * <pre>
         *if true, this is in blobs-irretrievable/, else it's stored in blobs/
         * </pre>
         */
        public boolean getIrretrievable() {
          return irretrievable_;
        }
        /**
         * <code>required bool irretrievable = 3;</code>
         *
         * <pre>
         *if true, this is in blobs-irretrievable/, else it's stored in blobs/
         * </pre>
         */
        public Builder setIrretrievable(boolean value) {
          bitField0_ |= 0x00000004;
          irretrievable_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool irretrievable = 3;</code>
         *
         * <pre>
         *if true, this is in blobs-irretrievable/, else it's stored in blobs/
         * </pre>
         */
        public Builder clearIrretrievable() {
          bitField0_ = (bitField0_ & ~0x00000004);
          irretrievable_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:pamrac.BlobRequest.BlobHash)
      }

      static {
        defaultInstance = new BlobHash(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pamrac.BlobRequest.BlobHash)
    }

    private int bitField0_;
    public static final int CACHED_BLOBS_FIELD_NUMBER = 1;
    private java.util.List<pamrac.Pamrac.BlobRequest.BlobHash> cachedBlobs_;
    /**
     * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
     *
     * <pre>
     *we're telling the server that we already have these versions of these blobs
     * </pre>
     */
    public java.util.List<pamrac.Pamrac.BlobRequest.BlobHash> getCachedBlobsList() {
      return cachedBlobs_;
    }
    /**
     * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
     *
     * <pre>
     *we're telling the server that we already have these versions of these blobs
     * </pre>
     */
    public java.util.List<? extends pamrac.Pamrac.BlobRequest.BlobHashOrBuilder> 
        getCachedBlobsOrBuilderList() {
      return cachedBlobs_;
    }
    /**
     * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
     *
     * <pre>
     *we're telling the server that we already have these versions of these blobs
     * </pre>
     */
    public int getCachedBlobsCount() {
      return cachedBlobs_.size();
    }
    /**
     * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
     *
     * <pre>
     *we're telling the server that we already have these versions of these blobs
     * </pre>
     */
    public pamrac.Pamrac.BlobRequest.BlobHash getCachedBlobs(int index) {
      return cachedBlobs_.get(index);
    }
    /**
     * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
     *
     * <pre>
     *we're telling the server that we already have these versions of these blobs
     * </pre>
     */
    public pamrac.Pamrac.BlobRequest.BlobHashOrBuilder getCachedBlobsOrBuilder(
        int index) {
      return cachedBlobs_.get(index);
    }

    public static final int DOWNLOADSECRET_PROOF_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString dOWNLOADSECRETProof_;
    /**
     * <code>required bytes DOWNLOADSECRET_proof = 2;</code>
     *
     * <pre>
     *prove that you know DOWNLOADSECRET by sending sha256(DOWNLOADSECRET~proof_nonce) (proof_nonce having 
     *been supplied by the server's InitBlobResponse). (so that not just anyone can download the blobs).
     * </pre>
     */
    public boolean hasDOWNLOADSECRETProof() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes DOWNLOADSECRET_proof = 2;</code>
     *
     * <pre>
     *prove that you know DOWNLOADSECRET by sending sha256(DOWNLOADSECRET~proof_nonce) (proof_nonce having 
     *been supplied by the server's InitBlobResponse). (so that not just anyone can download the blobs).
     * </pre>
     */
    public com.google.protobuf.ByteString getDOWNLOADSECRETProof() {
      return dOWNLOADSECRETProof_;
    }

    public static final int PROOF_NONCE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString proofNonce_;
    /**
     * <code>required bytes proof_nonce = 3;</code>
     *
     * <pre>
     *nonce for DOWNLOADSECRET_proof
     * </pre>
     */
    public boolean hasProofNonce() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes proof_nonce = 3;</code>
     *
     * <pre>
     *nonce for DOWNLOADSECRET_proof
     * </pre>
     */
    public com.google.protobuf.ByteString getProofNonce() {
      return proofNonce_;
    }

    private void initFields() {
      cachedBlobs_ = java.util.Collections.emptyList();
      dOWNLOADSECRETProof_ = com.google.protobuf.ByteString.EMPTY;
      proofNonce_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDOWNLOADSECRETProof()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProofNonce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCachedBlobsCount(); i++) {
        if (!getCachedBlobs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cachedBlobs_.size(); i++) {
        output.writeMessage(1, cachedBlobs_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, dOWNLOADSECRETProof_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, proofNonce_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cachedBlobs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cachedBlobs_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, dOWNLOADSECRETProof_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, proofNonce_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.BlobRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.BlobRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.BlobRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.BlobRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.BlobRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.BlobRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.BlobRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.BlobRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.BlobRequest)
        pamrac.Pamrac.BlobRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_BlobRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_BlobRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.BlobRequest.class, pamrac.Pamrac.BlobRequest.Builder.class);
      }

      // Construct using pamrac.Pamrac.BlobRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCachedBlobsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cachedBlobsBuilder_ == null) {
          cachedBlobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cachedBlobsBuilder_.clear();
        }
        dOWNLOADSECRETProof_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        proofNonce_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_BlobRequest_descriptor;
      }

      public pamrac.Pamrac.BlobRequest getDefaultInstanceForType() {
        return pamrac.Pamrac.BlobRequest.getDefaultInstance();
      }

      public pamrac.Pamrac.BlobRequest build() {
        pamrac.Pamrac.BlobRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.BlobRequest buildPartial() {
        pamrac.Pamrac.BlobRequest result = new pamrac.Pamrac.BlobRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (cachedBlobsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cachedBlobs_ = java.util.Collections.unmodifiableList(cachedBlobs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cachedBlobs_ = cachedBlobs_;
        } else {
          result.cachedBlobs_ = cachedBlobsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dOWNLOADSECRETProof_ = dOWNLOADSECRETProof_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.proofNonce_ = proofNonce_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.BlobRequest) {
          return mergeFrom((pamrac.Pamrac.BlobRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.BlobRequest other) {
        if (other == pamrac.Pamrac.BlobRequest.getDefaultInstance()) return this;
        if (cachedBlobsBuilder_ == null) {
          if (!other.cachedBlobs_.isEmpty()) {
            if (cachedBlobs_.isEmpty()) {
              cachedBlobs_ = other.cachedBlobs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCachedBlobsIsMutable();
              cachedBlobs_.addAll(other.cachedBlobs_);
            }
            onChanged();
          }
        } else {
          if (!other.cachedBlobs_.isEmpty()) {
            if (cachedBlobsBuilder_.isEmpty()) {
              cachedBlobsBuilder_.dispose();
              cachedBlobsBuilder_ = null;
              cachedBlobs_ = other.cachedBlobs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cachedBlobsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCachedBlobsFieldBuilder() : null;
            } else {
              cachedBlobsBuilder_.addAllMessages(other.cachedBlobs_);
            }
          }
        }
        if (other.hasDOWNLOADSECRETProof()) {
          setDOWNLOADSECRETProof(other.getDOWNLOADSECRETProof());
        }
        if (other.hasProofNonce()) {
          setProofNonce(other.getProofNonce());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDOWNLOADSECRETProof()) {
          
          return false;
        }
        if (!hasProofNonce()) {
          
          return false;
        }
        for (int i = 0; i < getCachedBlobsCount(); i++) {
          if (!getCachedBlobs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.BlobRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.BlobRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<pamrac.Pamrac.BlobRequest.BlobHash> cachedBlobs_ =
        java.util.Collections.emptyList();
      private void ensureCachedBlobsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cachedBlobs_ = new java.util.ArrayList<pamrac.Pamrac.BlobRequest.BlobHash>(cachedBlobs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pamrac.Pamrac.BlobRequest.BlobHash, pamrac.Pamrac.BlobRequest.BlobHash.Builder, pamrac.Pamrac.BlobRequest.BlobHashOrBuilder> cachedBlobsBuilder_;

      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public java.util.List<pamrac.Pamrac.BlobRequest.BlobHash> getCachedBlobsList() {
        if (cachedBlobsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cachedBlobs_);
        } else {
          return cachedBlobsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public int getCachedBlobsCount() {
        if (cachedBlobsBuilder_ == null) {
          return cachedBlobs_.size();
        } else {
          return cachedBlobsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public pamrac.Pamrac.BlobRequest.BlobHash getCachedBlobs(int index) {
        if (cachedBlobsBuilder_ == null) {
          return cachedBlobs_.get(index);
        } else {
          return cachedBlobsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public Builder setCachedBlobs(
          int index, pamrac.Pamrac.BlobRequest.BlobHash value) {
        if (cachedBlobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCachedBlobsIsMutable();
          cachedBlobs_.set(index, value);
          onChanged();
        } else {
          cachedBlobsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public Builder setCachedBlobs(
          int index, pamrac.Pamrac.BlobRequest.BlobHash.Builder builderForValue) {
        if (cachedBlobsBuilder_ == null) {
          ensureCachedBlobsIsMutable();
          cachedBlobs_.set(index, builderForValue.build());
          onChanged();
        } else {
          cachedBlobsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public Builder addCachedBlobs(pamrac.Pamrac.BlobRequest.BlobHash value) {
        if (cachedBlobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCachedBlobsIsMutable();
          cachedBlobs_.add(value);
          onChanged();
        } else {
          cachedBlobsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public Builder addCachedBlobs(
          int index, pamrac.Pamrac.BlobRequest.BlobHash value) {
        if (cachedBlobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCachedBlobsIsMutable();
          cachedBlobs_.add(index, value);
          onChanged();
        } else {
          cachedBlobsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public Builder addCachedBlobs(
          pamrac.Pamrac.BlobRequest.BlobHash.Builder builderForValue) {
        if (cachedBlobsBuilder_ == null) {
          ensureCachedBlobsIsMutable();
          cachedBlobs_.add(builderForValue.build());
          onChanged();
        } else {
          cachedBlobsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public Builder addCachedBlobs(
          int index, pamrac.Pamrac.BlobRequest.BlobHash.Builder builderForValue) {
        if (cachedBlobsBuilder_ == null) {
          ensureCachedBlobsIsMutable();
          cachedBlobs_.add(index, builderForValue.build());
          onChanged();
        } else {
          cachedBlobsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public Builder addAllCachedBlobs(
          java.lang.Iterable<? extends pamrac.Pamrac.BlobRequest.BlobHash> values) {
        if (cachedBlobsBuilder_ == null) {
          ensureCachedBlobsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cachedBlobs_);
          onChanged();
        } else {
          cachedBlobsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public Builder clearCachedBlobs() {
        if (cachedBlobsBuilder_ == null) {
          cachedBlobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cachedBlobsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public Builder removeCachedBlobs(int index) {
        if (cachedBlobsBuilder_ == null) {
          ensureCachedBlobsIsMutable();
          cachedBlobs_.remove(index);
          onChanged();
        } else {
          cachedBlobsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public pamrac.Pamrac.BlobRequest.BlobHash.Builder getCachedBlobsBuilder(
          int index) {
        return getCachedBlobsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public pamrac.Pamrac.BlobRequest.BlobHashOrBuilder getCachedBlobsOrBuilder(
          int index) {
        if (cachedBlobsBuilder_ == null) {
          return cachedBlobs_.get(index);  } else {
          return cachedBlobsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public java.util.List<? extends pamrac.Pamrac.BlobRequest.BlobHashOrBuilder> 
           getCachedBlobsOrBuilderList() {
        if (cachedBlobsBuilder_ != null) {
          return cachedBlobsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cachedBlobs_);
        }
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public pamrac.Pamrac.BlobRequest.BlobHash.Builder addCachedBlobsBuilder() {
        return getCachedBlobsFieldBuilder().addBuilder(
            pamrac.Pamrac.BlobRequest.BlobHash.getDefaultInstance());
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public pamrac.Pamrac.BlobRequest.BlobHash.Builder addCachedBlobsBuilder(
          int index) {
        return getCachedBlobsFieldBuilder().addBuilder(
            index, pamrac.Pamrac.BlobRequest.BlobHash.getDefaultInstance());
      }
      /**
       * <code>repeated .pamrac.BlobRequest.BlobHash cached_blobs = 1;</code>
       *
       * <pre>
       *we're telling the server that we already have these versions of these blobs
       * </pre>
       */
      public java.util.List<pamrac.Pamrac.BlobRequest.BlobHash.Builder> 
           getCachedBlobsBuilderList() {
        return getCachedBlobsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pamrac.Pamrac.BlobRequest.BlobHash, pamrac.Pamrac.BlobRequest.BlobHash.Builder, pamrac.Pamrac.BlobRequest.BlobHashOrBuilder> 
          getCachedBlobsFieldBuilder() {
        if (cachedBlobsBuilder_ == null) {
          cachedBlobsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pamrac.Pamrac.BlobRequest.BlobHash, pamrac.Pamrac.BlobRequest.BlobHash.Builder, pamrac.Pamrac.BlobRequest.BlobHashOrBuilder>(
                  cachedBlobs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cachedBlobs_ = null;
        }
        return cachedBlobsBuilder_;
      }

      private com.google.protobuf.ByteString dOWNLOADSECRETProof_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes DOWNLOADSECRET_proof = 2;</code>
       *
       * <pre>
       *prove that you know DOWNLOADSECRET by sending sha256(DOWNLOADSECRET~proof_nonce) (proof_nonce having 
       *been supplied by the server's InitBlobResponse). (so that not just anyone can download the blobs).
       * </pre>
       */
      public boolean hasDOWNLOADSECRETProof() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes DOWNLOADSECRET_proof = 2;</code>
       *
       * <pre>
       *prove that you know DOWNLOADSECRET by sending sha256(DOWNLOADSECRET~proof_nonce) (proof_nonce having 
       *been supplied by the server's InitBlobResponse). (so that not just anyone can download the blobs).
       * </pre>
       */
      public com.google.protobuf.ByteString getDOWNLOADSECRETProof() {
        return dOWNLOADSECRETProof_;
      }
      /**
       * <code>required bytes DOWNLOADSECRET_proof = 2;</code>
       *
       * <pre>
       *prove that you know DOWNLOADSECRET by sending sha256(DOWNLOADSECRET~proof_nonce) (proof_nonce having 
       *been supplied by the server's InitBlobResponse). (so that not just anyone can download the blobs).
       * </pre>
       */
      public Builder setDOWNLOADSECRETProof(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dOWNLOADSECRETProof_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes DOWNLOADSECRET_proof = 2;</code>
       *
       * <pre>
       *prove that you know DOWNLOADSECRET by sending sha256(DOWNLOADSECRET~proof_nonce) (proof_nonce having 
       *been supplied by the server's InitBlobResponse). (so that not just anyone can download the blobs).
       * </pre>
       */
      public Builder clearDOWNLOADSECRETProof() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dOWNLOADSECRETProof_ = getDefaultInstance().getDOWNLOADSECRETProof();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString proofNonce_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes proof_nonce = 3;</code>
       *
       * <pre>
       *nonce for DOWNLOADSECRET_proof
       * </pre>
       */
      public boolean hasProofNonce() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes proof_nonce = 3;</code>
       *
       * <pre>
       *nonce for DOWNLOADSECRET_proof
       * </pre>
       */
      public com.google.protobuf.ByteString getProofNonce() {
        return proofNonce_;
      }
      /**
       * <code>required bytes proof_nonce = 3;</code>
       *
       * <pre>
       *nonce for DOWNLOADSECRET_proof
       * </pre>
       */
      public Builder setProofNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        proofNonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes proof_nonce = 3;</code>
       *
       * <pre>
       *nonce for DOWNLOADSECRET_proof
       * </pre>
       */
      public Builder clearProofNonce() {
        bitField0_ = (bitField0_ & ~0x00000004);
        proofNonce_ = getDefaultInstance().getProofNonce();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.BlobRequest)
    }

    static {
      defaultInstance = new BlobRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.BlobRequest)
  }

  public interface BlobResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.BlobResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
     *
     * <pre>
     *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
     * </pre>
     */
    java.util.List<pamrac.Pamrac.BlobFile> 
        getNewBlobsList();
    /**
     * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
     *
     * <pre>
     *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
     * </pre>
     */
    pamrac.Pamrac.BlobFile getNewBlobs(int index);
    /**
     * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
     *
     * <pre>
     *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
     * </pre>
     */
    int getNewBlobsCount();
    /**
     * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
     *
     * <pre>
     *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
     * </pre>
     */
    java.util.List<? extends pamrac.Pamrac.BlobFileOrBuilder> 
        getNewBlobsOrBuilderList();
    /**
     * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
     *
     * <pre>
     *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
     * </pre>
     */
    pamrac.Pamrac.BlobFileOrBuilder getNewBlobsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pamrac.BlobResponse}
   */
  public static final class BlobResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.BlobResponse)
      BlobResponseOrBuilder {
    // Use BlobResponse.newBuilder() to construct.
    private BlobResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BlobResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BlobResponse defaultInstance;
    public static BlobResponse getDefaultInstance() {
      return defaultInstance;
    }

    public BlobResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BlobResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                newBlobs_ = new java.util.ArrayList<pamrac.Pamrac.BlobFile>();
                mutable_bitField0_ |= 0x00000001;
              }
              newBlobs_.add(input.readMessage(pamrac.Pamrac.BlobFile.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          newBlobs_ = java.util.Collections.unmodifiableList(newBlobs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_BlobResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_BlobResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.BlobResponse.class, pamrac.Pamrac.BlobResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<BlobResponse> PARSER =
        new com.google.protobuf.AbstractParser<BlobResponse>() {
      public BlobResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlobResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BlobResponse> getParserForType() {
      return PARSER;
    }

    public static final int NEW_BLOBS_FIELD_NUMBER = 1;
    private java.util.List<pamrac.Pamrac.BlobFile> newBlobs_;
    /**
     * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
     *
     * <pre>
     *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
     * </pre>
     */
    public java.util.List<pamrac.Pamrac.BlobFile> getNewBlobsList() {
      return newBlobs_;
    }
    /**
     * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
     *
     * <pre>
     *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
     * </pre>
     */
    public java.util.List<? extends pamrac.Pamrac.BlobFileOrBuilder> 
        getNewBlobsOrBuilderList() {
      return newBlobs_;
    }
    /**
     * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
     *
     * <pre>
     *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
     * </pre>
     */
    public int getNewBlobsCount() {
      return newBlobs_.size();
    }
    /**
     * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
     *
     * <pre>
     *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
     * </pre>
     */
    public pamrac.Pamrac.BlobFile getNewBlobs(int index) {
      return newBlobs_.get(index);
    }
    /**
     * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
     *
     * <pre>
     *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
     * </pre>
     */
    public pamrac.Pamrac.BlobFileOrBuilder getNewBlobsOrBuilder(
        int index) {
      return newBlobs_.get(index);
    }

    private void initFields() {
      newBlobs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getNewBlobsCount(); i++) {
        if (!getNewBlobs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < newBlobs_.size(); i++) {
        output.writeMessage(1, newBlobs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < newBlobs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, newBlobs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.BlobResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.BlobResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.BlobResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.BlobResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.BlobResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.BlobResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.BlobResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.BlobResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.BlobResponse)
        pamrac.Pamrac.BlobResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_BlobResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_BlobResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.BlobResponse.class, pamrac.Pamrac.BlobResponse.Builder.class);
      }

      // Construct using pamrac.Pamrac.BlobResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewBlobsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (newBlobsBuilder_ == null) {
          newBlobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          newBlobsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_BlobResponse_descriptor;
      }

      public pamrac.Pamrac.BlobResponse getDefaultInstanceForType() {
        return pamrac.Pamrac.BlobResponse.getDefaultInstance();
      }

      public pamrac.Pamrac.BlobResponse build() {
        pamrac.Pamrac.BlobResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.BlobResponse buildPartial() {
        pamrac.Pamrac.BlobResponse result = new pamrac.Pamrac.BlobResponse(this);
        int from_bitField0_ = bitField0_;
        if (newBlobsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            newBlobs_ = java.util.Collections.unmodifiableList(newBlobs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.newBlobs_ = newBlobs_;
        } else {
          result.newBlobs_ = newBlobsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.BlobResponse) {
          return mergeFrom((pamrac.Pamrac.BlobResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.BlobResponse other) {
        if (other == pamrac.Pamrac.BlobResponse.getDefaultInstance()) return this;
        if (newBlobsBuilder_ == null) {
          if (!other.newBlobs_.isEmpty()) {
            if (newBlobs_.isEmpty()) {
              newBlobs_ = other.newBlobs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNewBlobsIsMutable();
              newBlobs_.addAll(other.newBlobs_);
            }
            onChanged();
          }
        } else {
          if (!other.newBlobs_.isEmpty()) {
            if (newBlobsBuilder_.isEmpty()) {
              newBlobsBuilder_.dispose();
              newBlobsBuilder_ = null;
              newBlobs_ = other.newBlobs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              newBlobsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNewBlobsFieldBuilder() : null;
            } else {
              newBlobsBuilder_.addAllMessages(other.newBlobs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getNewBlobsCount(); i++) {
          if (!getNewBlobs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.BlobResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.BlobResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<pamrac.Pamrac.BlobFile> newBlobs_ =
        java.util.Collections.emptyList();
      private void ensureNewBlobsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          newBlobs_ = new java.util.ArrayList<pamrac.Pamrac.BlobFile>(newBlobs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pamrac.Pamrac.BlobFile, pamrac.Pamrac.BlobFile.Builder, pamrac.Pamrac.BlobFileOrBuilder> newBlobsBuilder_;

      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public java.util.List<pamrac.Pamrac.BlobFile> getNewBlobsList() {
        if (newBlobsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(newBlobs_);
        } else {
          return newBlobsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public int getNewBlobsCount() {
        if (newBlobsBuilder_ == null) {
          return newBlobs_.size();
        } else {
          return newBlobsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public pamrac.Pamrac.BlobFile getNewBlobs(int index) {
        if (newBlobsBuilder_ == null) {
          return newBlobs_.get(index);
        } else {
          return newBlobsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public Builder setNewBlobs(
          int index, pamrac.Pamrac.BlobFile value) {
        if (newBlobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewBlobsIsMutable();
          newBlobs_.set(index, value);
          onChanged();
        } else {
          newBlobsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public Builder setNewBlobs(
          int index, pamrac.Pamrac.BlobFile.Builder builderForValue) {
        if (newBlobsBuilder_ == null) {
          ensureNewBlobsIsMutable();
          newBlobs_.set(index, builderForValue.build());
          onChanged();
        } else {
          newBlobsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public Builder addNewBlobs(pamrac.Pamrac.BlobFile value) {
        if (newBlobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewBlobsIsMutable();
          newBlobs_.add(value);
          onChanged();
        } else {
          newBlobsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public Builder addNewBlobs(
          int index, pamrac.Pamrac.BlobFile value) {
        if (newBlobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewBlobsIsMutable();
          newBlobs_.add(index, value);
          onChanged();
        } else {
          newBlobsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public Builder addNewBlobs(
          pamrac.Pamrac.BlobFile.Builder builderForValue) {
        if (newBlobsBuilder_ == null) {
          ensureNewBlobsIsMutable();
          newBlobs_.add(builderForValue.build());
          onChanged();
        } else {
          newBlobsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public Builder addNewBlobs(
          int index, pamrac.Pamrac.BlobFile.Builder builderForValue) {
        if (newBlobsBuilder_ == null) {
          ensureNewBlobsIsMutable();
          newBlobs_.add(index, builderForValue.build());
          onChanged();
        } else {
          newBlobsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public Builder addAllNewBlobs(
          java.lang.Iterable<? extends pamrac.Pamrac.BlobFile> values) {
        if (newBlobsBuilder_ == null) {
          ensureNewBlobsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, newBlobs_);
          onChanged();
        } else {
          newBlobsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public Builder clearNewBlobs() {
        if (newBlobsBuilder_ == null) {
          newBlobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          newBlobsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public Builder removeNewBlobs(int index) {
        if (newBlobsBuilder_ == null) {
          ensureNewBlobsIsMutable();
          newBlobs_.remove(index);
          onChanged();
        } else {
          newBlobsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public pamrac.Pamrac.BlobFile.Builder getNewBlobsBuilder(
          int index) {
        return getNewBlobsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public pamrac.Pamrac.BlobFileOrBuilder getNewBlobsOrBuilder(
          int index) {
        if (newBlobsBuilder_ == null) {
          return newBlobs_.get(index);  } else {
          return newBlobsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public java.util.List<? extends pamrac.Pamrac.BlobFileOrBuilder> 
           getNewBlobsOrBuilderList() {
        if (newBlobsBuilder_ != null) {
          return newBlobsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(newBlobs_);
        }
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public pamrac.Pamrac.BlobFile.Builder addNewBlobsBuilder() {
        return getNewBlobsFieldBuilder().addBuilder(
            pamrac.Pamrac.BlobFile.getDefaultInstance());
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public pamrac.Pamrac.BlobFile.Builder addNewBlobsBuilder(
          int index) {
        return getNewBlobsFieldBuilder().addBuilder(
            index, pamrac.Pamrac.BlobFile.getDefaultInstance());
      }
      /**
       * <code>repeated .pamrac.BlobFile new_blobs = 1;</code>
       *
       * <pre>
       *each entry here either was not listed among the BlobHash's, or its hash differed. (basic cache logic)
       * </pre>
       */
      public java.util.List<pamrac.Pamrac.BlobFile.Builder> 
           getNewBlobsBuilderList() {
        return getNewBlobsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pamrac.Pamrac.BlobFile, pamrac.Pamrac.BlobFile.Builder, pamrac.Pamrac.BlobFileOrBuilder> 
          getNewBlobsFieldBuilder() {
        if (newBlobsBuilder_ == null) {
          newBlobsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pamrac.Pamrac.BlobFile, pamrac.Pamrac.BlobFile.Builder, pamrac.Pamrac.BlobFileOrBuilder>(
                  newBlobs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          newBlobs_ = null;
        }
        return newBlobsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.BlobResponse)
    }

    static {
      defaultInstance = new BlobResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.BlobResponse)
  }

  public interface InitUploadRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.InitUploadRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string hashed_filename = 1;</code>
     *
     * <pre>
     *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
     * </pre>
     */
    boolean hasHashedFilename();
    /**
     * <code>required string hashed_filename = 1;</code>
     *
     * <pre>
     *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
     * </pre>
     */
    java.lang.String getHashedFilename();
    /**
     * <code>required string hashed_filename = 1;</code>
     *
     * <pre>
     *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
     * </pre>
     */
    com.google.protobuf.ByteString
        getHashedFilenameBytes();

    /**
     * <code>required int32 proposed_version = 2;</code>
     *
     * <pre>
     *if this is not &gt; the server's current version, it will send the client its current version
     * </pre>
     */
    boolean hasProposedVersion();
    /**
     * <code>required int32 proposed_version = 2;</code>
     *
     * <pre>
     *if this is not &gt; the server's current version, it will send the client its current version
     * </pre>
     */
    int getProposedVersion();
  }
  /**
   * Protobuf type {@code pamrac.InitUploadRequest}
   */
  public static final class InitUploadRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.InitUploadRequest)
      InitUploadRequestOrBuilder {
    // Use InitUploadRequest.newBuilder() to construct.
    private InitUploadRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InitUploadRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InitUploadRequest defaultInstance;
    public static InitUploadRequest getDefaultInstance() {
      return defaultInstance;
    }

    public InitUploadRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InitUploadRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              hashedFilename_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              proposedVersion_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_InitUploadRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_InitUploadRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.InitUploadRequest.class, pamrac.Pamrac.InitUploadRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<InitUploadRequest> PARSER =
        new com.google.protobuf.AbstractParser<InitUploadRequest>() {
      public InitUploadRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitUploadRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InitUploadRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HASHED_FILENAME_FIELD_NUMBER = 1;
    private java.lang.Object hashedFilename_;
    /**
     * <code>required string hashed_filename = 1;</code>
     *
     * <pre>
     *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
     * </pre>
     */
    public boolean hasHashedFilename() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string hashed_filename = 1;</code>
     *
     * <pre>
     *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
     * </pre>
     */
    public java.lang.String getHashedFilename() {
      java.lang.Object ref = hashedFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hashedFilename_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string hashed_filename = 1;</code>
     *
     * <pre>
     *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHashedFilenameBytes() {
      java.lang.Object ref = hashedFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hashedFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROPOSED_VERSION_FIELD_NUMBER = 2;
    private int proposedVersion_;
    /**
     * <code>required int32 proposed_version = 2;</code>
     *
     * <pre>
     *if this is not &gt; the server's current version, it will send the client its current version
     * </pre>
     */
    public boolean hasProposedVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 proposed_version = 2;</code>
     *
     * <pre>
     *if this is not &gt; the server's current version, it will send the client its current version
     * </pre>
     */
    public int getProposedVersion() {
      return proposedVersion_;
    }

    private void initFields() {
      hashedFilename_ = "";
      proposedVersion_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasHashedFilename()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProposedVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHashedFilenameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, proposedVersion_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHashedFilenameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, proposedVersion_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.InitUploadRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitUploadRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitUploadRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitUploadRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitUploadRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitUploadRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitUploadRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.InitUploadRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitUploadRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitUploadRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.InitUploadRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.InitUploadRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.InitUploadRequest)
        pamrac.Pamrac.InitUploadRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_InitUploadRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_InitUploadRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.InitUploadRequest.class, pamrac.Pamrac.InitUploadRequest.Builder.class);
      }

      // Construct using pamrac.Pamrac.InitUploadRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hashedFilename_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        proposedVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_InitUploadRequest_descriptor;
      }

      public pamrac.Pamrac.InitUploadRequest getDefaultInstanceForType() {
        return pamrac.Pamrac.InitUploadRequest.getDefaultInstance();
      }

      public pamrac.Pamrac.InitUploadRequest build() {
        pamrac.Pamrac.InitUploadRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.InitUploadRequest buildPartial() {
        pamrac.Pamrac.InitUploadRequest result = new pamrac.Pamrac.InitUploadRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hashedFilename_ = hashedFilename_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.proposedVersion_ = proposedVersion_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.InitUploadRequest) {
          return mergeFrom((pamrac.Pamrac.InitUploadRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.InitUploadRequest other) {
        if (other == pamrac.Pamrac.InitUploadRequest.getDefaultInstance()) return this;
        if (other.hasHashedFilename()) {
          bitField0_ |= 0x00000001;
          hashedFilename_ = other.hashedFilename_;
          onChanged();
        }
        if (other.hasProposedVersion()) {
          setProposedVersion(other.getProposedVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHashedFilename()) {
          
          return false;
        }
        if (!hasProposedVersion()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.InitUploadRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.InitUploadRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object hashedFilename_ = "";
      /**
       * <code>required string hashed_filename = 1;</code>
       *
       * <pre>
       *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
       * </pre>
       */
      public boolean hasHashedFilename() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string hashed_filename = 1;</code>
       *
       * <pre>
       *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
       * </pre>
       */
      public java.lang.String getHashedFilename() {
        java.lang.Object ref = hashedFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hashedFilename_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string hashed_filename = 1;</code>
       *
       * <pre>
       *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHashedFilenameBytes() {
        java.lang.Object ref = hashedFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hashedFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string hashed_filename = 1;</code>
       *
       * <pre>
       *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
       * </pre>
       */
      public Builder setHashedFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hashedFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string hashed_filename = 1;</code>
       *
       * <pre>
       *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
       * </pre>
       */
      public Builder clearHashedFilename() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hashedFilename_ = getDefaultInstance().getHashedFilename();
        onChanged();
        return this;
      }
      /**
       * <code>required string hashed_filename = 1;</code>
       *
       * <pre>
       *the base64(sha256(name~filenamesalt)); the string under which the file is actually stored
       * </pre>
       */
      public Builder setHashedFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hashedFilename_ = value;
        onChanged();
        return this;
      }

      private int proposedVersion_ ;
      /**
       * <code>required int32 proposed_version = 2;</code>
       *
       * <pre>
       *if this is not &gt; the server's current version, it will send the client its current version
       * </pre>
       */
      public boolean hasProposedVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 proposed_version = 2;</code>
       *
       * <pre>
       *if this is not &gt; the server's current version, it will send the client its current version
       * </pre>
       */
      public int getProposedVersion() {
        return proposedVersion_;
      }
      /**
       * <code>required int32 proposed_version = 2;</code>
       *
       * <pre>
       *if this is not &gt; the server's current version, it will send the client its current version
       * </pre>
       */
      public Builder setProposedVersion(int value) {
        bitField0_ |= 0x00000002;
        proposedVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 proposed_version = 2;</code>
       *
       * <pre>
       *if this is not &gt; the server's current version, it will send the client its current version
       * </pre>
       */
      public Builder clearProposedVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        proposedVersion_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.InitUploadRequest)
    }

    static {
      defaultInstance = new InitUploadRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.InitUploadRequest)
  }

  public interface InitUploadResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.InitUploadResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool upload_ok = 1;</code>
     *
     * <pre>
     *may the client do the upload? false if version number &lt;= server's current version
     * </pre>
     */
    boolean hasUploadOk();
    /**
     * <code>required bool upload_ok = 1;</code>
     *
     * <pre>
     *may the client do the upload? false if version number &lt;= server's current version
     * </pre>
     */
    boolean getUploadOk();

    /**
     * <code>optional bytes nonce = 2;</code>
     *
     * <pre>
     *if the upload is in fact going to happen, they need to prove knowledge of their private key, by signing the upload
     * </pre>
     */
    boolean hasNonce();
    /**
     * <code>optional bytes nonce = 2;</code>
     *
     * <pre>
     *if the upload is in fact going to happen, they need to prove knowledge of their private key, by signing the upload
     * </pre>
     */
    com.google.protobuf.ByteString getNonce();
  }
  /**
   * Protobuf type {@code pamrac.InitUploadResponse}
   */
  public static final class InitUploadResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.InitUploadResponse)
      InitUploadResponseOrBuilder {
    // Use InitUploadResponse.newBuilder() to construct.
    private InitUploadResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InitUploadResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InitUploadResponse defaultInstance;
    public static InitUploadResponse getDefaultInstance() {
      return defaultInstance;
    }

    public InitUploadResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InitUploadResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uploadOk_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              nonce_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_InitUploadResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_InitUploadResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.InitUploadResponse.class, pamrac.Pamrac.InitUploadResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<InitUploadResponse> PARSER =
        new com.google.protobuf.AbstractParser<InitUploadResponse>() {
      public InitUploadResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitUploadResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InitUploadResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UPLOAD_OK_FIELD_NUMBER = 1;
    private boolean uploadOk_;
    /**
     * <code>required bool upload_ok = 1;</code>
     *
     * <pre>
     *may the client do the upload? false if version number &lt;= server's current version
     * </pre>
     */
    public boolean hasUploadOk() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool upload_ok = 1;</code>
     *
     * <pre>
     *may the client do the upload? false if version number &lt;= server's current version
     * </pre>
     */
    public boolean getUploadOk() {
      return uploadOk_;
    }

    public static final int NONCE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString nonce_;
    /**
     * <code>optional bytes nonce = 2;</code>
     *
     * <pre>
     *if the upload is in fact going to happen, they need to prove knowledge of their private key, by signing the upload
     * </pre>
     */
    public boolean hasNonce() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes nonce = 2;</code>
     *
     * <pre>
     *if the upload is in fact going to happen, they need to prove knowledge of their private key, by signing the upload
     * </pre>
     */
    public com.google.protobuf.ByteString getNonce() {
      return nonce_;
    }

    private void initFields() {
      uploadOk_ = false;
      nonce_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUploadOk()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, uploadOk_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, nonce_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, uploadOk_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, nonce_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.InitUploadResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitUploadResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitUploadResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitUploadResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitUploadResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitUploadResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitUploadResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.InitUploadResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitUploadResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitUploadResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.InitUploadResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.InitUploadResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.InitUploadResponse)
        pamrac.Pamrac.InitUploadResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_InitUploadResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_InitUploadResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.InitUploadResponse.class, pamrac.Pamrac.InitUploadResponse.Builder.class);
      }

      // Construct using pamrac.Pamrac.InitUploadResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uploadOk_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        nonce_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_InitUploadResponse_descriptor;
      }

      public pamrac.Pamrac.InitUploadResponse getDefaultInstanceForType() {
        return pamrac.Pamrac.InitUploadResponse.getDefaultInstance();
      }

      public pamrac.Pamrac.InitUploadResponse build() {
        pamrac.Pamrac.InitUploadResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.InitUploadResponse buildPartial() {
        pamrac.Pamrac.InitUploadResponse result = new pamrac.Pamrac.InitUploadResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uploadOk_ = uploadOk_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nonce_ = nonce_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.InitUploadResponse) {
          return mergeFrom((pamrac.Pamrac.InitUploadResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.InitUploadResponse other) {
        if (other == pamrac.Pamrac.InitUploadResponse.getDefaultInstance()) return this;
        if (other.hasUploadOk()) {
          setUploadOk(other.getUploadOk());
        }
        if (other.hasNonce()) {
          setNonce(other.getNonce());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUploadOk()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.InitUploadResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.InitUploadResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean uploadOk_ ;
      /**
       * <code>required bool upload_ok = 1;</code>
       *
       * <pre>
       *may the client do the upload? false if version number &lt;= server's current version
       * </pre>
       */
      public boolean hasUploadOk() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool upload_ok = 1;</code>
       *
       * <pre>
       *may the client do the upload? false if version number &lt;= server's current version
       * </pre>
       */
      public boolean getUploadOk() {
        return uploadOk_;
      }
      /**
       * <code>required bool upload_ok = 1;</code>
       *
       * <pre>
       *may the client do the upload? false if version number &lt;= server's current version
       * </pre>
       */
      public Builder setUploadOk(boolean value) {
        bitField0_ |= 0x00000001;
        uploadOk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool upload_ok = 1;</code>
       *
       * <pre>
       *may the client do the upload? false if version number &lt;= server's current version
       * </pre>
       */
      public Builder clearUploadOk() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uploadOk_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString nonce_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes nonce = 2;</code>
       *
       * <pre>
       *if the upload is in fact going to happen, they need to prove knowledge of their private key, by signing the upload
       * </pre>
       */
      public boolean hasNonce() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes nonce = 2;</code>
       *
       * <pre>
       *if the upload is in fact going to happen, they need to prove knowledge of their private key, by signing the upload
       * </pre>
       */
      public com.google.protobuf.ByteString getNonce() {
        return nonce_;
      }
      /**
       * <code>optional bytes nonce = 2;</code>
       *
       * <pre>
       *if the upload is in fact going to happen, they need to prove knowledge of their private key, by signing the upload
       * </pre>
       */
      public Builder setNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes nonce = 2;</code>
       *
       * <pre>
       *if the upload is in fact going to happen, they need to prove knowledge of their private key, by signing the upload
       * </pre>
       */
      public Builder clearNonce() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nonce_ = getDefaultInstance().getNonce();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.InitUploadResponse)
    }

    static {
      defaultInstance = new InitUploadResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.InitUploadResponse)
  }

  public interface BlobUploadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.BlobUpload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .pamrac.BlobFile blob = 1;</code>
     */
    boolean hasBlob();
    /**
     * <code>required .pamrac.BlobFile blob = 1;</code>
     */
    pamrac.Pamrac.BlobFile getBlob();
    /**
     * <code>required .pamrac.BlobFile blob = 1;</code>
     */
    pamrac.Pamrac.BlobFileOrBuilder getBlobOrBuilder();

    /**
     * <code>required bytes nonce = 2;</code>
     */
    boolean hasNonce();
    /**
     * <code>required bytes nonce = 2;</code>
     */
    com.google.protobuf.ByteString getNonce();

    /**
     * <code>required bytes signature = 3;</code>
     *
     * <pre>
     *prove that you know your private key: sign:
     * </pre>
     */
    boolean hasSignature();
    /**
     * <code>required bytes signature = 3;</code>
     *
     * <pre>
     *prove that you know your private key: sign:
     * </pre>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code pamrac.BlobUpload}
   */
  public static final class BlobUpload extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.BlobUpload)
      BlobUploadOrBuilder {
    // Use BlobUpload.newBuilder() to construct.
    private BlobUpload(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BlobUpload(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BlobUpload defaultInstance;
    public static BlobUpload getDefaultInstance() {
      return defaultInstance;
    }

    public BlobUpload getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BlobUpload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              pamrac.Pamrac.BlobFile.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = blob_.toBuilder();
              }
              blob_ = input.readMessage(pamrac.Pamrac.BlobFile.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blob_);
                blob_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              nonce_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_BlobUpload_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_BlobUpload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.BlobUpload.class, pamrac.Pamrac.BlobUpload.Builder.class);
    }

    public static com.google.protobuf.Parser<BlobUpload> PARSER =
        new com.google.protobuf.AbstractParser<BlobUpload>() {
      public BlobUpload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlobUpload(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BlobUpload> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int BLOB_FIELD_NUMBER = 1;
    private pamrac.Pamrac.BlobFile blob_;
    /**
     * <code>required .pamrac.BlobFile blob = 1;</code>
     */
    public boolean hasBlob() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .pamrac.BlobFile blob = 1;</code>
     */
    public pamrac.Pamrac.BlobFile getBlob() {
      return blob_;
    }
    /**
     * <code>required .pamrac.BlobFile blob = 1;</code>
     */
    public pamrac.Pamrac.BlobFileOrBuilder getBlobOrBuilder() {
      return blob_;
    }

    public static final int NONCE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString nonce_;
    /**
     * <code>required bytes nonce = 2;</code>
     */
    public boolean hasNonce() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes nonce = 2;</code>
     */
    public com.google.protobuf.ByteString getNonce() {
      return nonce_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>required bytes signature = 3;</code>
     *
     * <pre>
     *prove that you know your private key: sign:
     * </pre>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes signature = 3;</code>
     *
     * <pre>
     *prove that you know your private key: sign:
     * </pre>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      blob_ = pamrac.Pamrac.BlobFile.getDefaultInstance();
      nonce_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBlob()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNonce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBlob().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, blob_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, nonce_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, blob_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, nonce_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.BlobUpload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.BlobUpload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobUpload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.BlobUpload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobUpload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.BlobUpload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobUpload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.BlobUpload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.BlobUpload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.BlobUpload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.BlobUpload prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.BlobUpload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.BlobUpload)
        pamrac.Pamrac.BlobUploadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_BlobUpload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_BlobUpload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.BlobUpload.class, pamrac.Pamrac.BlobUpload.Builder.class);
      }

      // Construct using pamrac.Pamrac.BlobUpload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBlobFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (blobBuilder_ == null) {
          blob_ = pamrac.Pamrac.BlobFile.getDefaultInstance();
        } else {
          blobBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        nonce_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_BlobUpload_descriptor;
      }

      public pamrac.Pamrac.BlobUpload getDefaultInstanceForType() {
        return pamrac.Pamrac.BlobUpload.getDefaultInstance();
      }

      public pamrac.Pamrac.BlobUpload build() {
        pamrac.Pamrac.BlobUpload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.BlobUpload buildPartial() {
        pamrac.Pamrac.BlobUpload result = new pamrac.Pamrac.BlobUpload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (blobBuilder_ == null) {
          result.blob_ = blob_;
        } else {
          result.blob_ = blobBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nonce_ = nonce_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.BlobUpload) {
          return mergeFrom((pamrac.Pamrac.BlobUpload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.BlobUpload other) {
        if (other == pamrac.Pamrac.BlobUpload.getDefaultInstance()) return this;
        if (other.hasBlob()) {
          mergeBlob(other.getBlob());
        }
        if (other.hasNonce()) {
          setNonce(other.getNonce());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBlob()) {
          
          return false;
        }
        if (!hasNonce()) {
          
          return false;
        }
        if (!hasSignature()) {
          
          return false;
        }
        if (!getBlob().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.BlobUpload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.BlobUpload) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private pamrac.Pamrac.BlobFile blob_ = pamrac.Pamrac.BlobFile.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.BlobFile, pamrac.Pamrac.BlobFile.Builder, pamrac.Pamrac.BlobFileOrBuilder> blobBuilder_;
      /**
       * <code>required .pamrac.BlobFile blob = 1;</code>
       */
      public boolean hasBlob() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .pamrac.BlobFile blob = 1;</code>
       */
      public pamrac.Pamrac.BlobFile getBlob() {
        if (blobBuilder_ == null) {
          return blob_;
        } else {
          return blobBuilder_.getMessage();
        }
      }
      /**
       * <code>required .pamrac.BlobFile blob = 1;</code>
       */
      public Builder setBlob(pamrac.Pamrac.BlobFile value) {
        if (blobBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blob_ = value;
          onChanged();
        } else {
          blobBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .pamrac.BlobFile blob = 1;</code>
       */
      public Builder setBlob(
          pamrac.Pamrac.BlobFile.Builder builderForValue) {
        if (blobBuilder_ == null) {
          blob_ = builderForValue.build();
          onChanged();
        } else {
          blobBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .pamrac.BlobFile blob = 1;</code>
       */
      public Builder mergeBlob(pamrac.Pamrac.BlobFile value) {
        if (blobBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              blob_ != pamrac.Pamrac.BlobFile.getDefaultInstance()) {
            blob_ =
              pamrac.Pamrac.BlobFile.newBuilder(blob_).mergeFrom(value).buildPartial();
          } else {
            blob_ = value;
          }
          onChanged();
        } else {
          blobBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .pamrac.BlobFile blob = 1;</code>
       */
      public Builder clearBlob() {
        if (blobBuilder_ == null) {
          blob_ = pamrac.Pamrac.BlobFile.getDefaultInstance();
          onChanged();
        } else {
          blobBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .pamrac.BlobFile blob = 1;</code>
       */
      public pamrac.Pamrac.BlobFile.Builder getBlobBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getBlobFieldBuilder().getBuilder();
      }
      /**
       * <code>required .pamrac.BlobFile blob = 1;</code>
       */
      public pamrac.Pamrac.BlobFileOrBuilder getBlobOrBuilder() {
        if (blobBuilder_ != null) {
          return blobBuilder_.getMessageOrBuilder();
        } else {
          return blob_;
        }
      }
      /**
       * <code>required .pamrac.BlobFile blob = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.BlobFile, pamrac.Pamrac.BlobFile.Builder, pamrac.Pamrac.BlobFileOrBuilder> 
          getBlobFieldBuilder() {
        if (blobBuilder_ == null) {
          blobBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.BlobFile, pamrac.Pamrac.BlobFile.Builder, pamrac.Pamrac.BlobFileOrBuilder>(
                  getBlob(),
                  getParentForChildren(),
                  isClean());
          blob_ = null;
        }
        return blobBuilder_;
      }

      private com.google.protobuf.ByteString nonce_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes nonce = 2;</code>
       */
      public boolean hasNonce() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes nonce = 2;</code>
       */
      public com.google.protobuf.ByteString getNonce() {
        return nonce_;
      }
      /**
       * <code>required bytes nonce = 2;</code>
       */
      public Builder setNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes nonce = 2;</code>
       */
      public Builder clearNonce() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nonce_ = getDefaultInstance().getNonce();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes signature = 3;</code>
       *
       * <pre>
       *prove that you know your private key: sign:
       * </pre>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes signature = 3;</code>
       *
       * <pre>
       *prove that you know your private key: sign:
       * </pre>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>required bytes signature = 3;</code>
       *
       * <pre>
       *prove that you know your private key: sign:
       * </pre>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes signature = 3;</code>
       *
       * <pre>
       *prove that you know your private key: sign:
       * </pre>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.BlobUpload)
    }

    static {
      defaultInstance = new BlobUpload(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.BlobUpload)
  }

  public interface MasterKeyPasswordedFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.MasterKeyPasswordedFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes salt = 1;</code>
     *
     * <pre>
     *for deriving the key that encrypts master_key_ciphertext, from PASSWORD
     * </pre>
     */
    boolean hasSalt();
    /**
     * <code>required bytes salt = 1;</code>
     *
     * <pre>
     *for deriving the key that encrypts master_key_ciphertext, from PASSWORD
     * </pre>
     */
    com.google.protobuf.ByteString getSalt();

    /**
     * <code>required bytes aes_init_vector = 2;</code>
     */
    boolean hasAesInitVector();
    /**
     * <code>required bytes aes_init_vector = 2;</code>
     */
    com.google.protobuf.ByteString getAesInitVector();

    /**
     * <code>required bytes inner_ciphertext = 3;</code>
     */
    boolean hasInnerCiphertext();
    /**
     * <code>required bytes inner_ciphertext = 3;</code>
     */
    com.google.protobuf.ByteString getInnerCiphertext();
  }
  /**
   * Protobuf type {@code pamrac.MasterKeyPasswordedFile}
   *
   * <pre>
   *The AES encryption inside a MasterKeyPasswordedFile is done with an AES-256 key derived 
   *from the master PASSWORD.
   *The Android client needs to have this exact same MasterKeyPasswordedFile file (in order to 
   *retrieve MASTER, in order to decrypt non-irretrievable blobs). 
   *This masterkey_passworded file should never need to change, 
   *except if you needed to reconstruct MASTER of course!
   * </pre>
   */
  public static final class MasterKeyPasswordedFile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.MasterKeyPasswordedFile)
      MasterKeyPasswordedFileOrBuilder {
    // Use MasterKeyPasswordedFile.newBuilder() to construct.
    private MasterKeyPasswordedFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MasterKeyPasswordedFile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MasterKeyPasswordedFile defaultInstance;
    public static MasterKeyPasswordedFile getDefaultInstance() {
      return defaultInstance;
    }

    public MasterKeyPasswordedFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MasterKeyPasswordedFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              salt_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              aesInitVector_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              innerCiphertext_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_MasterKeyPasswordedFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_MasterKeyPasswordedFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.MasterKeyPasswordedFile.class, pamrac.Pamrac.MasterKeyPasswordedFile.Builder.class);
    }

    public static com.google.protobuf.Parser<MasterKeyPasswordedFile> PARSER =
        new com.google.protobuf.AbstractParser<MasterKeyPasswordedFile>() {
      public MasterKeyPasswordedFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MasterKeyPasswordedFile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MasterKeyPasswordedFile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SALT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString salt_;
    /**
     * <code>required bytes salt = 1;</code>
     *
     * <pre>
     *for deriving the key that encrypts master_key_ciphertext, from PASSWORD
     * </pre>
     */
    public boolean hasSalt() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes salt = 1;</code>
     *
     * <pre>
     *for deriving the key that encrypts master_key_ciphertext, from PASSWORD
     * </pre>
     */
    public com.google.protobuf.ByteString getSalt() {
      return salt_;
    }

    public static final int AES_INIT_VECTOR_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString aesInitVector_;
    /**
     * <code>required bytes aes_init_vector = 2;</code>
     */
    public boolean hasAesInitVector() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes aes_init_vector = 2;</code>
     */
    public com.google.protobuf.ByteString getAesInitVector() {
      return aesInitVector_;
    }

    public static final int INNER_CIPHERTEXT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString innerCiphertext_;
    /**
     * <code>required bytes inner_ciphertext = 3;</code>
     */
    public boolean hasInnerCiphertext() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes inner_ciphertext = 3;</code>
     */
    public com.google.protobuf.ByteString getInnerCiphertext() {
      return innerCiphertext_;
    }

    private void initFields() {
      salt_ = com.google.protobuf.ByteString.EMPTY;
      aesInitVector_ = com.google.protobuf.ByteString.EMPTY;
      innerCiphertext_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSalt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAesInitVector()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInnerCiphertext()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, salt_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, aesInitVector_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, innerCiphertext_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, salt_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, aesInitVector_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, innerCiphertext_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.MasterKeyPasswordedFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.MasterKeyPasswordedFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.MasterKeyPasswordedFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.MasterKeyPasswordedFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.MasterKeyPasswordedFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.MasterKeyPasswordedFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.MasterKeyPasswordedFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.MasterKeyPasswordedFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.MasterKeyPasswordedFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.MasterKeyPasswordedFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.MasterKeyPasswordedFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.MasterKeyPasswordedFile}
     *
     * <pre>
     *The AES encryption inside a MasterKeyPasswordedFile is done with an AES-256 key derived 
     *from the master PASSWORD.
     *The Android client needs to have this exact same MasterKeyPasswordedFile file (in order to 
     *retrieve MASTER, in order to decrypt non-irretrievable blobs). 
     *This masterkey_passworded file should never need to change, 
     *except if you needed to reconstruct MASTER of course!
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.MasterKeyPasswordedFile)
        pamrac.Pamrac.MasterKeyPasswordedFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_MasterKeyPasswordedFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_MasterKeyPasswordedFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.MasterKeyPasswordedFile.class, pamrac.Pamrac.MasterKeyPasswordedFile.Builder.class);
      }

      // Construct using pamrac.Pamrac.MasterKeyPasswordedFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        salt_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        aesInitVector_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        innerCiphertext_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_MasterKeyPasswordedFile_descriptor;
      }

      public pamrac.Pamrac.MasterKeyPasswordedFile getDefaultInstanceForType() {
        return pamrac.Pamrac.MasterKeyPasswordedFile.getDefaultInstance();
      }

      public pamrac.Pamrac.MasterKeyPasswordedFile build() {
        pamrac.Pamrac.MasterKeyPasswordedFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.MasterKeyPasswordedFile buildPartial() {
        pamrac.Pamrac.MasterKeyPasswordedFile result = new pamrac.Pamrac.MasterKeyPasswordedFile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.salt_ = salt_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.aesInitVector_ = aesInitVector_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.innerCiphertext_ = innerCiphertext_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.MasterKeyPasswordedFile) {
          return mergeFrom((pamrac.Pamrac.MasterKeyPasswordedFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.MasterKeyPasswordedFile other) {
        if (other == pamrac.Pamrac.MasterKeyPasswordedFile.getDefaultInstance()) return this;
        if (other.hasSalt()) {
          setSalt(other.getSalt());
        }
        if (other.hasAesInitVector()) {
          setAesInitVector(other.getAesInitVector());
        }
        if (other.hasInnerCiphertext()) {
          setInnerCiphertext(other.getInnerCiphertext());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSalt()) {
          
          return false;
        }
        if (!hasAesInitVector()) {
          
          return false;
        }
        if (!hasInnerCiphertext()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.MasterKeyPasswordedFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.MasterKeyPasswordedFile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString salt_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes salt = 1;</code>
       *
       * <pre>
       *for deriving the key that encrypts master_key_ciphertext, from PASSWORD
       * </pre>
       */
      public boolean hasSalt() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes salt = 1;</code>
       *
       * <pre>
       *for deriving the key that encrypts master_key_ciphertext, from PASSWORD
       * </pre>
       */
      public com.google.protobuf.ByteString getSalt() {
        return salt_;
      }
      /**
       * <code>required bytes salt = 1;</code>
       *
       * <pre>
       *for deriving the key that encrypts master_key_ciphertext, from PASSWORD
       * </pre>
       */
      public Builder setSalt(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        salt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes salt = 1;</code>
       *
       * <pre>
       *for deriving the key that encrypts master_key_ciphertext, from PASSWORD
       * </pre>
       */
      public Builder clearSalt() {
        bitField0_ = (bitField0_ & ~0x00000001);
        salt_ = getDefaultInstance().getSalt();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString aesInitVector_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes aes_init_vector = 2;</code>
       */
      public boolean hasAesInitVector() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes aes_init_vector = 2;</code>
       */
      public com.google.protobuf.ByteString getAesInitVector() {
        return aesInitVector_;
      }
      /**
       * <code>required bytes aes_init_vector = 2;</code>
       */
      public Builder setAesInitVector(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        aesInitVector_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes aes_init_vector = 2;</code>
       */
      public Builder clearAesInitVector() {
        bitField0_ = (bitField0_ & ~0x00000002);
        aesInitVector_ = getDefaultInstance().getAesInitVector();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString innerCiphertext_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes inner_ciphertext = 3;</code>
       */
      public boolean hasInnerCiphertext() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes inner_ciphertext = 3;</code>
       */
      public com.google.protobuf.ByteString getInnerCiphertext() {
        return innerCiphertext_;
      }
      /**
       * <code>required bytes inner_ciphertext = 3;</code>
       */
      public Builder setInnerCiphertext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        innerCiphertext_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes inner_ciphertext = 3;</code>
       */
      public Builder clearInnerCiphertext() {
        bitField0_ = (bitField0_ & ~0x00000004);
        innerCiphertext_ = getDefaultInstance().getInnerCiphertext();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.MasterKeyPasswordedFile)
    }

    static {
      defaultInstance = new MasterKeyPasswordedFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.MasterKeyPasswordedFile)
  }

  public interface InnerPasswordedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.InnerPassworded)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes master_key = 1;</code>
     *
     * <pre>
     *AES key, recoverable blobs are encrypted with this one.
     * </pre>
     */
    boolean hasMasterKey();
    /**
     * <code>required bytes master_key = 1;</code>
     *
     * <pre>
     *AES key, recoverable blobs are encrypted with this one.
     * </pre>
     */
    com.google.protobuf.ByteString getMasterKey();

    /**
     * <code>required bytes filenamesalt = 2;</code>
     *
     * <pre>
     *for picking out a specific blob to extract, and for uploading new blobs.
     * </pre>
     */
    boolean hasFilenamesalt();
    /**
     * <code>required bytes filenamesalt = 2;</code>
     *
     * <pre>
     *for picking out a specific blob to extract, and for uploading new blobs.
     * </pre>
     */
    com.google.protobuf.ByteString getFilenamesalt();

    /**
     * <code>repeated string site_names = 3;</code>
     *
     * <pre>
     *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
     *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getSiteNamesList();
    /**
     * <code>repeated string site_names = 3;</code>
     *
     * <pre>
     *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
     *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
     * </pre>
     */
    int getSiteNamesCount();
    /**
     * <code>repeated string site_names = 3;</code>
     *
     * <pre>
     *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
     *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
     * </pre>
     */
    java.lang.String getSiteNames(int index);
    /**
     * <code>repeated string site_names = 3;</code>
     *
     * <pre>
     *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
     *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
     * </pre>
     */
    com.google.protobuf.ByteString
        getSiteNamesBytes(int index);

    /**
     * <code>required bytes DOWNLOADSECRET = 4;</code>
     *
     * <pre>
     *server also has this. prove knowledge of it to convince the server to hand you blobs.
     * </pre>
     */
    boolean hasDOWNLOADSECRET();
    /**
     * <code>required bytes DOWNLOADSECRET = 4;</code>
     *
     * <pre>
     *server also has this. prove knowledge of it to convince the server to hand you blobs.
     * </pre>
     */
    com.google.protobuf.ByteString getDOWNLOADSECRET();

    /**
     * <code>required bytes private_key = 5;</code>
     *
     * <pre>
     *the private key from the keypair that is the user's identity to others in the system.
     * </pre>
     */
    boolean hasPrivateKey();
    /**
     * <code>required bytes private_key = 5;</code>
     *
     * <pre>
     *the private key from the keypair that is the user's identity to others in the system.
     * </pre>
     */
    com.google.protobuf.ByteString getPrivateKey();
  }
  /**
   * Protobuf type {@code pamrac.InnerPassworded}
   *
   * <pre>
   *THE CROWN JEWELS!!! If you can see the inside of this, 
   *you have the ability to do EVERYTHING that the user is supposed to be able to do.
   * </pre>
   */
  public static final class InnerPassworded extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.InnerPassworded)
      InnerPasswordedOrBuilder {
    // Use InnerPassworded.newBuilder() to construct.
    private InnerPassworded(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InnerPassworded(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InnerPassworded defaultInstance;
    public static InnerPassworded getDefaultInstance() {
      return defaultInstance;
    }

    public InnerPassworded getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InnerPassworded(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              masterKey_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              filenamesalt_ = input.readBytes();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                siteNames_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              siteNames_.add(bs);
              break;
            }
            case 34: {
              bitField0_ |= 0x00000004;
              dOWNLOADSECRET_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              privateKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          siteNames_ = siteNames_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_InnerPassworded_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_InnerPassworded_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.InnerPassworded.class, pamrac.Pamrac.InnerPassworded.Builder.class);
    }

    public static com.google.protobuf.Parser<InnerPassworded> PARSER =
        new com.google.protobuf.AbstractParser<InnerPassworded>() {
      public InnerPassworded parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InnerPassworded(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InnerPassworded> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MASTER_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString masterKey_;
    /**
     * <code>required bytes master_key = 1;</code>
     *
     * <pre>
     *AES key, recoverable blobs are encrypted with this one.
     * </pre>
     */
    public boolean hasMasterKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes master_key = 1;</code>
     *
     * <pre>
     *AES key, recoverable blobs are encrypted with this one.
     * </pre>
     */
    public com.google.protobuf.ByteString getMasterKey() {
      return masterKey_;
    }

    public static final int FILENAMESALT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString filenamesalt_;
    /**
     * <code>required bytes filenamesalt = 2;</code>
     *
     * <pre>
     *for picking out a specific blob to extract, and for uploading new blobs.
     * </pre>
     */
    public boolean hasFilenamesalt() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes filenamesalt = 2;</code>
     *
     * <pre>
     *for picking out a specific blob to extract, and for uploading new blobs.
     * </pre>
     */
    public com.google.protobuf.ByteString getFilenamesalt() {
      return filenamesalt_;
    }

    public static final int SITE_NAMES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList siteNames_;
    /**
     * <code>repeated string site_names = 3;</code>
     *
     * <pre>
     *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
     *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getSiteNamesList() {
      return siteNames_;
    }
    /**
     * <code>repeated string site_names = 3;</code>
     *
     * <pre>
     *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
     *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
     * </pre>
     */
    public int getSiteNamesCount() {
      return siteNames_.size();
    }
    /**
     * <code>repeated string site_names = 3;</code>
     *
     * <pre>
     *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
     *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
     * </pre>
     */
    public java.lang.String getSiteNames(int index) {
      return siteNames_.get(index);
    }
    /**
     * <code>repeated string site_names = 3;</code>
     *
     * <pre>
     *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
     *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSiteNamesBytes(int index) {
      return siteNames_.getByteString(index);
    }

    public static final int DOWNLOADSECRET_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString dOWNLOADSECRET_;
    /**
     * <code>required bytes DOWNLOADSECRET = 4;</code>
     *
     * <pre>
     *server also has this. prove knowledge of it to convince the server to hand you blobs.
     * </pre>
     */
    public boolean hasDOWNLOADSECRET() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes DOWNLOADSECRET = 4;</code>
     *
     * <pre>
     *server also has this. prove knowledge of it to convince the server to hand you blobs.
     * </pre>
     */
    public com.google.protobuf.ByteString getDOWNLOADSECRET() {
      return dOWNLOADSECRET_;
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <code>required bytes private_key = 5;</code>
     *
     * <pre>
     *the private key from the keypair that is the user's identity to others in the system.
     * </pre>
     */
    public boolean hasPrivateKey() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bytes private_key = 5;</code>
     *
     * <pre>
     *the private key from the keypair that is the user's identity to others in the system.
     * </pre>
     */
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }

    private void initFields() {
      masterKey_ = com.google.protobuf.ByteString.EMPTY;
      filenamesalt_ = com.google.protobuf.ByteString.EMPTY;
      siteNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      dOWNLOADSECRET_ = com.google.protobuf.ByteString.EMPTY;
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMasterKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFilenamesalt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDOWNLOADSECRET()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPrivateKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, masterKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, filenamesalt_);
      }
      for (int i = 0; i < siteNames_.size(); i++) {
        output.writeBytes(3, siteNames_.getByteString(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, dOWNLOADSECRET_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, privateKey_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, masterKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, filenamesalt_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < siteNames_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(siteNames_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getSiteNamesList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, dOWNLOADSECRET_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, privateKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.InnerPassworded parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InnerPassworded parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerPassworded parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InnerPassworded parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerPassworded parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InnerPassworded parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerPassworded parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.InnerPassworded parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerPassworded parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InnerPassworded parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.InnerPassworded prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.InnerPassworded}
     *
     * <pre>
     *THE CROWN JEWELS!!! If you can see the inside of this, 
     *you have the ability to do EVERYTHING that the user is supposed to be able to do.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.InnerPassworded)
        pamrac.Pamrac.InnerPasswordedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_InnerPassworded_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_InnerPassworded_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.InnerPassworded.class, pamrac.Pamrac.InnerPassworded.Builder.class);
      }

      // Construct using pamrac.Pamrac.InnerPassworded.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        masterKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        filenamesalt_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        siteNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        dOWNLOADSECRET_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        privateKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_InnerPassworded_descriptor;
      }

      public pamrac.Pamrac.InnerPassworded getDefaultInstanceForType() {
        return pamrac.Pamrac.InnerPassworded.getDefaultInstance();
      }

      public pamrac.Pamrac.InnerPassworded build() {
        pamrac.Pamrac.InnerPassworded result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.InnerPassworded buildPartial() {
        pamrac.Pamrac.InnerPassworded result = new pamrac.Pamrac.InnerPassworded(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.masterKey_ = masterKey_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.filenamesalt_ = filenamesalt_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          siteNames_ = siteNames_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.siteNames_ = siteNames_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dOWNLOADSECRET_ = dOWNLOADSECRET_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.privateKey_ = privateKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.InnerPassworded) {
          return mergeFrom((pamrac.Pamrac.InnerPassworded)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.InnerPassworded other) {
        if (other == pamrac.Pamrac.InnerPassworded.getDefaultInstance()) return this;
        if (other.hasMasterKey()) {
          setMasterKey(other.getMasterKey());
        }
        if (other.hasFilenamesalt()) {
          setFilenamesalt(other.getFilenamesalt());
        }
        if (!other.siteNames_.isEmpty()) {
          if (siteNames_.isEmpty()) {
            siteNames_ = other.siteNames_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSiteNamesIsMutable();
            siteNames_.addAll(other.siteNames_);
          }
          onChanged();
        }
        if (other.hasDOWNLOADSECRET()) {
          setDOWNLOADSECRET(other.getDOWNLOADSECRET());
        }
        if (other.hasPrivateKey()) {
          setPrivateKey(other.getPrivateKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMasterKey()) {
          
          return false;
        }
        if (!hasFilenamesalt()) {
          
          return false;
        }
        if (!hasDOWNLOADSECRET()) {
          
          return false;
        }
        if (!hasPrivateKey()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.InnerPassworded parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.InnerPassworded) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString masterKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes master_key = 1;</code>
       *
       * <pre>
       *AES key, recoverable blobs are encrypted with this one.
       * </pre>
       */
      public boolean hasMasterKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes master_key = 1;</code>
       *
       * <pre>
       *AES key, recoverable blobs are encrypted with this one.
       * </pre>
       */
      public com.google.protobuf.ByteString getMasterKey() {
        return masterKey_;
      }
      /**
       * <code>required bytes master_key = 1;</code>
       *
       * <pre>
       *AES key, recoverable blobs are encrypted with this one.
       * </pre>
       */
      public Builder setMasterKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        masterKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes master_key = 1;</code>
       *
       * <pre>
       *AES key, recoverable blobs are encrypted with this one.
       * </pre>
       */
      public Builder clearMasterKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        masterKey_ = getDefaultInstance().getMasterKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString filenamesalt_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes filenamesalt = 2;</code>
       *
       * <pre>
       *for picking out a specific blob to extract, and for uploading new blobs.
       * </pre>
       */
      public boolean hasFilenamesalt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes filenamesalt = 2;</code>
       *
       * <pre>
       *for picking out a specific blob to extract, and for uploading new blobs.
       * </pre>
       */
      public com.google.protobuf.ByteString getFilenamesalt() {
        return filenamesalt_;
      }
      /**
       * <code>required bytes filenamesalt = 2;</code>
       *
       * <pre>
       *for picking out a specific blob to extract, and for uploading new blobs.
       * </pre>
       */
      public Builder setFilenamesalt(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        filenamesalt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes filenamesalt = 2;</code>
       *
       * <pre>
       *for picking out a specific blob to extract, and for uploading new blobs.
       * </pre>
       */
      public Builder clearFilenamesalt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        filenamesalt_ = getDefaultInstance().getFilenamesalt();
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList siteNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSiteNamesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          siteNames_ = new com.google.protobuf.LazyStringArrayList(siteNames_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string site_names = 3;</code>
       *
       * <pre>
       *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
       *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getSiteNamesList() {
        return siteNames_.getUnmodifiableView();
      }
      /**
       * <code>repeated string site_names = 3;</code>
       *
       * <pre>
       *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
       *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
       * </pre>
       */
      public int getSiteNamesCount() {
        return siteNames_.size();
      }
      /**
       * <code>repeated string site_names = 3;</code>
       *
       * <pre>
       *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
       *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
       * </pre>
       */
      public java.lang.String getSiteNames(int index) {
        return siteNames_.get(index);
      }
      /**
       * <code>repeated string site_names = 3;</code>
       *
       * <pre>
       *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
       *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSiteNamesBytes(int index) {
        return siteNames_.getByteString(index);
      }
      /**
       * <code>repeated string site_names = 3;</code>
       *
       * <pre>
       *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
       *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
       * </pre>
       */
      public Builder setSiteNames(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSiteNamesIsMutable();
        siteNames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string site_names = 3;</code>
       *
       * <pre>
       *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
       *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
       * </pre>
       */
      public Builder addSiteNames(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSiteNamesIsMutable();
        siteNames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string site_names = 3;</code>
       *
       * <pre>
       *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
       *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
       * </pre>
       */
      public Builder addAllSiteNames(
          java.lang.Iterable<java.lang.String> values) {
        ensureSiteNamesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, siteNames_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string site_names = 3;</code>
       *
       * <pre>
       *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
       *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
       * </pre>
       */
      public Builder clearSiteNames() {
        siteNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string site_names = 3;</code>
       *
       * <pre>
       *So we can display to the user a list of all available sites when they enter PASSWORD into the app.
       *(Which can then be hashed together with filenamesalt to get the blob that that site's passwords can be found in).
       * </pre>
       */
      public Builder addSiteNamesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSiteNamesIsMutable();
        siteNames_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString dOWNLOADSECRET_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes DOWNLOADSECRET = 4;</code>
       *
       * <pre>
       *server also has this. prove knowledge of it to convince the server to hand you blobs.
       * </pre>
       */
      public boolean hasDOWNLOADSECRET() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes DOWNLOADSECRET = 4;</code>
       *
       * <pre>
       *server also has this. prove knowledge of it to convince the server to hand you blobs.
       * </pre>
       */
      public com.google.protobuf.ByteString getDOWNLOADSECRET() {
        return dOWNLOADSECRET_;
      }
      /**
       * <code>required bytes DOWNLOADSECRET = 4;</code>
       *
       * <pre>
       *server also has this. prove knowledge of it to convince the server to hand you blobs.
       * </pre>
       */
      public Builder setDOWNLOADSECRET(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        dOWNLOADSECRET_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes DOWNLOADSECRET = 4;</code>
       *
       * <pre>
       *server also has this. prove knowledge of it to convince the server to hand you blobs.
       * </pre>
       */
      public Builder clearDOWNLOADSECRET() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dOWNLOADSECRET_ = getDefaultInstance().getDOWNLOADSECRET();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes private_key = 5;</code>
       *
       * <pre>
       *the private key from the keypair that is the user's identity to others in the system.
       * </pre>
       */
      public boolean hasPrivateKey() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bytes private_key = 5;</code>
       *
       * <pre>
       *the private key from the keypair that is the user's identity to others in the system.
       * </pre>
       */
      public com.google.protobuf.ByteString getPrivateKey() {
        return privateKey_;
      }
      /**
       * <code>required bytes private_key = 5;</code>
       *
       * <pre>
       *the private key from the keypair that is the user's identity to others in the system.
       * </pre>
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        privateKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes private_key = 5;</code>
       *
       * <pre>
       *the private key from the keypair that is the user's identity to others in the system.
       * </pre>
       */
      public Builder clearPrivateKey() {
        bitField0_ = (bitField0_ & ~0x00000010);
        privateKey_ = getDefaultInstance().getPrivateKey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.InnerPassworded)
    }

    static {
      defaultInstance = new InnerPassworded(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.InnerPassworded)
  }

  public interface MasterKeyRetrievableFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.MasterKeyRetrievableFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *NOTE: although timestamp is also in the KeyShare message, which this 
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *NOTE: although timestamp is also in the KeyShare message, which this 
     * </pre>
     */
    long getTimestamp();

    /**
     * <code>required bytes aes_init_vector = 2;</code>
     */
    boolean hasAesInitVector();
    /**
     * <code>required bytes aes_init_vector = 2;</code>
     */
    com.google.protobuf.ByteString getAesInitVector();

    /**
     * <code>required bytes inner_retrievable_ciphertext = 3;</code>
     *
     * <pre>
     *encryption of InnerRetrievable
     * </pre>
     */
    boolean hasInnerRetrievableCiphertext();
    /**
     * <code>required bytes inner_retrievable_ciphertext = 3;</code>
     *
     * <pre>
     *encryption of InnerRetrievable
     * </pre>
     */
    com.google.protobuf.ByteString getInnerRetrievableCiphertext();
  }
  /**
   * Protobuf type {@code pamrac.MasterKeyRetrievableFile}
   *
   * <pre>
   *The AES encryption inside a MasterKeyRetrievableFile is done with an AES-256 key that is the XOR of:
   *====&gt;the "initiator mask": a random 32 bytes that all of the initiators have.
   *====&gt;a random 32 bytes that is _the thing_ that is shared. This random secret does not exist in any single place (even encrypted); 
   *		it exists only as shares, and can only be accessed by assembling enough.
   *This MasterKeyRetrievableFile is also given to any friends who are initiators.
   *NOTE inner_retrievable_ciphertext is now encrypted by (the shared secret XOR the initiator mask). Each initiator has
   *NOTE the initiator mask. Basically: I don't want stealing MasterKeyRetrievableFile (from bob's server; maybe bob's server 
   *NOTE itself is the adversary) + social-engineering enough NON-initiator shares to be enough to retrieve.
   * </pre>
   */
  public static final class MasterKeyRetrievableFile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.MasterKeyRetrievableFile)
      MasterKeyRetrievableFileOrBuilder {
    // Use MasterKeyRetrievableFile.newBuilder() to construct.
    private MasterKeyRetrievableFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MasterKeyRetrievableFile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MasterKeyRetrievableFile defaultInstance;
    public static MasterKeyRetrievableFile getDefaultInstance() {
      return defaultInstance;
    }

    public MasterKeyRetrievableFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MasterKeyRetrievableFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              aesInitVector_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              innerRetrievableCiphertext_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_MasterKeyRetrievableFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_MasterKeyRetrievableFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.MasterKeyRetrievableFile.class, pamrac.Pamrac.MasterKeyRetrievableFile.Builder.class);
    }

    public static com.google.protobuf.Parser<MasterKeyRetrievableFile> PARSER =
        new com.google.protobuf.AbstractParser<MasterKeyRetrievableFile>() {
      public MasterKeyRetrievableFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MasterKeyRetrievableFile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MasterKeyRetrievableFile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *NOTE: although timestamp is also in the KeyShare message, which this 
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *NOTE: although timestamp is also in the KeyShare message, which this 
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int AES_INIT_VECTOR_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString aesInitVector_;
    /**
     * <code>required bytes aes_init_vector = 2;</code>
     */
    public boolean hasAesInitVector() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes aes_init_vector = 2;</code>
     */
    public com.google.protobuf.ByteString getAesInitVector() {
      return aesInitVector_;
    }

    public static final int INNER_RETRIEVABLE_CIPHERTEXT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString innerRetrievableCiphertext_;
    /**
     * <code>required bytes inner_retrievable_ciphertext = 3;</code>
     *
     * <pre>
     *encryption of InnerRetrievable
     * </pre>
     */
    public boolean hasInnerRetrievableCiphertext() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes inner_retrievable_ciphertext = 3;</code>
     *
     * <pre>
     *encryption of InnerRetrievable
     * </pre>
     */
    public com.google.protobuf.ByteString getInnerRetrievableCiphertext() {
      return innerRetrievableCiphertext_;
    }

    private void initFields() {
      timestamp_ = 0L;
      aesInitVector_ = com.google.protobuf.ByteString.EMPTY;
      innerRetrievableCiphertext_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAesInitVector()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInnerRetrievableCiphertext()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, aesInitVector_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, innerRetrievableCiphertext_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, aesInitVector_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, innerRetrievableCiphertext_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.MasterKeyRetrievableFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.MasterKeyRetrievableFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.MasterKeyRetrievableFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.MasterKeyRetrievableFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.MasterKeyRetrievableFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.MasterKeyRetrievableFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.MasterKeyRetrievableFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.MasterKeyRetrievableFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.MasterKeyRetrievableFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.MasterKeyRetrievableFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.MasterKeyRetrievableFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.MasterKeyRetrievableFile}
     *
     * <pre>
     *The AES encryption inside a MasterKeyRetrievableFile is done with an AES-256 key that is the XOR of:
     *====&gt;the "initiator mask": a random 32 bytes that all of the initiators have.
     *====&gt;a random 32 bytes that is _the thing_ that is shared. This random secret does not exist in any single place (even encrypted); 
     *		it exists only as shares, and can only be accessed by assembling enough.
     *This MasterKeyRetrievableFile is also given to any friends who are initiators.
     *NOTE inner_retrievable_ciphertext is now encrypted by (the shared secret XOR the initiator mask). Each initiator has
     *NOTE the initiator mask. Basically: I don't want stealing MasterKeyRetrievableFile (from bob's server; maybe bob's server 
     *NOTE itself is the adversary) + social-engineering enough NON-initiator shares to be enough to retrieve.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.MasterKeyRetrievableFile)
        pamrac.Pamrac.MasterKeyRetrievableFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_MasterKeyRetrievableFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_MasterKeyRetrievableFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.MasterKeyRetrievableFile.class, pamrac.Pamrac.MasterKeyRetrievableFile.Builder.class);
      }

      // Construct using pamrac.Pamrac.MasterKeyRetrievableFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        aesInitVector_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        innerRetrievableCiphertext_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_MasterKeyRetrievableFile_descriptor;
      }

      public pamrac.Pamrac.MasterKeyRetrievableFile getDefaultInstanceForType() {
        return pamrac.Pamrac.MasterKeyRetrievableFile.getDefaultInstance();
      }

      public pamrac.Pamrac.MasterKeyRetrievableFile build() {
        pamrac.Pamrac.MasterKeyRetrievableFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.MasterKeyRetrievableFile buildPartial() {
        pamrac.Pamrac.MasterKeyRetrievableFile result = new pamrac.Pamrac.MasterKeyRetrievableFile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.aesInitVector_ = aesInitVector_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.innerRetrievableCiphertext_ = innerRetrievableCiphertext_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.MasterKeyRetrievableFile) {
          return mergeFrom((pamrac.Pamrac.MasterKeyRetrievableFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.MasterKeyRetrievableFile other) {
        if (other == pamrac.Pamrac.MasterKeyRetrievableFile.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasAesInitVector()) {
          setAesInitVector(other.getAesInitVector());
        }
        if (other.hasInnerRetrievableCiphertext()) {
          setInnerRetrievableCiphertext(other.getInnerRetrievableCiphertext());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasAesInitVector()) {
          
          return false;
        }
        if (!hasInnerRetrievableCiphertext()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.MasterKeyRetrievableFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.MasterKeyRetrievableFile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *NOTE: although timestamp is also in the KeyShare message, which this 
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *NOTE: although timestamp is also in the KeyShare message, which this 
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *NOTE: although timestamp is also in the KeyShare message, which this 
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *NOTE: although timestamp is also in the KeyShare message, which this 
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString aesInitVector_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes aes_init_vector = 2;</code>
       */
      public boolean hasAesInitVector() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes aes_init_vector = 2;</code>
       */
      public com.google.protobuf.ByteString getAesInitVector() {
        return aesInitVector_;
      }
      /**
       * <code>required bytes aes_init_vector = 2;</code>
       */
      public Builder setAesInitVector(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        aesInitVector_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes aes_init_vector = 2;</code>
       */
      public Builder clearAesInitVector() {
        bitField0_ = (bitField0_ & ~0x00000002);
        aesInitVector_ = getDefaultInstance().getAesInitVector();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString innerRetrievableCiphertext_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes inner_retrievable_ciphertext = 3;</code>
       *
       * <pre>
       *encryption of InnerRetrievable
       * </pre>
       */
      public boolean hasInnerRetrievableCiphertext() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes inner_retrievable_ciphertext = 3;</code>
       *
       * <pre>
       *encryption of InnerRetrievable
       * </pre>
       */
      public com.google.protobuf.ByteString getInnerRetrievableCiphertext() {
        return innerRetrievableCiphertext_;
      }
      /**
       * <code>required bytes inner_retrievable_ciphertext = 3;</code>
       *
       * <pre>
       *encryption of InnerRetrievable
       * </pre>
       */
      public Builder setInnerRetrievableCiphertext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        innerRetrievableCiphertext_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes inner_retrievable_ciphertext = 3;</code>
       *
       * <pre>
       *encryption of InnerRetrievable
       * </pre>
       */
      public Builder clearInnerRetrievableCiphertext() {
        bitField0_ = (bitField0_ & ~0x00000004);
        innerRetrievableCiphertext_ = getDefaultInstance().getInnerRetrievableCiphertext();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.MasterKeyRetrievableFile)
    }

    static {
      defaultInstance = new MasterKeyRetrievableFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.MasterKeyRetrievableFile)
  }

  public interface InnerRetrievableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.InnerRetrievable)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes master_key = 1;</code>
     *
     * <pre>
     *the 32 bytes of the MASTER AES256 key.
     * </pre>
     */
    boolean hasMasterKey();
    /**
     * <code>required bytes master_key = 1;</code>
     *
     * <pre>
     *the 32 bytes of the MASTER AES256 key.
     * </pre>
     */
    com.google.protobuf.ByteString getMasterKey();

    /**
     * <code>required bytes DOWNLOADSECRET = 2;</code>
     *
     * <pre>
     *need this to be able to download blobs from the server 
     * </pre>
     */
    boolean hasDOWNLOADSECRET();
    /**
     * <code>required bytes DOWNLOADSECRET = 2;</code>
     *
     * <pre>
     *need this to be able to download blobs from the server 
     * </pre>
     */
    com.google.protobuf.ByteString getDOWNLOADSECRET();
  }
  /**
   * Protobuf type {@code pamrac.InnerRetrievable}
   */
  public static final class InnerRetrievable extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.InnerRetrievable)
      InnerRetrievableOrBuilder {
    // Use InnerRetrievable.newBuilder() to construct.
    private InnerRetrievable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InnerRetrievable(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InnerRetrievable defaultInstance;
    public static InnerRetrievable getDefaultInstance() {
      return defaultInstance;
    }

    public InnerRetrievable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InnerRetrievable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              masterKey_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              dOWNLOADSECRET_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_InnerRetrievable_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_InnerRetrievable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.InnerRetrievable.class, pamrac.Pamrac.InnerRetrievable.Builder.class);
    }

    public static com.google.protobuf.Parser<InnerRetrievable> PARSER =
        new com.google.protobuf.AbstractParser<InnerRetrievable>() {
      public InnerRetrievable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InnerRetrievable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InnerRetrievable> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MASTER_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString masterKey_;
    /**
     * <code>required bytes master_key = 1;</code>
     *
     * <pre>
     *the 32 bytes of the MASTER AES256 key.
     * </pre>
     */
    public boolean hasMasterKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes master_key = 1;</code>
     *
     * <pre>
     *the 32 bytes of the MASTER AES256 key.
     * </pre>
     */
    public com.google.protobuf.ByteString getMasterKey() {
      return masterKey_;
    }

    public static final int DOWNLOADSECRET_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString dOWNLOADSECRET_;
    /**
     * <code>required bytes DOWNLOADSECRET = 2;</code>
     *
     * <pre>
     *need this to be able to download blobs from the server 
     * </pre>
     */
    public boolean hasDOWNLOADSECRET() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes DOWNLOADSECRET = 2;</code>
     *
     * <pre>
     *need this to be able to download blobs from the server 
     * </pre>
     */
    public com.google.protobuf.ByteString getDOWNLOADSECRET() {
      return dOWNLOADSECRET_;
    }

    private void initFields() {
      masterKey_ = com.google.protobuf.ByteString.EMPTY;
      dOWNLOADSECRET_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMasterKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDOWNLOADSECRET()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, masterKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, dOWNLOADSECRET_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, masterKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, dOWNLOADSECRET_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.InnerRetrievable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InnerRetrievable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerRetrievable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InnerRetrievable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerRetrievable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InnerRetrievable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerRetrievable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.InnerRetrievable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InnerRetrievable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InnerRetrievable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.InnerRetrievable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.InnerRetrievable}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.InnerRetrievable)
        pamrac.Pamrac.InnerRetrievableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_InnerRetrievable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_InnerRetrievable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.InnerRetrievable.class, pamrac.Pamrac.InnerRetrievable.Builder.class);
      }

      // Construct using pamrac.Pamrac.InnerRetrievable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        masterKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        dOWNLOADSECRET_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_InnerRetrievable_descriptor;
      }

      public pamrac.Pamrac.InnerRetrievable getDefaultInstanceForType() {
        return pamrac.Pamrac.InnerRetrievable.getDefaultInstance();
      }

      public pamrac.Pamrac.InnerRetrievable build() {
        pamrac.Pamrac.InnerRetrievable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.InnerRetrievable buildPartial() {
        pamrac.Pamrac.InnerRetrievable result = new pamrac.Pamrac.InnerRetrievable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.masterKey_ = masterKey_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dOWNLOADSECRET_ = dOWNLOADSECRET_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.InnerRetrievable) {
          return mergeFrom((pamrac.Pamrac.InnerRetrievable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.InnerRetrievable other) {
        if (other == pamrac.Pamrac.InnerRetrievable.getDefaultInstance()) return this;
        if (other.hasMasterKey()) {
          setMasterKey(other.getMasterKey());
        }
        if (other.hasDOWNLOADSECRET()) {
          setDOWNLOADSECRET(other.getDOWNLOADSECRET());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMasterKey()) {
          
          return false;
        }
        if (!hasDOWNLOADSECRET()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.InnerRetrievable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.InnerRetrievable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString masterKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes master_key = 1;</code>
       *
       * <pre>
       *the 32 bytes of the MASTER AES256 key.
       * </pre>
       */
      public boolean hasMasterKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes master_key = 1;</code>
       *
       * <pre>
       *the 32 bytes of the MASTER AES256 key.
       * </pre>
       */
      public com.google.protobuf.ByteString getMasterKey() {
        return masterKey_;
      }
      /**
       * <code>required bytes master_key = 1;</code>
       *
       * <pre>
       *the 32 bytes of the MASTER AES256 key.
       * </pre>
       */
      public Builder setMasterKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        masterKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes master_key = 1;</code>
       *
       * <pre>
       *the 32 bytes of the MASTER AES256 key.
       * </pre>
       */
      public Builder clearMasterKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        masterKey_ = getDefaultInstance().getMasterKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString dOWNLOADSECRET_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes DOWNLOADSECRET = 2;</code>
       *
       * <pre>
       *need this to be able to download blobs from the server 
       * </pre>
       */
      public boolean hasDOWNLOADSECRET() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes DOWNLOADSECRET = 2;</code>
       *
       * <pre>
       *need this to be able to download blobs from the server 
       * </pre>
       */
      public com.google.protobuf.ByteString getDOWNLOADSECRET() {
        return dOWNLOADSECRET_;
      }
      /**
       * <code>required bytes DOWNLOADSECRET = 2;</code>
       *
       * <pre>
       *need this to be able to download blobs from the server 
       * </pre>
       */
      public Builder setDOWNLOADSECRET(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dOWNLOADSECRET_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes DOWNLOADSECRET = 2;</code>
       *
       * <pre>
       *need this to be able to download blobs from the server 
       * </pre>
       */
      public Builder clearDOWNLOADSECRET() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dOWNLOADSECRET_ = getDefaultInstance().getDOWNLOADSECRET();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.InnerRetrievable)
    }

    static {
      defaultInstance = new InnerRetrievable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.InnerRetrievable)
  }

  public interface InitShareListRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.InitShareListRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     */
    boolean hasRequesterFingerprint();
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     */
    com.google.protobuf.ByteString getRequesterFingerprint();
  }
  /**
   * Protobuf type {@code pamrac.InitShareListRequest}
   */
  public static final class InitShareListRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.InitShareListRequest)
      InitShareListRequestOrBuilder {
    // Use InitShareListRequest.newBuilder() to construct.
    private InitShareListRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InitShareListRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InitShareListRequest defaultInstance;
    public static InitShareListRequest getDefaultInstance() {
      return defaultInstance;
    }

    public InitShareListRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InitShareListRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              requesterFingerprint_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_InitShareListRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_InitShareListRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.InitShareListRequest.class, pamrac.Pamrac.InitShareListRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<InitShareListRequest> PARSER =
        new com.google.protobuf.AbstractParser<InitShareListRequest>() {
      public InitShareListRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitShareListRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InitShareListRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int REQUESTER_FINGERPRINT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString requesterFingerprint_;
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     */
    public boolean hasRequesterFingerprint() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     */
    public com.google.protobuf.ByteString getRequesterFingerprint() {
      return requesterFingerprint_;
    }

    private void initFields() {
      requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRequesterFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, requesterFingerprint_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, requesterFingerprint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.InitShareListRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitShareListRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitShareListRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitShareListRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitShareListRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitShareListRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitShareListRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.InitShareListRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitShareListRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitShareListRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.InitShareListRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.InitShareListRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.InitShareListRequest)
        pamrac.Pamrac.InitShareListRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_InitShareListRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_InitShareListRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.InitShareListRequest.class, pamrac.Pamrac.InitShareListRequest.Builder.class);
      }

      // Construct using pamrac.Pamrac.InitShareListRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_InitShareListRequest_descriptor;
      }

      public pamrac.Pamrac.InitShareListRequest getDefaultInstanceForType() {
        return pamrac.Pamrac.InitShareListRequest.getDefaultInstance();
      }

      public pamrac.Pamrac.InitShareListRequest build() {
        pamrac.Pamrac.InitShareListRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.InitShareListRequest buildPartial() {
        pamrac.Pamrac.InitShareListRequest result = new pamrac.Pamrac.InitShareListRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requesterFingerprint_ = requesterFingerprint_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.InitShareListRequest) {
          return mergeFrom((pamrac.Pamrac.InitShareListRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.InitShareListRequest other) {
        if (other == pamrac.Pamrac.InitShareListRequest.getDefaultInstance()) return this;
        if (other.hasRequesterFingerprint()) {
          setRequesterFingerprint(other.getRequesterFingerprint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequesterFingerprint()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.InitShareListRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.InitShareListRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       */
      public boolean hasRequesterFingerprint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       */
      public com.google.protobuf.ByteString getRequesterFingerprint() {
        return requesterFingerprint_;
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       */
      public Builder setRequesterFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        requesterFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       */
      public Builder clearRequesterFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requesterFingerprint_ = getDefaultInstance().getRequesterFingerprint();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.InitShareListRequest)
    }

    static {
      defaultInstance = new InitShareListRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.InitShareListRequest)
  }

  public interface NonceResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.NonceResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes nonce = 1;</code>
     */
    boolean hasNonce();
    /**
     * <code>required bytes nonce = 1;</code>
     */
    com.google.protobuf.ByteString getNonce();
  }
  /**
   * Protobuf type {@code pamrac.NonceResponse}
   *
   * <pre>
   *for the few different exchanges that want the server to respond with just a nonce
   * </pre>
   */
  public static final class NonceResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.NonceResponse)
      NonceResponseOrBuilder {
    // Use NonceResponse.newBuilder() to construct.
    private NonceResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NonceResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NonceResponse defaultInstance;
    public static NonceResponse getDefaultInstance() {
      return defaultInstance;
    }

    public NonceResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NonceResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              nonce_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_NonceResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_NonceResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.NonceResponse.class, pamrac.Pamrac.NonceResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<NonceResponse> PARSER =
        new com.google.protobuf.AbstractParser<NonceResponse>() {
      public NonceResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NonceResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NonceResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NONCE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString nonce_;
    /**
     * <code>required bytes nonce = 1;</code>
     */
    public boolean hasNonce() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes nonce = 1;</code>
     */
    public com.google.protobuf.ByteString getNonce() {
      return nonce_;
    }

    private void initFields() {
      nonce_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasNonce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, nonce_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, nonce_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.NonceResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.NonceResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.NonceResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.NonceResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.NonceResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.NonceResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.NonceResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.NonceResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.NonceResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.NonceResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.NonceResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.NonceResponse}
     *
     * <pre>
     *for the few different exchanges that want the server to respond with just a nonce
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.NonceResponse)
        pamrac.Pamrac.NonceResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_NonceResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_NonceResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.NonceResponse.class, pamrac.Pamrac.NonceResponse.Builder.class);
      }

      // Construct using pamrac.Pamrac.NonceResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nonce_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_NonceResponse_descriptor;
      }

      public pamrac.Pamrac.NonceResponse getDefaultInstanceForType() {
        return pamrac.Pamrac.NonceResponse.getDefaultInstance();
      }

      public pamrac.Pamrac.NonceResponse build() {
        pamrac.Pamrac.NonceResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.NonceResponse buildPartial() {
        pamrac.Pamrac.NonceResponse result = new pamrac.Pamrac.NonceResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nonce_ = nonce_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.NonceResponse) {
          return mergeFrom((pamrac.Pamrac.NonceResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.NonceResponse other) {
        if (other == pamrac.Pamrac.NonceResponse.getDefaultInstance()) return this;
        if (other.hasNonce()) {
          setNonce(other.getNonce());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNonce()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.NonceResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.NonceResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString nonce_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes nonce = 1;</code>
       */
      public boolean hasNonce() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes nonce = 1;</code>
       */
      public com.google.protobuf.ByteString getNonce() {
        return nonce_;
      }
      /**
       * <code>required bytes nonce = 1;</code>
       */
      public Builder setNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes nonce = 1;</code>
       */
      public Builder clearNonce() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nonce_ = getDefaultInstance().getNonce();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.NonceResponse)
    }

    static {
      defaultInstance = new NonceResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.NonceResponse)
  }

  public interface ShareListRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.ShareListRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     */
    boolean hasRequesterFingerprint();
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     */
    com.google.protobuf.ByteString getRequesterFingerprint();

    /**
     * <code>required bytes nonce = 2;</code>
     */
    boolean hasNonce();
    /**
     * <code>required bytes nonce = 2;</code>
     */
    com.google.protobuf.ByteString getNonce();

    /**
     * <code>required bytes signature = 3;</code>
     *
     * <pre>
     *sig of (req_fp~nonce)
     * </pre>
     */
    boolean hasSignature();
    /**
     * <code>required bytes signature = 3;</code>
     *
     * <pre>
     *sig of (req_fp~nonce)
     * </pre>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code pamrac.ShareListRequest}
   *
   * <pre>
   *message InitShareListResponse NOTE see NonceResponse
   *{
   *	optional bytes nonce = 1;
   *AH! nope, shouldn't have this, or an attacker can check who is/isn't authorized. required bool may_proceed = 2;
   *}
   * </pre>
   */
  public static final class ShareListRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.ShareListRequest)
      ShareListRequestOrBuilder {
    // Use ShareListRequest.newBuilder() to construct.
    private ShareListRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShareListRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShareListRequest defaultInstance;
    public static ShareListRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ShareListRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShareListRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              requesterFingerprint_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              nonce_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_ShareListRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_ShareListRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.ShareListRequest.class, pamrac.Pamrac.ShareListRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ShareListRequest> PARSER =
        new com.google.protobuf.AbstractParser<ShareListRequest>() {
      public ShareListRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShareListRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShareListRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int REQUESTER_FINGERPRINT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString requesterFingerprint_;
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     */
    public boolean hasRequesterFingerprint() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     */
    public com.google.protobuf.ByteString getRequesterFingerprint() {
      return requesterFingerprint_;
    }

    public static final int NONCE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString nonce_;
    /**
     * <code>required bytes nonce = 2;</code>
     */
    public boolean hasNonce() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes nonce = 2;</code>
     */
    public com.google.protobuf.ByteString getNonce() {
      return nonce_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>required bytes signature = 3;</code>
     *
     * <pre>
     *sig of (req_fp~nonce)
     * </pre>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes signature = 3;</code>
     *
     * <pre>
     *sig of (req_fp~nonce)
     * </pre>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      nonce_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRequesterFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNonce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, requesterFingerprint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, nonce_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, requesterFingerprint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, nonce_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.ShareListRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.ShareListRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareListRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.ShareListRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareListRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.ShareListRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareListRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.ShareListRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareListRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.ShareListRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.ShareListRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.ShareListRequest}
     *
     * <pre>
     *message InitShareListResponse NOTE see NonceResponse
     *{
     *	optional bytes nonce = 1;
     *AH! nope, shouldn't have this, or an attacker can check who is/isn't authorized. required bool may_proceed = 2;
     *}
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.ShareListRequest)
        pamrac.Pamrac.ShareListRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_ShareListRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_ShareListRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.ShareListRequest.class, pamrac.Pamrac.ShareListRequest.Builder.class);
      }

      // Construct using pamrac.Pamrac.ShareListRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        nonce_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_ShareListRequest_descriptor;
      }

      public pamrac.Pamrac.ShareListRequest getDefaultInstanceForType() {
        return pamrac.Pamrac.ShareListRequest.getDefaultInstance();
      }

      public pamrac.Pamrac.ShareListRequest build() {
        pamrac.Pamrac.ShareListRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.ShareListRequest buildPartial() {
        pamrac.Pamrac.ShareListRequest result = new pamrac.Pamrac.ShareListRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requesterFingerprint_ = requesterFingerprint_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nonce_ = nonce_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.ShareListRequest) {
          return mergeFrom((pamrac.Pamrac.ShareListRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.ShareListRequest other) {
        if (other == pamrac.Pamrac.ShareListRequest.getDefaultInstance()) return this;
        if (other.hasRequesterFingerprint()) {
          setRequesterFingerprint(other.getRequesterFingerprint());
        }
        if (other.hasNonce()) {
          setNonce(other.getNonce());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequesterFingerprint()) {
          
          return false;
        }
        if (!hasNonce()) {
          
          return false;
        }
        if (!hasSignature()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.ShareListRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.ShareListRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       */
      public boolean hasRequesterFingerprint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       */
      public com.google.protobuf.ByteString getRequesterFingerprint() {
        return requesterFingerprint_;
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       */
      public Builder setRequesterFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        requesterFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       */
      public Builder clearRequesterFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requesterFingerprint_ = getDefaultInstance().getRequesterFingerprint();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString nonce_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes nonce = 2;</code>
       */
      public boolean hasNonce() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes nonce = 2;</code>
       */
      public com.google.protobuf.ByteString getNonce() {
        return nonce_;
      }
      /**
       * <code>required bytes nonce = 2;</code>
       */
      public Builder setNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes nonce = 2;</code>
       */
      public Builder clearNonce() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nonce_ = getDefaultInstance().getNonce();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes signature = 3;</code>
       *
       * <pre>
       *sig of (req_fp~nonce)
       * </pre>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes signature = 3;</code>
       *
       * <pre>
       *sig of (req_fp~nonce)
       * </pre>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>required bytes signature = 3;</code>
       *
       * <pre>
       *sig of (req_fp~nonce)
       * </pre>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes signature = 3;</code>
       *
       * <pre>
       *sig of (req_fp~nonce)
       * </pre>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.ShareListRequest)
    }

    static {
      defaultInstance = new ShareListRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.ShareListRequest)
  }

  public interface ShareListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.ShareList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *should match all the timestamps of the most recently distributed shares
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *should match all the timestamps of the most recently distributed shares
     * </pre>
     */
    long getTimestamp();

    /**
     * <code>required int32 threshold = 2;</code>
     *
     * <pre>
     *the 'k' in "k out of n secret sharing"
     * </pre>
     */
    boolean hasThreshold();
    /**
     * <code>required int32 threshold = 2;</code>
     *
     * <pre>
     *the 'k' in "k out of n secret sharing"
     * </pre>
     */
    int getThreshold();

    /**
     * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
     */
    java.util.List<pamrac.Pamrac.ShareList.ShareRecipient> 
        getRecipientsList();
    /**
     * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
     */
    pamrac.Pamrac.ShareList.ShareRecipient getRecipients(int index);
    /**
     * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
     */
    int getRecipientsCount();
    /**
     * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
     */
    java.util.List<? extends pamrac.Pamrac.ShareList.ShareRecipientOrBuilder> 
        getRecipientsOrBuilderList();
    /**
     * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
     */
    pamrac.Pamrac.ShareList.ShareRecipientOrBuilder getRecipientsOrBuilder(
        int index);

    /**
     * <code>required bytes signature = 4;</code>
     *
     * <pre>
     *signature with your private key of (timestamp, threshold, &lt;nickname, initiator ? 1 : 0&gt;, ... )
     *NOTE those 1, 0 are not ASCII. They are 1 byte.
     * </pre>
     */
    boolean hasSignature();
    /**
     * <code>required bytes signature = 4;</code>
     *
     * <pre>
     *signature with your private key of (timestamp, threshold, &lt;nickname, initiator ? 1 : 0&gt;, ... )
     *NOTE those 1, 0 are not ASCII. They are 1 byte.
     * </pre>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code pamrac.ShareList}
   *
   * <pre>
   *this should be stored at the client (of course) and the server. don't actively distribute to other servers,
   *but give it out to anyone who can prove ownership of a keypair that is in the list of share INITIATORS.
   * </pre>
   */
  public static final class ShareList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.ShareList)
      ShareListOrBuilder {
    // Use ShareList.newBuilder() to construct.
    private ShareList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShareList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShareList defaultInstance;
    public static ShareList getDefaultInstance() {
      return defaultInstance;
    }

    public ShareList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShareList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              threshold_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                recipients_ = new java.util.ArrayList<pamrac.Pamrac.ShareList.ShareRecipient>();
                mutable_bitField0_ |= 0x00000004;
              }
              recipients_.add(input.readMessage(pamrac.Pamrac.ShareList.ShareRecipient.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              bitField0_ |= 0x00000004;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          recipients_ = java.util.Collections.unmodifiableList(recipients_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_ShareList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_ShareList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.ShareList.class, pamrac.Pamrac.ShareList.Builder.class);
    }

    public static com.google.protobuf.Parser<ShareList> PARSER =
        new com.google.protobuf.AbstractParser<ShareList>() {
      public ShareList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShareList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShareList> getParserForType() {
      return PARSER;
    }

    public interface ShareRecipientOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pamrac.ShareList.ShareRecipient)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required string nickname = 1;</code>
       */
      boolean hasNickname();
      /**
       * <code>required string nickname = 1;</code>
       */
      java.lang.String getNickname();
      /**
       * <code>required string nickname = 1;</code>
       */
      com.google.protobuf.ByteString
          getNicknameBytes();

      /**
       * <code>required bool initiator = 2;</code>
       */
      boolean hasInitiator();
      /**
       * <code>required bool initiator = 2;</code>
       */
      boolean getInitiator();
    }
    /**
     * Protobuf type {@code pamrac.ShareList.ShareRecipient}
     */
    public static final class ShareRecipient extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pamrac.ShareList.ShareRecipient)
        ShareRecipientOrBuilder {
      // Use ShareRecipient.newBuilder() to construct.
      private ShareRecipient(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ShareRecipient(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ShareRecipient defaultInstance;
      public static ShareRecipient getDefaultInstance() {
        return defaultInstance;
      }

      public ShareRecipient getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ShareRecipient(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                nickname_ = bs;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                initiator_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_ShareList_ShareRecipient_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_ShareList_ShareRecipient_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.ShareList.ShareRecipient.class, pamrac.Pamrac.ShareList.ShareRecipient.Builder.class);
      }

      public static com.google.protobuf.Parser<ShareRecipient> PARSER =
          new com.google.protobuf.AbstractParser<ShareRecipient>() {
        public ShareRecipient parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ShareRecipient(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ShareRecipient> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int NICKNAME_FIELD_NUMBER = 1;
      private java.lang.Object nickname_;
      /**
       * <code>required string nickname = 1;</code>
       */
      public boolean hasNickname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string nickname = 1;</code>
       */
      public java.lang.String getNickname() {
        java.lang.Object ref = nickname_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nickname_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string nickname = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNicknameBytes() {
        java.lang.Object ref = nickname_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nickname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int INITIATOR_FIELD_NUMBER = 2;
      private boolean initiator_;
      /**
       * <code>required bool initiator = 2;</code>
       */
      public boolean hasInitiator() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool initiator = 2;</code>
       */
      public boolean getInitiator() {
        return initiator_;
      }

      private void initFields() {
        nickname_ = "";
        initiator_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasNickname()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasInitiator()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNicknameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, initiator_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNicknameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, initiator_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pamrac.Pamrac.ShareList.ShareRecipient parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pamrac.Pamrac.ShareList.ShareRecipient parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pamrac.Pamrac.ShareList.ShareRecipient parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pamrac.Pamrac.ShareList.ShareRecipient parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pamrac.Pamrac.ShareList.ShareRecipient parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pamrac.Pamrac.ShareList.ShareRecipient parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pamrac.Pamrac.ShareList.ShareRecipient parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pamrac.Pamrac.ShareList.ShareRecipient parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pamrac.Pamrac.ShareList.ShareRecipient parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pamrac.Pamrac.ShareList.ShareRecipient parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pamrac.Pamrac.ShareList.ShareRecipient prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pamrac.ShareList.ShareRecipient}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pamrac.ShareList.ShareRecipient)
          pamrac.Pamrac.ShareList.ShareRecipientOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pamrac.Pamrac.internal_static_pamrac_ShareList_ShareRecipient_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pamrac.Pamrac.internal_static_pamrac_ShareList_ShareRecipient_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pamrac.Pamrac.ShareList.ShareRecipient.class, pamrac.Pamrac.ShareList.ShareRecipient.Builder.class);
        }

        // Construct using pamrac.Pamrac.ShareList.ShareRecipient.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          nickname_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          initiator_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pamrac.Pamrac.internal_static_pamrac_ShareList_ShareRecipient_descriptor;
        }

        public pamrac.Pamrac.ShareList.ShareRecipient getDefaultInstanceForType() {
          return pamrac.Pamrac.ShareList.ShareRecipient.getDefaultInstance();
        }

        public pamrac.Pamrac.ShareList.ShareRecipient build() {
          pamrac.Pamrac.ShareList.ShareRecipient result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pamrac.Pamrac.ShareList.ShareRecipient buildPartial() {
          pamrac.Pamrac.ShareList.ShareRecipient result = new pamrac.Pamrac.ShareList.ShareRecipient(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.nickname_ = nickname_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.initiator_ = initiator_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pamrac.Pamrac.ShareList.ShareRecipient) {
            return mergeFrom((pamrac.Pamrac.ShareList.ShareRecipient)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pamrac.Pamrac.ShareList.ShareRecipient other) {
          if (other == pamrac.Pamrac.ShareList.ShareRecipient.getDefaultInstance()) return this;
          if (other.hasNickname()) {
            bitField0_ |= 0x00000001;
            nickname_ = other.nickname_;
            onChanged();
          }
          if (other.hasInitiator()) {
            setInitiator(other.getInitiator());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasNickname()) {
            
            return false;
          }
          if (!hasInitiator()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pamrac.Pamrac.ShareList.ShareRecipient parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pamrac.Pamrac.ShareList.ShareRecipient) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object nickname_ = "";
        /**
         * <code>required string nickname = 1;</code>
         */
        public boolean hasNickname() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string nickname = 1;</code>
         */
        public java.lang.String getNickname() {
          java.lang.Object ref = nickname_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              nickname_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string nickname = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNicknameBytes() {
          java.lang.Object ref = nickname_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            nickname_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string nickname = 1;</code>
         */
        public Builder setNickname(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          nickname_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string nickname = 1;</code>
         */
        public Builder clearNickname() {
          bitField0_ = (bitField0_ & ~0x00000001);
          nickname_ = getDefaultInstance().getNickname();
          onChanged();
          return this;
        }
        /**
         * <code>required string nickname = 1;</code>
         */
        public Builder setNicknameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          nickname_ = value;
          onChanged();
          return this;
        }

        private boolean initiator_ ;
        /**
         * <code>required bool initiator = 2;</code>
         */
        public boolean hasInitiator() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bool initiator = 2;</code>
         */
        public boolean getInitiator() {
          return initiator_;
        }
        /**
         * <code>required bool initiator = 2;</code>
         */
        public Builder setInitiator(boolean value) {
          bitField0_ |= 0x00000002;
          initiator_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool initiator = 2;</code>
         */
        public Builder clearInitiator() {
          bitField0_ = (bitField0_ & ~0x00000002);
          initiator_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:pamrac.ShareList.ShareRecipient)
      }

      static {
        defaultInstance = new ShareRecipient(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pamrac.ShareList.ShareRecipient)
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *should match all the timestamps of the most recently distributed shares
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *should match all the timestamps of the most recently distributed shares
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int THRESHOLD_FIELD_NUMBER = 2;
    private int threshold_;
    /**
     * <code>required int32 threshold = 2;</code>
     *
     * <pre>
     *the 'k' in "k out of n secret sharing"
     * </pre>
     */
    public boolean hasThreshold() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 threshold = 2;</code>
     *
     * <pre>
     *the 'k' in "k out of n secret sharing"
     * </pre>
     */
    public int getThreshold() {
      return threshold_;
    }

    public static final int RECIPIENTS_FIELD_NUMBER = 3;
    private java.util.List<pamrac.Pamrac.ShareList.ShareRecipient> recipients_;
    /**
     * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
     */
    public java.util.List<pamrac.Pamrac.ShareList.ShareRecipient> getRecipientsList() {
      return recipients_;
    }
    /**
     * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
     */
    public java.util.List<? extends pamrac.Pamrac.ShareList.ShareRecipientOrBuilder> 
        getRecipientsOrBuilderList() {
      return recipients_;
    }
    /**
     * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
     */
    public int getRecipientsCount() {
      return recipients_.size();
    }
    /**
     * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
     */
    public pamrac.Pamrac.ShareList.ShareRecipient getRecipients(int index) {
      return recipients_.get(index);
    }
    /**
     * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
     */
    public pamrac.Pamrac.ShareList.ShareRecipientOrBuilder getRecipientsOrBuilder(
        int index) {
      return recipients_.get(index);
    }

    public static final int SIGNATURE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>required bytes signature = 4;</code>
     *
     * <pre>
     *signature with your private key of (timestamp, threshold, &lt;nickname, initiator ? 1 : 0&gt;, ... )
     *NOTE those 1, 0 are not ASCII. They are 1 byte.
     * </pre>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes signature = 4;</code>
     *
     * <pre>
     *signature with your private key of (timestamp, threshold, &lt;nickname, initiator ? 1 : 0&gt;, ... )
     *NOTE those 1, 0 are not ASCII. They are 1 byte.
     * </pre>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      timestamp_ = 0L;
      threshold_ = 0;
      recipients_ = java.util.Collections.emptyList();
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThreshold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRecipientsCount(); i++) {
        if (!getRecipients(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, threshold_);
      }
      for (int i = 0; i < recipients_.size(); i++) {
        output.writeMessage(3, recipients_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, threshold_);
      }
      for (int i = 0; i < recipients_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, recipients_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.ShareList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.ShareList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.ShareList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.ShareList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.ShareList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.ShareList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.ShareList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.ShareList}
     *
     * <pre>
     *this should be stored at the client (of course) and the server. don't actively distribute to other servers,
     *but give it out to anyone who can prove ownership of a keypair that is in the list of share INITIATORS.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.ShareList)
        pamrac.Pamrac.ShareListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_ShareList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_ShareList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.ShareList.class, pamrac.Pamrac.ShareList.Builder.class);
      }

      // Construct using pamrac.Pamrac.ShareList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRecipientsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        threshold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (recipientsBuilder_ == null) {
          recipients_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          recipientsBuilder_.clear();
        }
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_ShareList_descriptor;
      }

      public pamrac.Pamrac.ShareList getDefaultInstanceForType() {
        return pamrac.Pamrac.ShareList.getDefaultInstance();
      }

      public pamrac.Pamrac.ShareList build() {
        pamrac.Pamrac.ShareList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.ShareList buildPartial() {
        pamrac.Pamrac.ShareList result = new pamrac.Pamrac.ShareList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.threshold_ = threshold_;
        if (recipientsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            recipients_ = java.util.Collections.unmodifiableList(recipients_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.recipients_ = recipients_;
        } else {
          result.recipients_ = recipientsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.ShareList) {
          return mergeFrom((pamrac.Pamrac.ShareList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.ShareList other) {
        if (other == pamrac.Pamrac.ShareList.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasThreshold()) {
          setThreshold(other.getThreshold());
        }
        if (recipientsBuilder_ == null) {
          if (!other.recipients_.isEmpty()) {
            if (recipients_.isEmpty()) {
              recipients_ = other.recipients_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRecipientsIsMutable();
              recipients_.addAll(other.recipients_);
            }
            onChanged();
          }
        } else {
          if (!other.recipients_.isEmpty()) {
            if (recipientsBuilder_.isEmpty()) {
              recipientsBuilder_.dispose();
              recipientsBuilder_ = null;
              recipients_ = other.recipients_;
              bitField0_ = (bitField0_ & ~0x00000004);
              recipientsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRecipientsFieldBuilder() : null;
            } else {
              recipientsBuilder_.addAllMessages(other.recipients_);
            }
          }
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasThreshold()) {
          
          return false;
        }
        if (!hasSignature()) {
          
          return false;
        }
        for (int i = 0; i < getRecipientsCount(); i++) {
          if (!getRecipients(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.ShareList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.ShareList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *should match all the timestamps of the most recently distributed shares
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *should match all the timestamps of the most recently distributed shares
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *should match all the timestamps of the most recently distributed shares
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *should match all the timestamps of the most recently distributed shares
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private int threshold_ ;
      /**
       * <code>required int32 threshold = 2;</code>
       *
       * <pre>
       *the 'k' in "k out of n secret sharing"
       * </pre>
       */
      public boolean hasThreshold() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 threshold = 2;</code>
       *
       * <pre>
       *the 'k' in "k out of n secret sharing"
       * </pre>
       */
      public int getThreshold() {
        return threshold_;
      }
      /**
       * <code>required int32 threshold = 2;</code>
       *
       * <pre>
       *the 'k' in "k out of n secret sharing"
       * </pre>
       */
      public Builder setThreshold(int value) {
        bitField0_ |= 0x00000002;
        threshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 threshold = 2;</code>
       *
       * <pre>
       *the 'k' in "k out of n secret sharing"
       * </pre>
       */
      public Builder clearThreshold() {
        bitField0_ = (bitField0_ & ~0x00000002);
        threshold_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<pamrac.Pamrac.ShareList.ShareRecipient> recipients_ =
        java.util.Collections.emptyList();
      private void ensureRecipientsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          recipients_ = new java.util.ArrayList<pamrac.Pamrac.ShareList.ShareRecipient>(recipients_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pamrac.Pamrac.ShareList.ShareRecipient, pamrac.Pamrac.ShareList.ShareRecipient.Builder, pamrac.Pamrac.ShareList.ShareRecipientOrBuilder> recipientsBuilder_;

      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public java.util.List<pamrac.Pamrac.ShareList.ShareRecipient> getRecipientsList() {
        if (recipientsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(recipients_);
        } else {
          return recipientsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public int getRecipientsCount() {
        if (recipientsBuilder_ == null) {
          return recipients_.size();
        } else {
          return recipientsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public pamrac.Pamrac.ShareList.ShareRecipient getRecipients(int index) {
        if (recipientsBuilder_ == null) {
          return recipients_.get(index);
        } else {
          return recipientsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public Builder setRecipients(
          int index, pamrac.Pamrac.ShareList.ShareRecipient value) {
        if (recipientsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecipientsIsMutable();
          recipients_.set(index, value);
          onChanged();
        } else {
          recipientsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public Builder setRecipients(
          int index, pamrac.Pamrac.ShareList.ShareRecipient.Builder builderForValue) {
        if (recipientsBuilder_ == null) {
          ensureRecipientsIsMutable();
          recipients_.set(index, builderForValue.build());
          onChanged();
        } else {
          recipientsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public Builder addRecipients(pamrac.Pamrac.ShareList.ShareRecipient value) {
        if (recipientsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecipientsIsMutable();
          recipients_.add(value);
          onChanged();
        } else {
          recipientsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public Builder addRecipients(
          int index, pamrac.Pamrac.ShareList.ShareRecipient value) {
        if (recipientsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecipientsIsMutable();
          recipients_.add(index, value);
          onChanged();
        } else {
          recipientsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public Builder addRecipients(
          pamrac.Pamrac.ShareList.ShareRecipient.Builder builderForValue) {
        if (recipientsBuilder_ == null) {
          ensureRecipientsIsMutable();
          recipients_.add(builderForValue.build());
          onChanged();
        } else {
          recipientsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public Builder addRecipients(
          int index, pamrac.Pamrac.ShareList.ShareRecipient.Builder builderForValue) {
        if (recipientsBuilder_ == null) {
          ensureRecipientsIsMutable();
          recipients_.add(index, builderForValue.build());
          onChanged();
        } else {
          recipientsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public Builder addAllRecipients(
          java.lang.Iterable<? extends pamrac.Pamrac.ShareList.ShareRecipient> values) {
        if (recipientsBuilder_ == null) {
          ensureRecipientsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, recipients_);
          onChanged();
        } else {
          recipientsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public Builder clearRecipients() {
        if (recipientsBuilder_ == null) {
          recipients_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          recipientsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public Builder removeRecipients(int index) {
        if (recipientsBuilder_ == null) {
          ensureRecipientsIsMutable();
          recipients_.remove(index);
          onChanged();
        } else {
          recipientsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public pamrac.Pamrac.ShareList.ShareRecipient.Builder getRecipientsBuilder(
          int index) {
        return getRecipientsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public pamrac.Pamrac.ShareList.ShareRecipientOrBuilder getRecipientsOrBuilder(
          int index) {
        if (recipientsBuilder_ == null) {
          return recipients_.get(index);  } else {
          return recipientsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public java.util.List<? extends pamrac.Pamrac.ShareList.ShareRecipientOrBuilder> 
           getRecipientsOrBuilderList() {
        if (recipientsBuilder_ != null) {
          return recipientsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(recipients_);
        }
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public pamrac.Pamrac.ShareList.ShareRecipient.Builder addRecipientsBuilder() {
        return getRecipientsFieldBuilder().addBuilder(
            pamrac.Pamrac.ShareList.ShareRecipient.getDefaultInstance());
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public pamrac.Pamrac.ShareList.ShareRecipient.Builder addRecipientsBuilder(
          int index) {
        return getRecipientsFieldBuilder().addBuilder(
            index, pamrac.Pamrac.ShareList.ShareRecipient.getDefaultInstance());
      }
      /**
       * <code>repeated .pamrac.ShareList.ShareRecipient recipients = 3;</code>
       */
      public java.util.List<pamrac.Pamrac.ShareList.ShareRecipient.Builder> 
           getRecipientsBuilderList() {
        return getRecipientsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pamrac.Pamrac.ShareList.ShareRecipient, pamrac.Pamrac.ShareList.ShareRecipient.Builder, pamrac.Pamrac.ShareList.ShareRecipientOrBuilder> 
          getRecipientsFieldBuilder() {
        if (recipientsBuilder_ == null) {
          recipientsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pamrac.Pamrac.ShareList.ShareRecipient, pamrac.Pamrac.ShareList.ShareRecipient.Builder, pamrac.Pamrac.ShareList.ShareRecipientOrBuilder>(
                  recipients_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          recipients_ = null;
        }
        return recipientsBuilder_;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes signature = 4;</code>
       *
       * <pre>
       *signature with your private key of (timestamp, threshold, &lt;nickname, initiator ? 1 : 0&gt;, ... )
       *NOTE those 1, 0 are not ASCII. They are 1 byte.
       * </pre>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes signature = 4;</code>
       *
       * <pre>
       *signature with your private key of (timestamp, threshold, &lt;nickname, initiator ? 1 : 0&gt;, ... )
       *NOTE those 1, 0 are not ASCII. They are 1 byte.
       * </pre>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>required bytes signature = 4;</code>
       *
       * <pre>
       *signature with your private key of (timestamp, threshold, &lt;nickname, initiator ? 1 : 0&gt;, ... )
       *NOTE those 1, 0 are not ASCII. They are 1 byte.
       * </pre>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes signature = 4;</code>
       *
       * <pre>
       *signature with your private key of (timestamp, threshold, &lt;nickname, initiator ? 1 : 0&gt;, ... )
       *NOTE those 1, 0 are not ASCII. They are 1 byte.
       * </pre>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000008);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.ShareList)
    }

    static {
      defaultInstance = new ShareList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.ShareList)
  }

  public interface InitShareRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.InitShareRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     *
     * <pre>
     *alice's, if alice is asking carol for a share of bob
     * </pre>
     */
    boolean hasRequesterFingerprint();
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     *
     * <pre>
     *alice's, if alice is asking carol for a share of bob
     * </pre>
     */
    com.google.protobuf.ByteString getRequesterFingerprint();

    /**
     * <code>required bytes requestee_fingerprint = 2;</code>
     *
     * <pre>
     *bob's, if alice is asking carol for a share of bob
     * </pre>
     */
    boolean hasRequesteeFingerprint();
    /**
     * <code>required bytes requestee_fingerprint = 2;</code>
     *
     * <pre>
     *bob's, if alice is asking carol for a share of bob
     * </pre>
     */
    com.google.protobuf.ByteString getRequesteeFingerprint();
  }
  /**
   * Protobuf type {@code pamrac.InitShareRequest}
   */
  public static final class InitShareRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.InitShareRequest)
      InitShareRequestOrBuilder {
    // Use InitShareRequest.newBuilder() to construct.
    private InitShareRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InitShareRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InitShareRequest defaultInstance;
    public static InitShareRequest getDefaultInstance() {
      return defaultInstance;
    }

    public InitShareRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InitShareRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              requesterFingerprint_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              requesteeFingerprint_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_InitShareRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_InitShareRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.InitShareRequest.class, pamrac.Pamrac.InitShareRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<InitShareRequest> PARSER =
        new com.google.protobuf.AbstractParser<InitShareRequest>() {
      public InitShareRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitShareRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InitShareRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int REQUESTER_FINGERPRINT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString requesterFingerprint_;
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     *
     * <pre>
     *alice's, if alice is asking carol for a share of bob
     * </pre>
     */
    public boolean hasRequesterFingerprint() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     *
     * <pre>
     *alice's, if alice is asking carol for a share of bob
     * </pre>
     */
    public com.google.protobuf.ByteString getRequesterFingerprint() {
      return requesterFingerprint_;
    }

    public static final int REQUESTEE_FINGERPRINT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString requesteeFingerprint_;
    /**
     * <code>required bytes requestee_fingerprint = 2;</code>
     *
     * <pre>
     *bob's, if alice is asking carol for a share of bob
     * </pre>
     */
    public boolean hasRequesteeFingerprint() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes requestee_fingerprint = 2;</code>
     *
     * <pre>
     *bob's, if alice is asking carol for a share of bob
     * </pre>
     */
    public com.google.protobuf.ByteString getRequesteeFingerprint() {
      return requesteeFingerprint_;
    }

    private void initFields() {
      requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      requesteeFingerprint_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRequesterFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequesteeFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, requesterFingerprint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, requesteeFingerprint_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, requesterFingerprint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, requesteeFingerprint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.InitShareRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitShareRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitShareRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.InitShareRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.InitShareRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitShareRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitShareRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.InitShareRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.InitShareRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.InitShareRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.InitShareRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.InitShareRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.InitShareRequest)
        pamrac.Pamrac.InitShareRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_InitShareRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_InitShareRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.InitShareRequest.class, pamrac.Pamrac.InitShareRequest.Builder.class);
      }

      // Construct using pamrac.Pamrac.InitShareRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        requesteeFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_InitShareRequest_descriptor;
      }

      public pamrac.Pamrac.InitShareRequest getDefaultInstanceForType() {
        return pamrac.Pamrac.InitShareRequest.getDefaultInstance();
      }

      public pamrac.Pamrac.InitShareRequest build() {
        pamrac.Pamrac.InitShareRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.InitShareRequest buildPartial() {
        pamrac.Pamrac.InitShareRequest result = new pamrac.Pamrac.InitShareRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requesterFingerprint_ = requesterFingerprint_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.requesteeFingerprint_ = requesteeFingerprint_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.InitShareRequest) {
          return mergeFrom((pamrac.Pamrac.InitShareRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.InitShareRequest other) {
        if (other == pamrac.Pamrac.InitShareRequest.getDefaultInstance()) return this;
        if (other.hasRequesterFingerprint()) {
          setRequesterFingerprint(other.getRequesterFingerprint());
        }
        if (other.hasRequesteeFingerprint()) {
          setRequesteeFingerprint(other.getRequesteeFingerprint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequesterFingerprint()) {
          
          return false;
        }
        if (!hasRequesteeFingerprint()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.InitShareRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.InitShareRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       *
       * <pre>
       *alice's, if alice is asking carol for a share of bob
       * </pre>
       */
      public boolean hasRequesterFingerprint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       *
       * <pre>
       *alice's, if alice is asking carol for a share of bob
       * </pre>
       */
      public com.google.protobuf.ByteString getRequesterFingerprint() {
        return requesterFingerprint_;
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       *
       * <pre>
       *alice's, if alice is asking carol for a share of bob
       * </pre>
       */
      public Builder setRequesterFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        requesterFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       *
       * <pre>
       *alice's, if alice is asking carol for a share of bob
       * </pre>
       */
      public Builder clearRequesterFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requesterFingerprint_ = getDefaultInstance().getRequesterFingerprint();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString requesteeFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes requestee_fingerprint = 2;</code>
       *
       * <pre>
       *bob's, if alice is asking carol for a share of bob
       * </pre>
       */
      public boolean hasRequesteeFingerprint() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes requestee_fingerprint = 2;</code>
       *
       * <pre>
       *bob's, if alice is asking carol for a share of bob
       * </pre>
       */
      public com.google.protobuf.ByteString getRequesteeFingerprint() {
        return requesteeFingerprint_;
      }
      /**
       * <code>required bytes requestee_fingerprint = 2;</code>
       *
       * <pre>
       *bob's, if alice is asking carol for a share of bob
       * </pre>
       */
      public Builder setRequesteeFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        requesteeFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes requestee_fingerprint = 2;</code>
       *
       * <pre>
       *bob's, if alice is asking carol for a share of bob
       * </pre>
       */
      public Builder clearRequesteeFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        requesteeFingerprint_ = getDefaultInstance().getRequesteeFingerprint();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.InitShareRequest)
    }

    static {
      defaultInstance = new InitShareRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.InitShareRequest)
  }

  public interface ShareRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.ShareRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     *
     * <pre>
     *alice's, if alice is asking carol for a share of bob
     * </pre>
     */
    boolean hasRequesterFingerprint();
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     *
     * <pre>
     *alice's, if alice is asking carol for a share of bob
     * </pre>
     */
    com.google.protobuf.ByteString getRequesterFingerprint();

    /**
     * <code>required bytes requestee_fingerprint = 2;</code>
     *
     * <pre>
     *bob's, if alice is asking carol for a share of bob
     * </pre>
     */
    boolean hasRequesteeFingerprint();
    /**
     * <code>required bytes requestee_fingerprint = 2;</code>
     *
     * <pre>
     *bob's, if alice is asking carol for a share of bob
     * </pre>
     */
    com.google.protobuf.ByteString getRequesteeFingerprint();

    /**
     * <code>required bytes nonce = 3;</code>
     */
    boolean hasNonce();
    /**
     * <code>required bytes nonce = 3;</code>
     */
    com.google.protobuf.ByteString getNonce();

    /**
     * <code>required bytes signature = 4;</code>
     *
     * <pre>
     *signature with requester private key of (requester_fp~requestee_fp~nonce)
     * </pre>
     */
    boolean hasSignature();
    /**
     * <code>required bytes signature = 4;</code>
     *
     * <pre>
     *signature with requester private key of (requester_fp~requestee_fp~nonce)
     * </pre>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code pamrac.ShareRequest}
   *
   * <pre>
   *NOTE: this can either be alice asking carol for carol's share of bob, or carol asking bob for carol's share of bob
   *(since this is a little confusing: the fingerprint of the outer message, for multi-user servers, is the fingerprint
   *of the user whose server is holding the share we're asking for. so, in our examples where alice, bob are the request{er,ee},
   *this outer fingerprint would be carol. if carol was getting her own share from bob, it would instead be carol, bob, bob.
   * </pre>
   */
  public static final class ShareRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.ShareRequest)
      ShareRequestOrBuilder {
    // Use ShareRequest.newBuilder() to construct.
    private ShareRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShareRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShareRequest defaultInstance;
    public static ShareRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ShareRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShareRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              requesterFingerprint_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              requesteeFingerprint_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              nonce_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_ShareRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_ShareRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.ShareRequest.class, pamrac.Pamrac.ShareRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ShareRequest> PARSER =
        new com.google.protobuf.AbstractParser<ShareRequest>() {
      public ShareRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShareRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShareRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int REQUESTER_FINGERPRINT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString requesterFingerprint_;
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     *
     * <pre>
     *alice's, if alice is asking carol for a share of bob
     * </pre>
     */
    public boolean hasRequesterFingerprint() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes requester_fingerprint = 1;</code>
     *
     * <pre>
     *alice's, if alice is asking carol for a share of bob
     * </pre>
     */
    public com.google.protobuf.ByteString getRequesterFingerprint() {
      return requesterFingerprint_;
    }

    public static final int REQUESTEE_FINGERPRINT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString requesteeFingerprint_;
    /**
     * <code>required bytes requestee_fingerprint = 2;</code>
     *
     * <pre>
     *bob's, if alice is asking carol for a share of bob
     * </pre>
     */
    public boolean hasRequesteeFingerprint() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes requestee_fingerprint = 2;</code>
     *
     * <pre>
     *bob's, if alice is asking carol for a share of bob
     * </pre>
     */
    public com.google.protobuf.ByteString getRequesteeFingerprint() {
      return requesteeFingerprint_;
    }

    public static final int NONCE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString nonce_;
    /**
     * <code>required bytes nonce = 3;</code>
     */
    public boolean hasNonce() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes nonce = 3;</code>
     */
    public com.google.protobuf.ByteString getNonce() {
      return nonce_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>required bytes signature = 4;</code>
     *
     * <pre>
     *signature with requester private key of (requester_fp~requestee_fp~nonce)
     * </pre>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bytes signature = 4;</code>
     *
     * <pre>
     *signature with requester private key of (requester_fp~requestee_fp~nonce)
     * </pre>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      requesteeFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      nonce_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRequesterFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequesteeFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNonce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, requesterFingerprint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, requesteeFingerprint_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, nonce_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, requesterFingerprint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, requesteeFingerprint_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, nonce_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.ShareRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.ShareRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.ShareRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.ShareRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.ShareRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.ShareRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.ShareRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.ShareRequest}
     *
     * <pre>
     *NOTE: this can either be alice asking carol for carol's share of bob, or carol asking bob for carol's share of bob
     *(since this is a little confusing: the fingerprint of the outer message, for multi-user servers, is the fingerprint
     *of the user whose server is holding the share we're asking for. so, in our examples where alice, bob are the request{er,ee},
     *this outer fingerprint would be carol. if carol was getting her own share from bob, it would instead be carol, bob, bob.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.ShareRequest)
        pamrac.Pamrac.ShareRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_ShareRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_ShareRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.ShareRequest.class, pamrac.Pamrac.ShareRequest.Builder.class);
      }

      // Construct using pamrac.Pamrac.ShareRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        requesteeFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        nonce_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_ShareRequest_descriptor;
      }

      public pamrac.Pamrac.ShareRequest getDefaultInstanceForType() {
        return pamrac.Pamrac.ShareRequest.getDefaultInstance();
      }

      public pamrac.Pamrac.ShareRequest build() {
        pamrac.Pamrac.ShareRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.ShareRequest buildPartial() {
        pamrac.Pamrac.ShareRequest result = new pamrac.Pamrac.ShareRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requesterFingerprint_ = requesterFingerprint_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.requesteeFingerprint_ = requesteeFingerprint_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nonce_ = nonce_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.ShareRequest) {
          return mergeFrom((pamrac.Pamrac.ShareRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.ShareRequest other) {
        if (other == pamrac.Pamrac.ShareRequest.getDefaultInstance()) return this;
        if (other.hasRequesterFingerprint()) {
          setRequesterFingerprint(other.getRequesterFingerprint());
        }
        if (other.hasRequesteeFingerprint()) {
          setRequesteeFingerprint(other.getRequesteeFingerprint());
        }
        if (other.hasNonce()) {
          setNonce(other.getNonce());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequesterFingerprint()) {
          
          return false;
        }
        if (!hasRequesteeFingerprint()) {
          
          return false;
        }
        if (!hasNonce()) {
          
          return false;
        }
        if (!hasSignature()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.ShareRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.ShareRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString requesterFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       *
       * <pre>
       *alice's, if alice is asking carol for a share of bob
       * </pre>
       */
      public boolean hasRequesterFingerprint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       *
       * <pre>
       *alice's, if alice is asking carol for a share of bob
       * </pre>
       */
      public com.google.protobuf.ByteString getRequesterFingerprint() {
        return requesterFingerprint_;
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       *
       * <pre>
       *alice's, if alice is asking carol for a share of bob
       * </pre>
       */
      public Builder setRequesterFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        requesterFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes requester_fingerprint = 1;</code>
       *
       * <pre>
       *alice's, if alice is asking carol for a share of bob
       * </pre>
       */
      public Builder clearRequesterFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requesterFingerprint_ = getDefaultInstance().getRequesterFingerprint();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString requesteeFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes requestee_fingerprint = 2;</code>
       *
       * <pre>
       *bob's, if alice is asking carol for a share of bob
       * </pre>
       */
      public boolean hasRequesteeFingerprint() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes requestee_fingerprint = 2;</code>
       *
       * <pre>
       *bob's, if alice is asking carol for a share of bob
       * </pre>
       */
      public com.google.protobuf.ByteString getRequesteeFingerprint() {
        return requesteeFingerprint_;
      }
      /**
       * <code>required bytes requestee_fingerprint = 2;</code>
       *
       * <pre>
       *bob's, if alice is asking carol for a share of bob
       * </pre>
       */
      public Builder setRequesteeFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        requesteeFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes requestee_fingerprint = 2;</code>
       *
       * <pre>
       *bob's, if alice is asking carol for a share of bob
       * </pre>
       */
      public Builder clearRequesteeFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        requesteeFingerprint_ = getDefaultInstance().getRequesteeFingerprint();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString nonce_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes nonce = 3;</code>
       */
      public boolean hasNonce() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes nonce = 3;</code>
       */
      public com.google.protobuf.ByteString getNonce() {
        return nonce_;
      }
      /**
       * <code>required bytes nonce = 3;</code>
       */
      public Builder setNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes nonce = 3;</code>
       */
      public Builder clearNonce() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nonce_ = getDefaultInstance().getNonce();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes signature = 4;</code>
       *
       * <pre>
       *signature with requester private key of (requester_fp~requestee_fp~nonce)
       * </pre>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes signature = 4;</code>
       *
       * <pre>
       *signature with requester private key of (requester_fp~requestee_fp~nonce)
       * </pre>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>required bytes signature = 4;</code>
       *
       * <pre>
       *signature with requester private key of (requester_fp~requestee_fp~nonce)
       * </pre>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes signature = 4;</code>
       *
       * <pre>
       *signature with requester private key of (requester_fp~requestee_fp~nonce)
       * </pre>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000008);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.ShareRequest)
    }

    static {
      defaultInstance = new ShareRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.ShareRequest)
  }

  public interface KeyShareOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.KeyShare)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *seconds since epoch
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *seconds since epoch
     * </pre>
     */
    long getTimestamp();

    /**
     * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
     *
     * <pre>
     *you have this in your share if you are an initiator for this person.
     *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
     * </pre>
     */
    boolean hasMasterkeyRetrievableFile();
    /**
     * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
     *
     * <pre>
     *you have this in your share if you are an initiator for this person.
     *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
     * </pre>
     */
    pamrac.Pamrac.MasterKeyRetrievableFile getMasterkeyRetrievableFile();
    /**
     * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
     *
     * <pre>
     *you have this in your share if you are an initiator for this person.
     *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
     * </pre>
     */
    pamrac.Pamrac.MasterKeyRetrievableFileOrBuilder getMasterkeyRetrievableFileOrBuilder();

    /**
     * <code>optional bytes encrypted_initiator_mask = 3;</code>
     *
     * <pre>
     *You have this in your share if you are an initiator. It is encrypted directly to your public key. The contents are
     *the 32-byte initiator mask. (The MasterKeyRetrievableFile's copy of MASTER is encrypted by the XOR of this, and the 32-byte shared secret.)
     * </pre>
     */
    boolean hasEncryptedInitiatorMask();
    /**
     * <code>optional bytes encrypted_initiator_mask = 3;</code>
     *
     * <pre>
     *You have this in your share if you are an initiator. It is encrypted directly to your public key. The contents are
     *the 32-byte initiator mask. (The MasterKeyRetrievableFile's copy of MASTER is encrypted by the XOR of this, and the 32-byte shared secret.)
     * </pre>
     */
    com.google.protobuf.ByteString getEncryptedInitiatorMask();

    /**
     * <code>required bytes encrypted_share = 4;</code>
     *
     * <pre>
     *if this is a share of bobs key stored at carol, then this is a share of the retrieval secret.
     *it is encrypted to the public key corresponding to the fingerprint of next field. 
     *(directly by that public key).
     * </pre>
     */
    boolean hasEncryptedShare();
    /**
     * <code>required bytes encrypted_share = 4;</code>
     *
     * <pre>
     *if this is a share of bobs key stored at carol, then this is a share of the retrieval secret.
     *it is encrypted to the public key corresponding to the fingerprint of next field. 
     *(directly by that public key).
     * </pre>
     */
    com.google.protobuf.ByteString getEncryptedShare();

    /**
     * <code>required bytes encrypted_to_fingerprint = 5;</code>
     *
     * <pre>
     *which public key the encrypted_share is currently encrypted to
     * </pre>
     */
    boolean hasEncryptedToFingerprint();
    /**
     * <code>required bytes encrypted_to_fingerprint = 5;</code>
     *
     * <pre>
     *which public key the encrypted_share is currently encrypted to
     * </pre>
     */
    com.google.protobuf.ByteString getEncryptedToFingerprint();

    /**
     * <code>required bytes owner_fingerprint = 6;</code>
     *
     * <pre>
     *if originally stored at carol, this should be carol's fingerprint.
     * </pre>
     */
    boolean hasOwnerFingerprint();
    /**
     * <code>required bytes owner_fingerprint = 6;</code>
     *
     * <pre>
     *if originally stored at carol, this should be carol's fingerprint.
     * </pre>
     */
    com.google.protobuf.ByteString getOwnerFingerprint();

    /**
     * <code>required bytes originator_fingerprint = 7;</code>
     *
     * <pre>
     *fingerprint of key of client from whom this is a share (bob)
     * </pre>
     */
    boolean hasOriginatorFingerprint();
    /**
     * <code>required bytes originator_fingerprint = 7;</code>
     *
     * <pre>
     *fingerprint of key of client from whom this is a share (bob)
     * </pre>
     */
    com.google.protobuf.ByteString getOriginatorFingerprint();
  }
  /**
   * Protobuf type {@code pamrac.KeyShare}
   *
   * <pre>
   *Retrieval shares are stored at /var/lib/pamrac/keyshare/[originator_fp]-[owner_fp]-[currently_encrypted_to_fp]. 
   *Bob's server storing Carol's share of Bob, currently encrypted to Carol: bobfp-carolfp-carolfp.
   *Then, Carol gets that share, reencrypts it to Alice, and stores it on Carol's server: bobfp-carolfp-alicefp.
   *The format is:
   * </pre>
   */
  public static final class KeyShare extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.KeyShare)
      KeyShareOrBuilder {
    // Use KeyShare.newBuilder() to construct.
    private KeyShare(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private KeyShare(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final KeyShare defaultInstance;
    public static KeyShare getDefaultInstance() {
      return defaultInstance;
    }

    public KeyShare getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private KeyShare(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readInt64();
              break;
            }
            case 18: {
              pamrac.Pamrac.MasterKeyRetrievableFile.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = masterkeyRetrievableFile_.toBuilder();
              }
              masterkeyRetrievableFile_ = input.readMessage(pamrac.Pamrac.MasterKeyRetrievableFile.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(masterkeyRetrievableFile_);
                masterkeyRetrievableFile_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              encryptedInitiatorMask_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              encryptedShare_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              encryptedToFingerprint_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              ownerFingerprint_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              originatorFingerprint_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_KeyShare_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_KeyShare_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.KeyShare.class, pamrac.Pamrac.KeyShare.Builder.class);
    }

    public static com.google.protobuf.Parser<KeyShare> PARSER =
        new com.google.protobuf.AbstractParser<KeyShare>() {
      public KeyShare parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyShare(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<KeyShare> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *seconds since epoch
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 timestamp = 1;</code>
     *
     * <pre>
     *seconds since epoch
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int MASTERKEY_RETRIEVABLE_FILE_FIELD_NUMBER = 2;
    private pamrac.Pamrac.MasterKeyRetrievableFile masterkeyRetrievableFile_;
    /**
     * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
     *
     * <pre>
     *you have this in your share if you are an initiator for this person.
     *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
     * </pre>
     */
    public boolean hasMasterkeyRetrievableFile() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
     *
     * <pre>
     *you have this in your share if you are an initiator for this person.
     *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
     * </pre>
     */
    public pamrac.Pamrac.MasterKeyRetrievableFile getMasterkeyRetrievableFile() {
      return masterkeyRetrievableFile_;
    }
    /**
     * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
     *
     * <pre>
     *you have this in your share if you are an initiator for this person.
     *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
     * </pre>
     */
    public pamrac.Pamrac.MasterKeyRetrievableFileOrBuilder getMasterkeyRetrievableFileOrBuilder() {
      return masterkeyRetrievableFile_;
    }

    public static final int ENCRYPTED_INITIATOR_MASK_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString encryptedInitiatorMask_;
    /**
     * <code>optional bytes encrypted_initiator_mask = 3;</code>
     *
     * <pre>
     *You have this in your share if you are an initiator. It is encrypted directly to your public key. The contents are
     *the 32-byte initiator mask. (The MasterKeyRetrievableFile's copy of MASTER is encrypted by the XOR of this, and the 32-byte shared secret.)
     * </pre>
     */
    public boolean hasEncryptedInitiatorMask() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes encrypted_initiator_mask = 3;</code>
     *
     * <pre>
     *You have this in your share if you are an initiator. It is encrypted directly to your public key. The contents are
     *the 32-byte initiator mask. (The MasterKeyRetrievableFile's copy of MASTER is encrypted by the XOR of this, and the 32-byte shared secret.)
     * </pre>
     */
    public com.google.protobuf.ByteString getEncryptedInitiatorMask() {
      return encryptedInitiatorMask_;
    }

    public static final int ENCRYPTED_SHARE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString encryptedShare_;
    /**
     * <code>required bytes encrypted_share = 4;</code>
     *
     * <pre>
     *if this is a share of bobs key stored at carol, then this is a share of the retrieval secret.
     *it is encrypted to the public key corresponding to the fingerprint of next field. 
     *(directly by that public key).
     * </pre>
     */
    public boolean hasEncryptedShare() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bytes encrypted_share = 4;</code>
     *
     * <pre>
     *if this is a share of bobs key stored at carol, then this is a share of the retrieval secret.
     *it is encrypted to the public key corresponding to the fingerprint of next field. 
     *(directly by that public key).
     * </pre>
     */
    public com.google.protobuf.ByteString getEncryptedShare() {
      return encryptedShare_;
    }

    public static final int ENCRYPTED_TO_FINGERPRINT_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString encryptedToFingerprint_;
    /**
     * <code>required bytes encrypted_to_fingerprint = 5;</code>
     *
     * <pre>
     *which public key the encrypted_share is currently encrypted to
     * </pre>
     */
    public boolean hasEncryptedToFingerprint() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bytes encrypted_to_fingerprint = 5;</code>
     *
     * <pre>
     *which public key the encrypted_share is currently encrypted to
     * </pre>
     */
    public com.google.protobuf.ByteString getEncryptedToFingerprint() {
      return encryptedToFingerprint_;
    }

    public static final int OWNER_FINGERPRINT_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString ownerFingerprint_;
    /**
     * <code>required bytes owner_fingerprint = 6;</code>
     *
     * <pre>
     *if originally stored at carol, this should be carol's fingerprint.
     * </pre>
     */
    public boolean hasOwnerFingerprint() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bytes owner_fingerprint = 6;</code>
     *
     * <pre>
     *if originally stored at carol, this should be carol's fingerprint.
     * </pre>
     */
    public com.google.protobuf.ByteString getOwnerFingerprint() {
      return ownerFingerprint_;
    }

    public static final int ORIGINATOR_FINGERPRINT_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString originatorFingerprint_;
    /**
     * <code>required bytes originator_fingerprint = 7;</code>
     *
     * <pre>
     *fingerprint of key of client from whom this is a share (bob)
     * </pre>
     */
    public boolean hasOriginatorFingerprint() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bytes originator_fingerprint = 7;</code>
     *
     * <pre>
     *fingerprint of key of client from whom this is a share (bob)
     * </pre>
     */
    public com.google.protobuf.ByteString getOriginatorFingerprint() {
      return originatorFingerprint_;
    }

    private void initFields() {
      timestamp_ = 0L;
      masterkeyRetrievableFile_ = pamrac.Pamrac.MasterKeyRetrievableFile.getDefaultInstance();
      encryptedInitiatorMask_ = com.google.protobuf.ByteString.EMPTY;
      encryptedShare_ = com.google.protobuf.ByteString.EMPTY;
      encryptedToFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      ownerFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      originatorFingerprint_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEncryptedShare()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEncryptedToFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOwnerFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOriginatorFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasMasterkeyRetrievableFile()) {
        if (!getMasterkeyRetrievableFile().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, masterkeyRetrievableFile_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, encryptedInitiatorMask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, encryptedShare_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, encryptedToFingerprint_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, ownerFingerprint_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, originatorFingerprint_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, masterkeyRetrievableFile_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, encryptedInitiatorMask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, encryptedShare_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, encryptedToFingerprint_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, ownerFingerprint_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, originatorFingerprint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.KeyShare parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.KeyShare parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.KeyShare parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.KeyShare parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.KeyShare parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.KeyShare parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.KeyShare parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.KeyShare parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.KeyShare parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.KeyShare parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.KeyShare prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.KeyShare}
     *
     * <pre>
     *Retrieval shares are stored at /var/lib/pamrac/keyshare/[originator_fp]-[owner_fp]-[currently_encrypted_to_fp]. 
     *Bob's server storing Carol's share of Bob, currently encrypted to Carol: bobfp-carolfp-carolfp.
     *Then, Carol gets that share, reencrypts it to Alice, and stores it on Carol's server: bobfp-carolfp-alicefp.
     *The format is:
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.KeyShare)
        pamrac.Pamrac.KeyShareOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_KeyShare_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_KeyShare_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.KeyShare.class, pamrac.Pamrac.KeyShare.Builder.class);
      }

      // Construct using pamrac.Pamrac.KeyShare.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMasterkeyRetrievableFileFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (masterkeyRetrievableFileBuilder_ == null) {
          masterkeyRetrievableFile_ = pamrac.Pamrac.MasterKeyRetrievableFile.getDefaultInstance();
        } else {
          masterkeyRetrievableFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        encryptedInitiatorMask_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        encryptedShare_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        encryptedToFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        ownerFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        originatorFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_KeyShare_descriptor;
      }

      public pamrac.Pamrac.KeyShare getDefaultInstanceForType() {
        return pamrac.Pamrac.KeyShare.getDefaultInstance();
      }

      public pamrac.Pamrac.KeyShare build() {
        pamrac.Pamrac.KeyShare result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.KeyShare buildPartial() {
        pamrac.Pamrac.KeyShare result = new pamrac.Pamrac.KeyShare(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (masterkeyRetrievableFileBuilder_ == null) {
          result.masterkeyRetrievableFile_ = masterkeyRetrievableFile_;
        } else {
          result.masterkeyRetrievableFile_ = masterkeyRetrievableFileBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.encryptedInitiatorMask_ = encryptedInitiatorMask_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.encryptedShare_ = encryptedShare_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.encryptedToFingerprint_ = encryptedToFingerprint_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ownerFingerprint_ = ownerFingerprint_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.originatorFingerprint_ = originatorFingerprint_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.KeyShare) {
          return mergeFrom((pamrac.Pamrac.KeyShare)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.KeyShare other) {
        if (other == pamrac.Pamrac.KeyShare.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasMasterkeyRetrievableFile()) {
          mergeMasterkeyRetrievableFile(other.getMasterkeyRetrievableFile());
        }
        if (other.hasEncryptedInitiatorMask()) {
          setEncryptedInitiatorMask(other.getEncryptedInitiatorMask());
        }
        if (other.hasEncryptedShare()) {
          setEncryptedShare(other.getEncryptedShare());
        }
        if (other.hasEncryptedToFingerprint()) {
          setEncryptedToFingerprint(other.getEncryptedToFingerprint());
        }
        if (other.hasOwnerFingerprint()) {
          setOwnerFingerprint(other.getOwnerFingerprint());
        }
        if (other.hasOriginatorFingerprint()) {
          setOriginatorFingerprint(other.getOriginatorFingerprint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasEncryptedShare()) {
          
          return false;
        }
        if (!hasEncryptedToFingerprint()) {
          
          return false;
        }
        if (!hasOwnerFingerprint()) {
          
          return false;
        }
        if (!hasOriginatorFingerprint()) {
          
          return false;
        }
        if (hasMasterkeyRetrievableFile()) {
          if (!getMasterkeyRetrievableFile().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.KeyShare parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.KeyShare) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *seconds since epoch
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *seconds since epoch
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *seconds since epoch
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       *
       * <pre>
       *seconds since epoch
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private pamrac.Pamrac.MasterKeyRetrievableFile masterkeyRetrievableFile_ = pamrac.Pamrac.MasterKeyRetrievableFile.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.MasterKeyRetrievableFile, pamrac.Pamrac.MasterKeyRetrievableFile.Builder, pamrac.Pamrac.MasterKeyRetrievableFileOrBuilder> masterkeyRetrievableFileBuilder_;
      /**
       * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
       *
       * <pre>
       *you have this in your share if you are an initiator for this person.
       *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
       * </pre>
       */
      public boolean hasMasterkeyRetrievableFile() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
       *
       * <pre>
       *you have this in your share if you are an initiator for this person.
       *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
       * </pre>
       */
      public pamrac.Pamrac.MasterKeyRetrievableFile getMasterkeyRetrievableFile() {
        if (masterkeyRetrievableFileBuilder_ == null) {
          return masterkeyRetrievableFile_;
        } else {
          return masterkeyRetrievableFileBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
       *
       * <pre>
       *you have this in your share if you are an initiator for this person.
       *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
       * </pre>
       */
      public Builder setMasterkeyRetrievableFile(pamrac.Pamrac.MasterKeyRetrievableFile value) {
        if (masterkeyRetrievableFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          masterkeyRetrievableFile_ = value;
          onChanged();
        } else {
          masterkeyRetrievableFileBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
       *
       * <pre>
       *you have this in your share if you are an initiator for this person.
       *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
       * </pre>
       */
      public Builder setMasterkeyRetrievableFile(
          pamrac.Pamrac.MasterKeyRetrievableFile.Builder builderForValue) {
        if (masterkeyRetrievableFileBuilder_ == null) {
          masterkeyRetrievableFile_ = builderForValue.build();
          onChanged();
        } else {
          masterkeyRetrievableFileBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
       *
       * <pre>
       *you have this in your share if you are an initiator for this person.
       *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
       * </pre>
       */
      public Builder mergeMasterkeyRetrievableFile(pamrac.Pamrac.MasterKeyRetrievableFile value) {
        if (masterkeyRetrievableFileBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              masterkeyRetrievableFile_ != pamrac.Pamrac.MasterKeyRetrievableFile.getDefaultInstance()) {
            masterkeyRetrievableFile_ =
              pamrac.Pamrac.MasterKeyRetrievableFile.newBuilder(masterkeyRetrievableFile_).mergeFrom(value).buildPartial();
          } else {
            masterkeyRetrievableFile_ = value;
          }
          onChanged();
        } else {
          masterkeyRetrievableFileBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
       *
       * <pre>
       *you have this in your share if you are an initiator for this person.
       *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
       * </pre>
       */
      public Builder clearMasterkeyRetrievableFile() {
        if (masterkeyRetrievableFileBuilder_ == null) {
          masterkeyRetrievableFile_ = pamrac.Pamrac.MasterKeyRetrievableFile.getDefaultInstance();
          onChanged();
        } else {
          masterkeyRetrievableFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
       *
       * <pre>
       *you have this in your share if you are an initiator for this person.
       *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
       * </pre>
       */
      public pamrac.Pamrac.MasterKeyRetrievableFile.Builder getMasterkeyRetrievableFileBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMasterkeyRetrievableFileFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
       *
       * <pre>
       *you have this in your share if you are an initiator for this person.
       *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
       * </pre>
       */
      public pamrac.Pamrac.MasterKeyRetrievableFileOrBuilder getMasterkeyRetrievableFileOrBuilder() {
        if (masterkeyRetrievableFileBuilder_ != null) {
          return masterkeyRetrievableFileBuilder_.getMessageOrBuilder();
        } else {
          return masterkeyRetrievableFile_;
        }
      }
      /**
       * <code>optional .pamrac.MasterKeyRetrievableFile masterkey_retrievable_file = 2;</code>
       *
       * <pre>
       *you have this in your share if you are an initiator for this person.
       *NOTE: initiator should not give this out when giving out their share. That other person had better just be an initiator themselves.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.MasterKeyRetrievableFile, pamrac.Pamrac.MasterKeyRetrievableFile.Builder, pamrac.Pamrac.MasterKeyRetrievableFileOrBuilder> 
          getMasterkeyRetrievableFileFieldBuilder() {
        if (masterkeyRetrievableFileBuilder_ == null) {
          masterkeyRetrievableFileBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.MasterKeyRetrievableFile, pamrac.Pamrac.MasterKeyRetrievableFile.Builder, pamrac.Pamrac.MasterKeyRetrievableFileOrBuilder>(
                  getMasterkeyRetrievableFile(),
                  getParentForChildren(),
                  isClean());
          masterkeyRetrievableFile_ = null;
        }
        return masterkeyRetrievableFileBuilder_;
      }

      private com.google.protobuf.ByteString encryptedInitiatorMask_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes encrypted_initiator_mask = 3;</code>
       *
       * <pre>
       *You have this in your share if you are an initiator. It is encrypted directly to your public key. The contents are
       *the 32-byte initiator mask. (The MasterKeyRetrievableFile's copy of MASTER is encrypted by the XOR of this, and the 32-byte shared secret.)
       * </pre>
       */
      public boolean hasEncryptedInitiatorMask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes encrypted_initiator_mask = 3;</code>
       *
       * <pre>
       *You have this in your share if you are an initiator. It is encrypted directly to your public key. The contents are
       *the 32-byte initiator mask. (The MasterKeyRetrievableFile's copy of MASTER is encrypted by the XOR of this, and the 32-byte shared secret.)
       * </pre>
       */
      public com.google.protobuf.ByteString getEncryptedInitiatorMask() {
        return encryptedInitiatorMask_;
      }
      /**
       * <code>optional bytes encrypted_initiator_mask = 3;</code>
       *
       * <pre>
       *You have this in your share if you are an initiator. It is encrypted directly to your public key. The contents are
       *the 32-byte initiator mask. (The MasterKeyRetrievableFile's copy of MASTER is encrypted by the XOR of this, and the 32-byte shared secret.)
       * </pre>
       */
      public Builder setEncryptedInitiatorMask(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        encryptedInitiatorMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes encrypted_initiator_mask = 3;</code>
       *
       * <pre>
       *You have this in your share if you are an initiator. It is encrypted directly to your public key. The contents are
       *the 32-byte initiator mask. (The MasterKeyRetrievableFile's copy of MASTER is encrypted by the XOR of this, and the 32-byte shared secret.)
       * </pre>
       */
      public Builder clearEncryptedInitiatorMask() {
        bitField0_ = (bitField0_ & ~0x00000004);
        encryptedInitiatorMask_ = getDefaultInstance().getEncryptedInitiatorMask();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString encryptedShare_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes encrypted_share = 4;</code>
       *
       * <pre>
       *if this is a share of bobs key stored at carol, then this is a share of the retrieval secret.
       *it is encrypted to the public key corresponding to the fingerprint of next field. 
       *(directly by that public key).
       * </pre>
       */
      public boolean hasEncryptedShare() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes encrypted_share = 4;</code>
       *
       * <pre>
       *if this is a share of bobs key stored at carol, then this is a share of the retrieval secret.
       *it is encrypted to the public key corresponding to the fingerprint of next field. 
       *(directly by that public key).
       * </pre>
       */
      public com.google.protobuf.ByteString getEncryptedShare() {
        return encryptedShare_;
      }
      /**
       * <code>required bytes encrypted_share = 4;</code>
       *
       * <pre>
       *if this is a share of bobs key stored at carol, then this is a share of the retrieval secret.
       *it is encrypted to the public key corresponding to the fingerprint of next field. 
       *(directly by that public key).
       * </pre>
       */
      public Builder setEncryptedShare(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        encryptedShare_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes encrypted_share = 4;</code>
       *
       * <pre>
       *if this is a share of bobs key stored at carol, then this is a share of the retrieval secret.
       *it is encrypted to the public key corresponding to the fingerprint of next field. 
       *(directly by that public key).
       * </pre>
       */
      public Builder clearEncryptedShare() {
        bitField0_ = (bitField0_ & ~0x00000008);
        encryptedShare_ = getDefaultInstance().getEncryptedShare();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString encryptedToFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes encrypted_to_fingerprint = 5;</code>
       *
       * <pre>
       *which public key the encrypted_share is currently encrypted to
       * </pre>
       */
      public boolean hasEncryptedToFingerprint() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bytes encrypted_to_fingerprint = 5;</code>
       *
       * <pre>
       *which public key the encrypted_share is currently encrypted to
       * </pre>
       */
      public com.google.protobuf.ByteString getEncryptedToFingerprint() {
        return encryptedToFingerprint_;
      }
      /**
       * <code>required bytes encrypted_to_fingerprint = 5;</code>
       *
       * <pre>
       *which public key the encrypted_share is currently encrypted to
       * </pre>
       */
      public Builder setEncryptedToFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        encryptedToFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes encrypted_to_fingerprint = 5;</code>
       *
       * <pre>
       *which public key the encrypted_share is currently encrypted to
       * </pre>
       */
      public Builder clearEncryptedToFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000010);
        encryptedToFingerprint_ = getDefaultInstance().getEncryptedToFingerprint();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString ownerFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes owner_fingerprint = 6;</code>
       *
       * <pre>
       *if originally stored at carol, this should be carol's fingerprint.
       * </pre>
       */
      public boolean hasOwnerFingerprint() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bytes owner_fingerprint = 6;</code>
       *
       * <pre>
       *if originally stored at carol, this should be carol's fingerprint.
       * </pre>
       */
      public com.google.protobuf.ByteString getOwnerFingerprint() {
        return ownerFingerprint_;
      }
      /**
       * <code>required bytes owner_fingerprint = 6;</code>
       *
       * <pre>
       *if originally stored at carol, this should be carol's fingerprint.
       * </pre>
       */
      public Builder setOwnerFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        ownerFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes owner_fingerprint = 6;</code>
       *
       * <pre>
       *if originally stored at carol, this should be carol's fingerprint.
       * </pre>
       */
      public Builder clearOwnerFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ownerFingerprint_ = getDefaultInstance().getOwnerFingerprint();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString originatorFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes originator_fingerprint = 7;</code>
       *
       * <pre>
       *fingerprint of key of client from whom this is a share (bob)
       * </pre>
       */
      public boolean hasOriginatorFingerprint() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required bytes originator_fingerprint = 7;</code>
       *
       * <pre>
       *fingerprint of key of client from whom this is a share (bob)
       * </pre>
       */
      public com.google.protobuf.ByteString getOriginatorFingerprint() {
        return originatorFingerprint_;
      }
      /**
       * <code>required bytes originator_fingerprint = 7;</code>
       *
       * <pre>
       *fingerprint of key of client from whom this is a share (bob)
       * </pre>
       */
      public Builder setOriginatorFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        originatorFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes originator_fingerprint = 7;</code>
       *
       * <pre>
       *fingerprint of key of client from whom this is a share (bob)
       * </pre>
       */
      public Builder clearOriginatorFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000040);
        originatorFingerprint_ = getDefaultInstance().getOriginatorFingerprint();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.KeyShare)
    }

    static {
      defaultInstance = new KeyShare(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.KeyShare)
  }

  public interface ShareUploadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.ShareUpload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool allow_access = 1;</code>
     *
     * <pre>
     *if this is false, we're revoking the named person's access to the share
     * </pre>
     */
    boolean hasAllowAccess();
    /**
     * <code>required bool allow_access = 1;</code>
     *
     * <pre>
     *if this is false, we're revoking the named person's access to the share
     * </pre>
     */
    boolean getAllowAccess();

    /**
     * <code>required bytes retriever_fingerprint = 2;</code>
     */
    boolean hasRetrieverFingerprint();
    /**
     * <code>required bytes retriever_fingerprint = 2;</code>
     */
    com.google.protobuf.ByteString getRetrieverFingerprint();

    /**
     * <code>required bytes retrievee_fingerprint = 3;</code>
     */
    boolean hasRetrieveeFingerprint();
    /**
     * <code>required bytes retrievee_fingerprint = 3;</code>
     */
    com.google.protobuf.ByteString getRetrieveeFingerprint();

    /**
     * <code>optional .pamrac.KeyShare share = 4;</code>
     */
    boolean hasShare();
    /**
     * <code>optional .pamrac.KeyShare share = 4;</code>
     */
    pamrac.Pamrac.KeyShare getShare();
    /**
     * <code>optional .pamrac.KeyShare share = 4;</code>
     */
    pamrac.Pamrac.KeyShareOrBuilder getShareOrBuilder();

    /**
     * <code>optional .pamrac.ShareList list = 5;</code>
     *
     * <pre>
     *if this is the originator initially putting the shares on their own server, they can also specify the list here.
     * </pre>
     */
    boolean hasList();
    /**
     * <code>optional .pamrac.ShareList list = 5;</code>
     *
     * <pre>
     *if this is the originator initially putting the shares on their own server, they can also specify the list here.
     * </pre>
     */
    pamrac.Pamrac.ShareList getList();
    /**
     * <code>optional .pamrac.ShareList list = 5;</code>
     *
     * <pre>
     *if this is the originator initially putting the shares on their own server, they can also specify the list here.
     * </pre>
     */
    pamrac.Pamrac.ShareListOrBuilder getListOrBuilder();

    /**
     * <code>required bytes nonce = 6;</code>
     */
    boolean hasNonce();
    /**
     * <code>required bytes nonce = 6;</code>
     */
    com.google.protobuf.ByteString getNonce();

    /**
     * <code>required bytes signature = 7;</code>
     *
     * <pre>
     *signature of (allow_access ? 1 : 0 (bytes, not ascii) ~ retriever_fprint ~ retrievee_fprint ~ nonce
     *			~IFPRESENT(share.[timestamp~encrypted_share~encrypted_to_fprint~owner_fprint~originator_fprint
     *					~IFPRESENT( masterkey_retrievable_file.[timestamp~initvector~ciphertext] )	)
     * </pre>
     */
    boolean hasSignature();
    /**
     * <code>required bytes signature = 7;</code>
     *
     * <pre>
     *signature of (allow_access ? 1 : 0 (bytes, not ascii) ~ retriever_fprint ~ retrievee_fprint ~ nonce
     *			~IFPRESENT(share.[timestamp~encrypted_share~encrypted_to_fprint~owner_fprint~originator_fprint
     *					~IFPRESENT( masterkey_retrievable_file.[timestamp~initvector~ciphertext] )	)
     * </pre>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code pamrac.ShareUpload}
   *
   * <pre>
   *client is instructing server to allow / disallow a certain someone to get a certain keyshare.
   *This can be either Bob putting a freshly rotated share of himself onto his own server, or Carol putting 
   *her Bobshare, reencrypted to Alice, on her (Carol's) server, for Alice to retrieve.
   *OR, it can be an instruction to delete that share-given-to-that-person (recall all shares are stored in files named
   *originator_fp-owner_fp-currently_encrypted_to_fp: the revocation is saying e.g. "delete the Carol's Bobshare that is encrypted to Alice".
   * </pre>
   */
  public static final class ShareUpload extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.ShareUpload)
      ShareUploadOrBuilder {
    // Use ShareUpload.newBuilder() to construct.
    private ShareUpload(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShareUpload(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShareUpload defaultInstance;
    public static ShareUpload getDefaultInstance() {
      return defaultInstance;
    }

    public ShareUpload getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShareUpload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              allowAccess_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              retrieverFingerprint_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              retrieveeFingerprint_ = input.readBytes();
              break;
            }
            case 34: {
              pamrac.Pamrac.KeyShare.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = share_.toBuilder();
              }
              share_ = input.readMessage(pamrac.Pamrac.KeyShare.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(share_);
                share_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              pamrac.Pamrac.ShareList.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = list_.toBuilder();
              }
              list_ = input.readMessage(pamrac.Pamrac.ShareList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(list_);
                list_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              nonce_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_ShareUpload_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_ShareUpload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.ShareUpload.class, pamrac.Pamrac.ShareUpload.Builder.class);
    }

    public static com.google.protobuf.Parser<ShareUpload> PARSER =
        new com.google.protobuf.AbstractParser<ShareUpload>() {
      public ShareUpload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShareUpload(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShareUpload> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ALLOW_ACCESS_FIELD_NUMBER = 1;
    private boolean allowAccess_;
    /**
     * <code>required bool allow_access = 1;</code>
     *
     * <pre>
     *if this is false, we're revoking the named person's access to the share
     * </pre>
     */
    public boolean hasAllowAccess() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool allow_access = 1;</code>
     *
     * <pre>
     *if this is false, we're revoking the named person's access to the share
     * </pre>
     */
    public boolean getAllowAccess() {
      return allowAccess_;
    }

    public static final int RETRIEVER_FINGERPRINT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString retrieverFingerprint_;
    /**
     * <code>required bytes retriever_fingerprint = 2;</code>
     */
    public boolean hasRetrieverFingerprint() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes retriever_fingerprint = 2;</code>
     */
    public com.google.protobuf.ByteString getRetrieverFingerprint() {
      return retrieverFingerprint_;
    }

    public static final int RETRIEVEE_FINGERPRINT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString retrieveeFingerprint_;
    /**
     * <code>required bytes retrievee_fingerprint = 3;</code>
     */
    public boolean hasRetrieveeFingerprint() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes retrievee_fingerprint = 3;</code>
     */
    public com.google.protobuf.ByteString getRetrieveeFingerprint() {
      return retrieveeFingerprint_;
    }

    public static final int SHARE_FIELD_NUMBER = 4;
    private pamrac.Pamrac.KeyShare share_;
    /**
     * <code>optional .pamrac.KeyShare share = 4;</code>
     */
    public boolean hasShare() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .pamrac.KeyShare share = 4;</code>
     */
    public pamrac.Pamrac.KeyShare getShare() {
      return share_;
    }
    /**
     * <code>optional .pamrac.KeyShare share = 4;</code>
     */
    public pamrac.Pamrac.KeyShareOrBuilder getShareOrBuilder() {
      return share_;
    }

    public static final int LIST_FIELD_NUMBER = 5;
    private pamrac.Pamrac.ShareList list_;
    /**
     * <code>optional .pamrac.ShareList list = 5;</code>
     *
     * <pre>
     *if this is the originator initially putting the shares on their own server, they can also specify the list here.
     * </pre>
     */
    public boolean hasList() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .pamrac.ShareList list = 5;</code>
     *
     * <pre>
     *if this is the originator initially putting the shares on their own server, they can also specify the list here.
     * </pre>
     */
    public pamrac.Pamrac.ShareList getList() {
      return list_;
    }
    /**
     * <code>optional .pamrac.ShareList list = 5;</code>
     *
     * <pre>
     *if this is the originator initially putting the shares on their own server, they can also specify the list here.
     * </pre>
     */
    public pamrac.Pamrac.ShareListOrBuilder getListOrBuilder() {
      return list_;
    }

    public static final int NONCE_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString nonce_;
    /**
     * <code>required bytes nonce = 6;</code>
     */
    public boolean hasNonce() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bytes nonce = 6;</code>
     */
    public com.google.protobuf.ByteString getNonce() {
      return nonce_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>required bytes signature = 7;</code>
     *
     * <pre>
     *signature of (allow_access ? 1 : 0 (bytes, not ascii) ~ retriever_fprint ~ retrievee_fprint ~ nonce
     *			~IFPRESENT(share.[timestamp~encrypted_share~encrypted_to_fprint~owner_fprint~originator_fprint
     *					~IFPRESENT( masterkey_retrievable_file.[timestamp~initvector~ciphertext] )	)
     * </pre>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bytes signature = 7;</code>
     *
     * <pre>
     *signature of (allow_access ? 1 : 0 (bytes, not ascii) ~ retriever_fprint ~ retrievee_fprint ~ nonce
     *			~IFPRESENT(share.[timestamp~encrypted_share~encrypted_to_fprint~owner_fprint~originator_fprint
     *					~IFPRESENT( masterkey_retrievable_file.[timestamp~initvector~ciphertext] )	)
     * </pre>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      allowAccess_ = false;
      retrieverFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      retrieveeFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      share_ = pamrac.Pamrac.KeyShare.getDefaultInstance();
      list_ = pamrac.Pamrac.ShareList.getDefaultInstance();
      nonce_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAllowAccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRetrieverFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRetrieveeFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNonce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasShare()) {
        if (!getShare().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasList()) {
        if (!getList().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, allowAccess_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, retrieverFingerprint_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, retrieveeFingerprint_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, share_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, list_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, nonce_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, allowAccess_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, retrieverFingerprint_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, retrieveeFingerprint_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, share_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, list_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, nonce_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.ShareUpload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.ShareUpload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareUpload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.ShareUpload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareUpload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.ShareUpload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareUpload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.ShareUpload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.ShareUpload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.ShareUpload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.ShareUpload prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.ShareUpload}
     *
     * <pre>
     *client is instructing server to allow / disallow a certain someone to get a certain keyshare.
     *This can be either Bob putting a freshly rotated share of himself onto his own server, or Carol putting 
     *her Bobshare, reencrypted to Alice, on her (Carol's) server, for Alice to retrieve.
     *OR, it can be an instruction to delete that share-given-to-that-person (recall all shares are stored in files named
     *originator_fp-owner_fp-currently_encrypted_to_fp: the revocation is saying e.g. "delete the Carol's Bobshare that is encrypted to Alice".
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.ShareUpload)
        pamrac.Pamrac.ShareUploadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_ShareUpload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_ShareUpload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.ShareUpload.class, pamrac.Pamrac.ShareUpload.Builder.class);
      }

      // Construct using pamrac.Pamrac.ShareUpload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getShareFieldBuilder();
          getListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        allowAccess_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        retrieverFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        retrieveeFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (shareBuilder_ == null) {
          share_ = pamrac.Pamrac.KeyShare.getDefaultInstance();
        } else {
          shareBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (listBuilder_ == null) {
          list_ = pamrac.Pamrac.ShareList.getDefaultInstance();
        } else {
          listBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        nonce_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_ShareUpload_descriptor;
      }

      public pamrac.Pamrac.ShareUpload getDefaultInstanceForType() {
        return pamrac.Pamrac.ShareUpload.getDefaultInstance();
      }

      public pamrac.Pamrac.ShareUpload build() {
        pamrac.Pamrac.ShareUpload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.ShareUpload buildPartial() {
        pamrac.Pamrac.ShareUpload result = new pamrac.Pamrac.ShareUpload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.allowAccess_ = allowAccess_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.retrieverFingerprint_ = retrieverFingerprint_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.retrieveeFingerprint_ = retrieveeFingerprint_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (shareBuilder_ == null) {
          result.share_ = share_;
        } else {
          result.share_ = shareBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (listBuilder_ == null) {
          result.list_ = list_;
        } else {
          result.list_ = listBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nonce_ = nonce_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.ShareUpload) {
          return mergeFrom((pamrac.Pamrac.ShareUpload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.ShareUpload other) {
        if (other == pamrac.Pamrac.ShareUpload.getDefaultInstance()) return this;
        if (other.hasAllowAccess()) {
          setAllowAccess(other.getAllowAccess());
        }
        if (other.hasRetrieverFingerprint()) {
          setRetrieverFingerprint(other.getRetrieverFingerprint());
        }
        if (other.hasRetrieveeFingerprint()) {
          setRetrieveeFingerprint(other.getRetrieveeFingerprint());
        }
        if (other.hasShare()) {
          mergeShare(other.getShare());
        }
        if (other.hasList()) {
          mergeList(other.getList());
        }
        if (other.hasNonce()) {
          setNonce(other.getNonce());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAllowAccess()) {
          
          return false;
        }
        if (!hasRetrieverFingerprint()) {
          
          return false;
        }
        if (!hasRetrieveeFingerprint()) {
          
          return false;
        }
        if (!hasNonce()) {
          
          return false;
        }
        if (!hasSignature()) {
          
          return false;
        }
        if (hasShare()) {
          if (!getShare().isInitialized()) {
            
            return false;
          }
        }
        if (hasList()) {
          if (!getList().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.ShareUpload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.ShareUpload) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean allowAccess_ ;
      /**
       * <code>required bool allow_access = 1;</code>
       *
       * <pre>
       *if this is false, we're revoking the named person's access to the share
       * </pre>
       */
      public boolean hasAllowAccess() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool allow_access = 1;</code>
       *
       * <pre>
       *if this is false, we're revoking the named person's access to the share
       * </pre>
       */
      public boolean getAllowAccess() {
        return allowAccess_;
      }
      /**
       * <code>required bool allow_access = 1;</code>
       *
       * <pre>
       *if this is false, we're revoking the named person's access to the share
       * </pre>
       */
      public Builder setAllowAccess(boolean value) {
        bitField0_ |= 0x00000001;
        allowAccess_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool allow_access = 1;</code>
       *
       * <pre>
       *if this is false, we're revoking the named person's access to the share
       * </pre>
       */
      public Builder clearAllowAccess() {
        bitField0_ = (bitField0_ & ~0x00000001);
        allowAccess_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString retrieverFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes retriever_fingerprint = 2;</code>
       */
      public boolean hasRetrieverFingerprint() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes retriever_fingerprint = 2;</code>
       */
      public com.google.protobuf.ByteString getRetrieverFingerprint() {
        return retrieverFingerprint_;
      }
      /**
       * <code>required bytes retriever_fingerprint = 2;</code>
       */
      public Builder setRetrieverFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        retrieverFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes retriever_fingerprint = 2;</code>
       */
      public Builder clearRetrieverFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        retrieverFingerprint_ = getDefaultInstance().getRetrieverFingerprint();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString retrieveeFingerprint_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes retrievee_fingerprint = 3;</code>
       */
      public boolean hasRetrieveeFingerprint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes retrievee_fingerprint = 3;</code>
       */
      public com.google.protobuf.ByteString getRetrieveeFingerprint() {
        return retrieveeFingerprint_;
      }
      /**
       * <code>required bytes retrievee_fingerprint = 3;</code>
       */
      public Builder setRetrieveeFingerprint(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        retrieveeFingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes retrievee_fingerprint = 3;</code>
       */
      public Builder clearRetrieveeFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000004);
        retrieveeFingerprint_ = getDefaultInstance().getRetrieveeFingerprint();
        onChanged();
        return this;
      }

      private pamrac.Pamrac.KeyShare share_ = pamrac.Pamrac.KeyShare.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.KeyShare, pamrac.Pamrac.KeyShare.Builder, pamrac.Pamrac.KeyShareOrBuilder> shareBuilder_;
      /**
       * <code>optional .pamrac.KeyShare share = 4;</code>
       */
      public boolean hasShare() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .pamrac.KeyShare share = 4;</code>
       */
      public pamrac.Pamrac.KeyShare getShare() {
        if (shareBuilder_ == null) {
          return share_;
        } else {
          return shareBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.KeyShare share = 4;</code>
       */
      public Builder setShare(pamrac.Pamrac.KeyShare value) {
        if (shareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          share_ = value;
          onChanged();
        } else {
          shareBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pamrac.KeyShare share = 4;</code>
       */
      public Builder setShare(
          pamrac.Pamrac.KeyShare.Builder builderForValue) {
        if (shareBuilder_ == null) {
          share_ = builderForValue.build();
          onChanged();
        } else {
          shareBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pamrac.KeyShare share = 4;</code>
       */
      public Builder mergeShare(pamrac.Pamrac.KeyShare value) {
        if (shareBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              share_ != pamrac.Pamrac.KeyShare.getDefaultInstance()) {
            share_ =
              pamrac.Pamrac.KeyShare.newBuilder(share_).mergeFrom(value).buildPartial();
          } else {
            share_ = value;
          }
          onChanged();
        } else {
          shareBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pamrac.KeyShare share = 4;</code>
       */
      public Builder clearShare() {
        if (shareBuilder_ == null) {
          share_ = pamrac.Pamrac.KeyShare.getDefaultInstance();
          onChanged();
        } else {
          shareBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .pamrac.KeyShare share = 4;</code>
       */
      public pamrac.Pamrac.KeyShare.Builder getShareBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getShareFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.KeyShare share = 4;</code>
       */
      public pamrac.Pamrac.KeyShareOrBuilder getShareOrBuilder() {
        if (shareBuilder_ != null) {
          return shareBuilder_.getMessageOrBuilder();
        } else {
          return share_;
        }
      }
      /**
       * <code>optional .pamrac.KeyShare share = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.KeyShare, pamrac.Pamrac.KeyShare.Builder, pamrac.Pamrac.KeyShareOrBuilder> 
          getShareFieldBuilder() {
        if (shareBuilder_ == null) {
          shareBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.KeyShare, pamrac.Pamrac.KeyShare.Builder, pamrac.Pamrac.KeyShareOrBuilder>(
                  getShare(),
                  getParentForChildren(),
                  isClean());
          share_ = null;
        }
        return shareBuilder_;
      }

      private pamrac.Pamrac.ShareList list_ = pamrac.Pamrac.ShareList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.ShareList, pamrac.Pamrac.ShareList.Builder, pamrac.Pamrac.ShareListOrBuilder> listBuilder_;
      /**
       * <code>optional .pamrac.ShareList list = 5;</code>
       *
       * <pre>
       *if this is the originator initially putting the shares on their own server, they can also specify the list here.
       * </pre>
       */
      public boolean hasList() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .pamrac.ShareList list = 5;</code>
       *
       * <pre>
       *if this is the originator initially putting the shares on their own server, they can also specify the list here.
       * </pre>
       */
      public pamrac.Pamrac.ShareList getList() {
        if (listBuilder_ == null) {
          return list_;
        } else {
          return listBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pamrac.ShareList list = 5;</code>
       *
       * <pre>
       *if this is the originator initially putting the shares on their own server, they can also specify the list here.
       * </pre>
       */
      public Builder setList(pamrac.Pamrac.ShareList value) {
        if (listBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          list_ = value;
          onChanged();
        } else {
          listBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareList list = 5;</code>
       *
       * <pre>
       *if this is the originator initially putting the shares on their own server, they can also specify the list here.
       * </pre>
       */
      public Builder setList(
          pamrac.Pamrac.ShareList.Builder builderForValue) {
        if (listBuilder_ == null) {
          list_ = builderForValue.build();
          onChanged();
        } else {
          listBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareList list = 5;</code>
       *
       * <pre>
       *if this is the originator initially putting the shares on their own server, they can also specify the list here.
       * </pre>
       */
      public Builder mergeList(pamrac.Pamrac.ShareList value) {
        if (listBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              list_ != pamrac.Pamrac.ShareList.getDefaultInstance()) {
            list_ =
              pamrac.Pamrac.ShareList.newBuilder(list_).mergeFrom(value).buildPartial();
          } else {
            list_ = value;
          }
          onChanged();
        } else {
          listBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pamrac.ShareList list = 5;</code>
       *
       * <pre>
       *if this is the originator initially putting the shares on their own server, they can also specify the list here.
       * </pre>
       */
      public Builder clearList() {
        if (listBuilder_ == null) {
          list_ = pamrac.Pamrac.ShareList.getDefaultInstance();
          onChanged();
        } else {
          listBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .pamrac.ShareList list = 5;</code>
       *
       * <pre>
       *if this is the originator initially putting the shares on their own server, they can also specify the list here.
       * </pre>
       */
      public pamrac.Pamrac.ShareList.Builder getListBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pamrac.ShareList list = 5;</code>
       *
       * <pre>
       *if this is the originator initially putting the shares on their own server, they can also specify the list here.
       * </pre>
       */
      public pamrac.Pamrac.ShareListOrBuilder getListOrBuilder() {
        if (listBuilder_ != null) {
          return listBuilder_.getMessageOrBuilder();
        } else {
          return list_;
        }
      }
      /**
       * <code>optional .pamrac.ShareList list = 5;</code>
       *
       * <pre>
       *if this is the originator initially putting the shares on their own server, they can also specify the list here.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pamrac.Pamrac.ShareList, pamrac.Pamrac.ShareList.Builder, pamrac.Pamrac.ShareListOrBuilder> 
          getListFieldBuilder() {
        if (listBuilder_ == null) {
          listBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pamrac.Pamrac.ShareList, pamrac.Pamrac.ShareList.Builder, pamrac.Pamrac.ShareListOrBuilder>(
                  getList(),
                  getParentForChildren(),
                  isClean());
          list_ = null;
        }
        return listBuilder_;
      }

      private com.google.protobuf.ByteString nonce_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes nonce = 6;</code>
       */
      public boolean hasNonce() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bytes nonce = 6;</code>
       */
      public com.google.protobuf.ByteString getNonce() {
        return nonce_;
      }
      /**
       * <code>required bytes nonce = 6;</code>
       */
      public Builder setNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes nonce = 6;</code>
       */
      public Builder clearNonce() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nonce_ = getDefaultInstance().getNonce();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes signature = 7;</code>
       *
       * <pre>
       *signature of (allow_access ? 1 : 0 (bytes, not ascii) ~ retriever_fprint ~ retrievee_fprint ~ nonce
       *			~IFPRESENT(share.[timestamp~encrypted_share~encrypted_to_fprint~owner_fprint~originator_fprint
       *					~IFPRESENT( masterkey_retrievable_file.[timestamp~initvector~ciphertext] )	)
       * </pre>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required bytes signature = 7;</code>
       *
       * <pre>
       *signature of (allow_access ? 1 : 0 (bytes, not ascii) ~ retriever_fprint ~ retrievee_fprint ~ nonce
       *			~IFPRESENT(share.[timestamp~encrypted_share~encrypted_to_fprint~owner_fprint~originator_fprint
       *					~IFPRESENT( masterkey_retrievable_file.[timestamp~initvector~ciphertext] )	)
       * </pre>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>required bytes signature = 7;</code>
       *
       * <pre>
       *signature of (allow_access ? 1 : 0 (bytes, not ascii) ~ retriever_fprint ~ retrievee_fprint ~ nonce
       *			~IFPRESENT(share.[timestamp~encrypted_share~encrypted_to_fprint~owner_fprint~originator_fprint
       *					~IFPRESENT( masterkey_retrievable_file.[timestamp~initvector~ciphertext] )	)
       * </pre>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes signature = 7;</code>
       *
       * <pre>
       *signature of (allow_access ? 1 : 0 (bytes, not ascii) ~ retriever_fprint ~ retrievee_fprint ~ nonce
       *			~IFPRESENT(share.[timestamp~encrypted_share~encrypted_to_fprint~owner_fprint~originator_fprint
       *					~IFPRESENT( masterkey_retrievable_file.[timestamp~initvector~ciphertext] )	)
       * </pre>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000040);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.ShareUpload)
    }

    static {
      defaultInstance = new ShareUpload(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.ShareUpload)
  }

  public interface FriendNameMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pamrac.FriendNameMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
     */
    java.util.List<pamrac.Pamrac.FriendNameMap.FriendNickname> 
        getFriendsList();
    /**
     * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
     */
    pamrac.Pamrac.FriendNameMap.FriendNickname getFriends(int index);
    /**
     * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
     */
    int getFriendsCount();
    /**
     * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
     */
    java.util.List<? extends pamrac.Pamrac.FriendNameMap.FriendNicknameOrBuilder> 
        getFriendsOrBuilderList();
    /**
     * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
     */
    pamrac.Pamrac.FriendNameMap.FriendNicknameOrBuilder getFriendsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pamrac.FriendNameMap}
   */
  public static final class FriendNameMap extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pamrac.FriendNameMap)
      FriendNameMapOrBuilder {
    // Use FriendNameMap.newBuilder() to construct.
    private FriendNameMap(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FriendNameMap(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FriendNameMap defaultInstance;
    public static FriendNameMap getDefaultInstance() {
      return defaultInstance;
    }

    public FriendNameMap getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FriendNameMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                friends_ = new java.util.ArrayList<pamrac.Pamrac.FriendNameMap.FriendNickname>();
                mutable_bitField0_ |= 0x00000001;
              }
              friends_.add(input.readMessage(pamrac.Pamrac.FriendNameMap.FriendNickname.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          friends_ = java.util.Collections.unmodifiableList(friends_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pamrac.Pamrac.internal_static_pamrac_FriendNameMap_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pamrac.Pamrac.internal_static_pamrac_FriendNameMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pamrac.Pamrac.FriendNameMap.class, pamrac.Pamrac.FriendNameMap.Builder.class);
    }

    public static com.google.protobuf.Parser<FriendNameMap> PARSER =
        new com.google.protobuf.AbstractParser<FriendNameMap>() {
      public FriendNameMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FriendNameMap(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FriendNameMap> getParserForType() {
      return PARSER;
    }

    public interface FriendNicknameOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pamrac.FriendNameMap.FriendNickname)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required string name = 1;</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>required bytes friend_fingerprint = 2;</code>
       *
       * <pre>
       *fingerprint of the friend's public key
       * </pre>
       */
      boolean hasFriendFingerprint();
      /**
       * <code>required bytes friend_fingerprint = 2;</code>
       *
       * <pre>
       *fingerprint of the friend's public key
       * </pre>
       */
      com.google.protobuf.ByteString getFriendFingerprint();

      /**
       * <code>required bytes server_fingerprint = 3;</code>
       *
       * <pre>
       *fingerprint of the server's cert/pub key
       * </pre>
       */
      boolean hasServerFingerprint();
      /**
       * <code>required bytes server_fingerprint = 3;</code>
       *
       * <pre>
       *fingerprint of the server's cert/pub key
       * </pre>
       */
      com.google.protobuf.ByteString getServerFingerprint();

      /**
       * <code>required string server_address = 4;</code>
       *
       * <pre>
       *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
       * </pre>
       */
      boolean hasServerAddress();
      /**
       * <code>required string server_address = 4;</code>
       *
       * <pre>
       *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
       * </pre>
       */
      java.lang.String getServerAddress();
      /**
       * <code>required string server_address = 4;</code>
       *
       * <pre>
       *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
       * </pre>
       */
      com.google.protobuf.ByteString
          getServerAddressBytes();

      /**
       * <code>required bytes signature = 5;</code>
       *
       * <pre>
       *a signature of this record with the client's private key
       * </pre>
       */
      boolean hasSignature();
      /**
       * <code>required bytes signature = 5;</code>
       *
       * <pre>
       *a signature of this record with the client's private key
       * </pre>
       */
      com.google.protobuf.ByteString getSignature();
    }
    /**
     * Protobuf type {@code pamrac.FriendNameMap.FriendNickname}
     */
    public static final class FriendNickname extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pamrac.FriendNameMap.FriendNickname)
        FriendNicknameOrBuilder {
      // Use FriendNickname.newBuilder() to construct.
      private FriendNickname(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private FriendNickname(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final FriendNickname defaultInstance;
      public static FriendNickname getDefaultInstance() {
        return defaultInstance;
      }

      public FriendNickname getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private FriendNickname(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                friendFingerprint_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                serverFingerprint_ = input.readBytes();
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                serverAddress_ = bs;
                break;
              }
              case 42: {
                bitField0_ |= 0x00000010;
                signature_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_FriendNameMap_FriendNickname_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_FriendNameMap_FriendNickname_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.FriendNameMap.FriendNickname.class, pamrac.Pamrac.FriendNameMap.FriendNickname.Builder.class);
      }

      public static com.google.protobuf.Parser<FriendNickname> PARSER =
          new com.google.protobuf.AbstractParser<FriendNickname>() {
        public FriendNickname parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FriendNickname(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<FriendNickname> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FRIEND_FINGERPRINT_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString friendFingerprint_;
      /**
       * <code>required bytes friend_fingerprint = 2;</code>
       *
       * <pre>
       *fingerprint of the friend's public key
       * </pre>
       */
      public boolean hasFriendFingerprint() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes friend_fingerprint = 2;</code>
       *
       * <pre>
       *fingerprint of the friend's public key
       * </pre>
       */
      public com.google.protobuf.ByteString getFriendFingerprint() {
        return friendFingerprint_;
      }

      public static final int SERVER_FINGERPRINT_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString serverFingerprint_;
      /**
       * <code>required bytes server_fingerprint = 3;</code>
       *
       * <pre>
       *fingerprint of the server's cert/pub key
       * </pre>
       */
      public boolean hasServerFingerprint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes server_fingerprint = 3;</code>
       *
       * <pre>
       *fingerprint of the server's cert/pub key
       * </pre>
       */
      public com.google.protobuf.ByteString getServerFingerprint() {
        return serverFingerprint_;
      }

      public static final int SERVER_ADDRESS_FIELD_NUMBER = 4;
      private java.lang.Object serverAddress_;
      /**
       * <code>required string server_address = 4;</code>
       *
       * <pre>
       *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
       * </pre>
       */
      public boolean hasServerAddress() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string server_address = 4;</code>
       *
       * <pre>
       *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
       * </pre>
       */
      public java.lang.String getServerAddress() {
        java.lang.Object ref = serverAddress_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serverAddress_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string server_address = 4;</code>
       *
       * <pre>
       *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
       * </pre>
       */
      public com.google.protobuf.ByteString
          getServerAddressBytes() {
        java.lang.Object ref = serverAddress_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serverAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SIGNATURE_FIELD_NUMBER = 5;
      private com.google.protobuf.ByteString signature_;
      /**
       * <code>required bytes signature = 5;</code>
       *
       * <pre>
       *a signature of this record with the client's private key
       * </pre>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bytes signature = 5;</code>
       *
       * <pre>
       *a signature of this record with the client's private key
       * </pre>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }

      private void initFields() {
        name_ = "";
        friendFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        serverFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        serverAddress_ = "";
        signature_ = com.google.protobuf.ByteString.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasFriendFingerprint()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasServerFingerprint()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasServerAddress()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSignature()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, friendFingerprint_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, serverFingerprint_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getServerAddressBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, signature_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, friendFingerprint_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, serverFingerprint_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getServerAddressBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, signature_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pamrac.Pamrac.FriendNameMap.FriendNickname parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pamrac.Pamrac.FriendNameMap.FriendNickname parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pamrac.Pamrac.FriendNameMap.FriendNickname parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pamrac.Pamrac.FriendNameMap.FriendNickname parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pamrac.Pamrac.FriendNameMap.FriendNickname parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pamrac.Pamrac.FriendNameMap.FriendNickname parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pamrac.Pamrac.FriendNameMap.FriendNickname parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pamrac.Pamrac.FriendNameMap.FriendNickname parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pamrac.Pamrac.FriendNameMap.FriendNickname parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pamrac.Pamrac.FriendNameMap.FriendNickname parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pamrac.Pamrac.FriendNameMap.FriendNickname prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pamrac.FriendNameMap.FriendNickname}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pamrac.FriendNameMap.FriendNickname)
          pamrac.Pamrac.FriendNameMap.FriendNicknameOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pamrac.Pamrac.internal_static_pamrac_FriendNameMap_FriendNickname_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pamrac.Pamrac.internal_static_pamrac_FriendNameMap_FriendNickname_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pamrac.Pamrac.FriendNameMap.FriendNickname.class, pamrac.Pamrac.FriendNameMap.FriendNickname.Builder.class);
        }

        // Construct using pamrac.Pamrac.FriendNameMap.FriendNickname.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          friendFingerprint_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          serverFingerprint_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          serverAddress_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          signature_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pamrac.Pamrac.internal_static_pamrac_FriendNameMap_FriendNickname_descriptor;
        }

        public pamrac.Pamrac.FriendNameMap.FriendNickname getDefaultInstanceForType() {
          return pamrac.Pamrac.FriendNameMap.FriendNickname.getDefaultInstance();
        }

        public pamrac.Pamrac.FriendNameMap.FriendNickname build() {
          pamrac.Pamrac.FriendNameMap.FriendNickname result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pamrac.Pamrac.FriendNameMap.FriendNickname buildPartial() {
          pamrac.Pamrac.FriendNameMap.FriendNickname result = new pamrac.Pamrac.FriendNameMap.FriendNickname(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.friendFingerprint_ = friendFingerprint_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.serverFingerprint_ = serverFingerprint_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.serverAddress_ = serverAddress_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.signature_ = signature_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pamrac.Pamrac.FriendNameMap.FriendNickname) {
            return mergeFrom((pamrac.Pamrac.FriendNameMap.FriendNickname)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pamrac.Pamrac.FriendNameMap.FriendNickname other) {
          if (other == pamrac.Pamrac.FriendNameMap.FriendNickname.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasFriendFingerprint()) {
            setFriendFingerprint(other.getFriendFingerprint());
          }
          if (other.hasServerFingerprint()) {
            setServerFingerprint(other.getServerFingerprint());
          }
          if (other.hasServerAddress()) {
            bitField0_ |= 0x00000008;
            serverAddress_ = other.serverAddress_;
            onChanged();
          }
          if (other.hasSignature()) {
            setSignature(other.getSignature());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasFriendFingerprint()) {
            
            return false;
          }
          if (!hasServerFingerprint()) {
            
            return false;
          }
          if (!hasServerAddress()) {
            
            return false;
          }
          if (!hasSignature()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pamrac.Pamrac.FriendNameMap.FriendNickname parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pamrac.Pamrac.FriendNameMap.FriendNickname) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 1;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString friendFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>required bytes friend_fingerprint = 2;</code>
         *
         * <pre>
         *fingerprint of the friend's public key
         * </pre>
         */
        public boolean hasFriendFingerprint() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bytes friend_fingerprint = 2;</code>
         *
         * <pre>
         *fingerprint of the friend's public key
         * </pre>
         */
        public com.google.protobuf.ByteString getFriendFingerprint() {
          return friendFingerprint_;
        }
        /**
         * <code>required bytes friend_fingerprint = 2;</code>
         *
         * <pre>
         *fingerprint of the friend's public key
         * </pre>
         */
        public Builder setFriendFingerprint(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          friendFingerprint_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bytes friend_fingerprint = 2;</code>
         *
         * <pre>
         *fingerprint of the friend's public key
         * </pre>
         */
        public Builder clearFriendFingerprint() {
          bitField0_ = (bitField0_ & ~0x00000002);
          friendFingerprint_ = getDefaultInstance().getFriendFingerprint();
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString serverFingerprint_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>required bytes server_fingerprint = 3;</code>
         *
         * <pre>
         *fingerprint of the server's cert/pub key
         * </pre>
         */
        public boolean hasServerFingerprint() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required bytes server_fingerprint = 3;</code>
         *
         * <pre>
         *fingerprint of the server's cert/pub key
         * </pre>
         */
        public com.google.protobuf.ByteString getServerFingerprint() {
          return serverFingerprint_;
        }
        /**
         * <code>required bytes server_fingerprint = 3;</code>
         *
         * <pre>
         *fingerprint of the server's cert/pub key
         * </pre>
         */
        public Builder setServerFingerprint(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          serverFingerprint_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bytes server_fingerprint = 3;</code>
         *
         * <pre>
         *fingerprint of the server's cert/pub key
         * </pre>
         */
        public Builder clearServerFingerprint() {
          bitField0_ = (bitField0_ & ~0x00000004);
          serverFingerprint_ = getDefaultInstance().getServerFingerprint();
          onChanged();
          return this;
        }

        private java.lang.Object serverAddress_ = "";
        /**
         * <code>required string server_address = 4;</code>
         *
         * <pre>
         *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
         * </pre>
         */
        public boolean hasServerAddress() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required string server_address = 4;</code>
         *
         * <pre>
         *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
         * </pre>
         */
        public java.lang.String getServerAddress() {
          java.lang.Object ref = serverAddress_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              serverAddress_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string server_address = 4;</code>
         *
         * <pre>
         *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
         * </pre>
         */
        public com.google.protobuf.ByteString
            getServerAddressBytes() {
          java.lang.Object ref = serverAddress_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            serverAddress_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string server_address = 4;</code>
         *
         * <pre>
         *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
         * </pre>
         */
        public Builder setServerAddress(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          serverAddress_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string server_address = 4;</code>
         *
         * <pre>
         *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
         * </pre>
         */
        public Builder clearServerAddress() {
          bitField0_ = (bitField0_ & ~0x00000008);
          serverAddress_ = getDefaultInstance().getServerAddress();
          onChanged();
          return this;
        }
        /**
         * <code>required string server_address = 4;</code>
         *
         * <pre>
         *last known address of the server. address[:port], e.g. 1.2.3.4, or 1.2.3.4:8443, or fred.duckdns.org:8443
         * </pre>
         */
        public Builder setServerAddressBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          serverAddress_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>required bytes signature = 5;</code>
         *
         * <pre>
         *a signature of this record with the client's private key
         * </pre>
         */
        public boolean hasSignature() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required bytes signature = 5;</code>
         *
         * <pre>
         *a signature of this record with the client's private key
         * </pre>
         */
        public com.google.protobuf.ByteString getSignature() {
          return signature_;
        }
        /**
         * <code>required bytes signature = 5;</code>
         *
         * <pre>
         *a signature of this record with the client's private key
         * </pre>
         */
        public Builder setSignature(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          signature_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bytes signature = 5;</code>
         *
         * <pre>
         *a signature of this record with the client's private key
         * </pre>
         */
        public Builder clearSignature() {
          bitField0_ = (bitField0_ & ~0x00000010);
          signature_ = getDefaultInstance().getSignature();
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:pamrac.FriendNameMap.FriendNickname)
      }

      static {
        defaultInstance = new FriendNickname(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pamrac.FriendNameMap.FriendNickname)
    }

    public static final int FRIENDS_FIELD_NUMBER = 1;
    private java.util.List<pamrac.Pamrac.FriendNameMap.FriendNickname> friends_;
    /**
     * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
     */
    public java.util.List<pamrac.Pamrac.FriendNameMap.FriendNickname> getFriendsList() {
      return friends_;
    }
    /**
     * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
     */
    public java.util.List<? extends pamrac.Pamrac.FriendNameMap.FriendNicknameOrBuilder> 
        getFriendsOrBuilderList() {
      return friends_;
    }
    /**
     * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
     */
    public int getFriendsCount() {
      return friends_.size();
    }
    /**
     * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
     */
    public pamrac.Pamrac.FriendNameMap.FriendNickname getFriends(int index) {
      return friends_.get(index);
    }
    /**
     * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
     */
    public pamrac.Pamrac.FriendNameMap.FriendNicknameOrBuilder getFriendsOrBuilder(
        int index) {
      return friends_.get(index);
    }

    private void initFields() {
      friends_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFriendsCount(); i++) {
        if (!getFriends(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < friends_.size(); i++) {
        output.writeMessage(1, friends_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < friends_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, friends_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pamrac.Pamrac.FriendNameMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.FriendNameMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.FriendNameMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pamrac.Pamrac.FriendNameMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pamrac.Pamrac.FriendNameMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.FriendNameMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.FriendNameMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pamrac.Pamrac.FriendNameMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pamrac.Pamrac.FriendNameMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pamrac.Pamrac.FriendNameMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pamrac.Pamrac.FriendNameMap prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pamrac.FriendNameMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pamrac.FriendNameMap)
        pamrac.Pamrac.FriendNameMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pamrac.Pamrac.internal_static_pamrac_FriendNameMap_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pamrac.Pamrac.internal_static_pamrac_FriendNameMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pamrac.Pamrac.FriendNameMap.class, pamrac.Pamrac.FriendNameMap.Builder.class);
      }

      // Construct using pamrac.Pamrac.FriendNameMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFriendsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (friendsBuilder_ == null) {
          friends_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          friendsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pamrac.Pamrac.internal_static_pamrac_FriendNameMap_descriptor;
      }

      public pamrac.Pamrac.FriendNameMap getDefaultInstanceForType() {
        return pamrac.Pamrac.FriendNameMap.getDefaultInstance();
      }

      public pamrac.Pamrac.FriendNameMap build() {
        pamrac.Pamrac.FriendNameMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pamrac.Pamrac.FriendNameMap buildPartial() {
        pamrac.Pamrac.FriendNameMap result = new pamrac.Pamrac.FriendNameMap(this);
        int from_bitField0_ = bitField0_;
        if (friendsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            friends_ = java.util.Collections.unmodifiableList(friends_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.friends_ = friends_;
        } else {
          result.friends_ = friendsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pamrac.Pamrac.FriendNameMap) {
          return mergeFrom((pamrac.Pamrac.FriendNameMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pamrac.Pamrac.FriendNameMap other) {
        if (other == pamrac.Pamrac.FriendNameMap.getDefaultInstance()) return this;
        if (friendsBuilder_ == null) {
          if (!other.friends_.isEmpty()) {
            if (friends_.isEmpty()) {
              friends_ = other.friends_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFriendsIsMutable();
              friends_.addAll(other.friends_);
            }
            onChanged();
          }
        } else {
          if (!other.friends_.isEmpty()) {
            if (friendsBuilder_.isEmpty()) {
              friendsBuilder_.dispose();
              friendsBuilder_ = null;
              friends_ = other.friends_;
              bitField0_ = (bitField0_ & ~0x00000001);
              friendsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFriendsFieldBuilder() : null;
            } else {
              friendsBuilder_.addAllMessages(other.friends_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFriendsCount(); i++) {
          if (!getFriends(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pamrac.Pamrac.FriendNameMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pamrac.Pamrac.FriendNameMap) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<pamrac.Pamrac.FriendNameMap.FriendNickname> friends_ =
        java.util.Collections.emptyList();
      private void ensureFriendsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          friends_ = new java.util.ArrayList<pamrac.Pamrac.FriendNameMap.FriendNickname>(friends_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pamrac.Pamrac.FriendNameMap.FriendNickname, pamrac.Pamrac.FriendNameMap.FriendNickname.Builder, pamrac.Pamrac.FriendNameMap.FriendNicknameOrBuilder> friendsBuilder_;

      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public java.util.List<pamrac.Pamrac.FriendNameMap.FriendNickname> getFriendsList() {
        if (friendsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(friends_);
        } else {
          return friendsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public int getFriendsCount() {
        if (friendsBuilder_ == null) {
          return friends_.size();
        } else {
          return friendsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public pamrac.Pamrac.FriendNameMap.FriendNickname getFriends(int index) {
        if (friendsBuilder_ == null) {
          return friends_.get(index);
        } else {
          return friendsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public Builder setFriends(
          int index, pamrac.Pamrac.FriendNameMap.FriendNickname value) {
        if (friendsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFriendsIsMutable();
          friends_.set(index, value);
          onChanged();
        } else {
          friendsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public Builder setFriends(
          int index, pamrac.Pamrac.FriendNameMap.FriendNickname.Builder builderForValue) {
        if (friendsBuilder_ == null) {
          ensureFriendsIsMutable();
          friends_.set(index, builderForValue.build());
          onChanged();
        } else {
          friendsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public Builder addFriends(pamrac.Pamrac.FriendNameMap.FriendNickname value) {
        if (friendsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFriendsIsMutable();
          friends_.add(value);
          onChanged();
        } else {
          friendsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public Builder addFriends(
          int index, pamrac.Pamrac.FriendNameMap.FriendNickname value) {
        if (friendsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFriendsIsMutable();
          friends_.add(index, value);
          onChanged();
        } else {
          friendsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public Builder addFriends(
          pamrac.Pamrac.FriendNameMap.FriendNickname.Builder builderForValue) {
        if (friendsBuilder_ == null) {
          ensureFriendsIsMutable();
          friends_.add(builderForValue.build());
          onChanged();
        } else {
          friendsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public Builder addFriends(
          int index, pamrac.Pamrac.FriendNameMap.FriendNickname.Builder builderForValue) {
        if (friendsBuilder_ == null) {
          ensureFriendsIsMutable();
          friends_.add(index, builderForValue.build());
          onChanged();
        } else {
          friendsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public Builder addAllFriends(
          java.lang.Iterable<? extends pamrac.Pamrac.FriendNameMap.FriendNickname> values) {
        if (friendsBuilder_ == null) {
          ensureFriendsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, friends_);
          onChanged();
        } else {
          friendsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public Builder clearFriends() {
        if (friendsBuilder_ == null) {
          friends_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          friendsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public Builder removeFriends(int index) {
        if (friendsBuilder_ == null) {
          ensureFriendsIsMutable();
          friends_.remove(index);
          onChanged();
        } else {
          friendsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public pamrac.Pamrac.FriendNameMap.FriendNickname.Builder getFriendsBuilder(
          int index) {
        return getFriendsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public pamrac.Pamrac.FriendNameMap.FriendNicknameOrBuilder getFriendsOrBuilder(
          int index) {
        if (friendsBuilder_ == null) {
          return friends_.get(index);  } else {
          return friendsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public java.util.List<? extends pamrac.Pamrac.FriendNameMap.FriendNicknameOrBuilder> 
           getFriendsOrBuilderList() {
        if (friendsBuilder_ != null) {
          return friendsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(friends_);
        }
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public pamrac.Pamrac.FriendNameMap.FriendNickname.Builder addFriendsBuilder() {
        return getFriendsFieldBuilder().addBuilder(
            pamrac.Pamrac.FriendNameMap.FriendNickname.getDefaultInstance());
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public pamrac.Pamrac.FriendNameMap.FriendNickname.Builder addFriendsBuilder(
          int index) {
        return getFriendsFieldBuilder().addBuilder(
            index, pamrac.Pamrac.FriendNameMap.FriendNickname.getDefaultInstance());
      }
      /**
       * <code>repeated .pamrac.FriendNameMap.FriendNickname friends = 1;</code>
       */
      public java.util.List<pamrac.Pamrac.FriendNameMap.FriendNickname.Builder> 
           getFriendsBuilderList() {
        return getFriendsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pamrac.Pamrac.FriendNameMap.FriendNickname, pamrac.Pamrac.FriendNameMap.FriendNickname.Builder, pamrac.Pamrac.FriendNameMap.FriendNicknameOrBuilder> 
          getFriendsFieldBuilder() {
        if (friendsBuilder_ == null) {
          friendsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pamrac.Pamrac.FriendNameMap.FriendNickname, pamrac.Pamrac.FriendNameMap.FriendNickname.Builder, pamrac.Pamrac.FriendNameMap.FriendNicknameOrBuilder>(
                  friends_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          friends_ = null;
        }
        return friendsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pamrac.FriendNameMap)
    }

    static {
      defaultInstance = new FriendNameMap(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pamrac.FriendNameMap)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_PAMRACMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_PAMRACMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_BlobFile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_BlobFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_InnerBlob_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_InnerBlob_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_InnerBlob_KeyValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_InnerBlob_KeyValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_InitBlobRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_InitBlobRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_InitBlobResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_InitBlobResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_BlobRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_BlobRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_BlobRequest_BlobHash_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_BlobRequest_BlobHash_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_BlobResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_BlobResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_InitUploadRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_InitUploadRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_InitUploadResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_InitUploadResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_BlobUpload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_BlobUpload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_MasterKeyPasswordedFile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_MasterKeyPasswordedFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_InnerPassworded_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_InnerPassworded_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_MasterKeyRetrievableFile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_MasterKeyRetrievableFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_InnerRetrievable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_InnerRetrievable_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_InitShareListRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_InitShareListRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_NonceResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_NonceResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_ShareListRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_ShareListRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_ShareList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_ShareList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_ShareList_ShareRecipient_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_ShareList_ShareRecipient_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_InitShareRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_InitShareRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_ShareRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_ShareRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_KeyShare_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_KeyShare_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_ShareUpload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_ShareUpload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_FriendNameMap_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_FriendNameMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pamrac_FriendNameMap_FriendNickname_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pamrac_FriendNameMap_FriendNickname_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014pamrac.proto\022\006pamrac\"\212\t\n\rPAMRACMessage" +
      "\022\030\n\020user_fingerprint\030\001 \001(\014\022(\n\004type\030\002 \002(\016" +
      "2\032.pamrac.PAMRACMessage.Type\0222\n\021init_blo" +
      "b_request\030\003 \001(\0132\027.pamrac.InitBlobRequest" +
      "\0224\n\022init_blob_response\030\004 \001(\0132\030.pamrac.In" +
      "itBlobResponse\022)\n\014blob_request\030\005 \001(\0132\023.p" +
      "amrac.BlobRequest\022+\n\rblob_response\030\006 \001(\013" +
      "2\024.pamrac.BlobResponse\0226\n\023init_upload_re" +
      "quest\030\007 \001(\0132\031.pamrac.InitUploadRequest\0228" +
      "\n\024init_upload_response\030\010 \001(\0132\032.pamrac.In",
      "itUploadResponse\022\'\n\013blob_upload\030\t \001(\0132\022." +
      "pamrac.BlobUpload\022-\n\016nonce_response\030\n \001(" +
      "\0132\025.pamrac.NonceResponse\022)\n\014share_upload" +
      "\030\013 \001(\0132\023.pamrac.ShareUpload\0224\n\022init_shar" +
      "e_request\030\014 \001(\0132\030.pamrac.InitShareReques" +
      "t\022+\n\rshare_request\030\r \001(\0132\024.pamrac.ShareR" +
      "equest\022#\n\tkey_share\030\016 \001(\0132\020.pamrac.KeySh" +
      "are\022=\n\027init_share_list_request\030\017 \001(\0132\034.p" +
      "amrac.InitShareListRequest\0224\n\022share_list" +
      "_request\030\020 \001(\0132\030.pamrac.ShareListRequest",
      "\022%\n\nshare_list\030\021 \001(\0132\021.pamrac.ShareList\"" +
      "\331\002\n\004Type\022\025\n\021INIT_BLOB_REQUEST\020\000\022\026\n\022INIT_" +
      "BLOB_RESPONSE\020\001\022\020\n\014BLOB_REQUEST\020\002\022\021\n\rBLO" +
      "B_RESPONSE\020\003\022\027\n\023INIT_UPLOAD_REQUEST\020\004\022\030\n" +
      "\024INIT_UPLOAD_RESPONSE\020\005\022\017\n\013BLOB_UPLOAD\020\006" +
      "\022\025\n\021INIT_SHARE_UPLOAD\020\007\022\021\n\rNONCE_RESPNSE" +
      "\020\010\022\020\n\014SHARE_UPLOAD\020\t\022\026\n\022INIT_SHARE_REQUE" +
      "ST\020\n\022\021\n\rSHARE_REQUEST\020\013\022\r\n\tKEY_SHARE\020\014\022\033" +
      "\n\027INIT_SHARE_LIST_REQUEST\020\r\022\026\n\022SHARE_LIS" +
      "T_REQUEST\020\016\022\016\n\nSHARE_LIST\020\017\"a\n\010BlobFile\022",
      "\014\n\004salt\030\001 \001(\014\022\017\n\007version\030\002 \002(\005\022\027\n\017aes_in" +
      "it_vector\030\003 \002(\014\022\035\n\025inner_blob_ciphertext" +
      "\030\004 \002(\014\"r\n\tInnerBlob\022\020\n\010filename\030\001 \002(\t\022*\n" +
      "\006fields\030\002 \003(\0132\032.pamrac.InnerBlob.KeyValu" +
      "e\032\'\n\010KeyValue\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002" +
      "(\t\"\'\n\017InitBlobRequest\022\024\n\014all_hash_xor\030\001 " +
      "\002(\014\"6\n\020InitBlobResponse\022\023\n\013xor_matches\030\001" +
      " \002(\010\022\r\n\005nonce\030\002 \001(\014\"\275\001\n\013BlobRequest\0222\n\014c" +
      "ached_blobs\030\001 \003(\0132\034.pamrac.BlobRequest.B" +
      "lobHash\022\034\n\024DOWNLOADSECRET_proof\030\002 \002(\014\022\023\n",
      "\013proof_nonce\030\003 \002(\014\032G\n\010BlobHash\022\021\n\tblob_n" +
      "ame\030\001 \002(\t\022\021\n\tblob_hash\030\002 \002(\014\022\025\n\rirretrie" +
      "vable\030\003 \002(\010\"3\n\014BlobResponse\022#\n\tnew_blobs" +
      "\030\001 \003(\0132\020.pamrac.BlobFile\"F\n\021InitUploadRe" +
      "quest\022\027\n\017hashed_filename\030\001 \002(\t\022\030\n\020propos" +
      "ed_version\030\002 \002(\005\"6\n\022InitUploadResponse\022\021" +
      "\n\tupload_ok\030\001 \002(\010\022\r\n\005nonce\030\002 \001(\014\"N\n\nBlob" +
      "Upload\022\036\n\004blob\030\001 \002(\0132\020.pamrac.BlobFile\022\r" +
      "\n\005nonce\030\002 \002(\014\022\021\n\tsignature\030\003 \002(\014\"Z\n\027Mast" +
      "erKeyPasswordedFile\022\014\n\004salt\030\001 \002(\014\022\027\n\017aes",
      "_init_vector\030\002 \002(\014\022\030\n\020inner_ciphertext\030\003" +
      " \002(\014\"|\n\017InnerPassworded\022\022\n\nmaster_key\030\001 " +
      "\002(\014\022\024\n\014filenamesalt\030\002 \002(\014\022\022\n\nsite_names\030" +
      "\003 \003(\t\022\026\n\016DOWNLOADSECRET\030\004 \002(\014\022\023\n\013private" +
      "_key\030\005 \002(\014\"l\n\030MasterKeyRetrievableFile\022\021" +
      "\n\ttimestamp\030\001 \002(\003\022\027\n\017aes_init_vector\030\002 \002" +
      "(\014\022$\n\034inner_retrievable_ciphertext\030\003 \002(\014" +
      "\">\n\020InnerRetrievable\022\022\n\nmaster_key\030\001 \002(\014" +
      "\022\026\n\016DOWNLOADSECRET\030\002 \002(\014\"5\n\024InitShareLis" +
      "tRequest\022\035\n\025requester_fingerprint\030\001 \002(\014\"",
      "\036\n\rNonceResponse\022\r\n\005nonce\030\001 \002(\014\"S\n\020Share" +
      "ListRequest\022\035\n\025requester_fingerprint\030\001 \002" +
      "(\014\022\r\n\005nonce\030\002 \002(\014\022\021\n\tsignature\030\003 \002(\014\"\261\001\n" +
      "\tShareList\022\021\n\ttimestamp\030\001 \002(\003\022\021\n\tthresho" +
      "ld\030\002 \002(\005\0224\n\nrecipients\030\003 \003(\0132 .pamrac.Sh" +
      "areList.ShareRecipient\022\021\n\tsignature\030\004 \002(" +
      "\014\0325\n\016ShareRecipient\022\020\n\010nickname\030\001 \002(\t\022\021\n" +
      "\tinitiator\030\002 \002(\010\"P\n\020InitShareRequest\022\035\n\025" +
      "requester_fingerprint\030\001 \002(\014\022\035\n\025requestee" +
      "_fingerprint\030\002 \002(\014\"n\n\014ShareRequest\022\035\n\025re",
      "quester_fingerprint\030\001 \002(\014\022\035\n\025requestee_f" +
      "ingerprint\030\002 \002(\014\022\r\n\005nonce\030\003 \002(\014\022\021\n\tsigna" +
      "ture\030\004 \002(\014\"\373\001\n\010KeyShare\022\021\n\ttimestamp\030\001 \002" +
      "(\003\022D\n\032masterkey_retrievable_file\030\002 \001(\0132 " +
      ".pamrac.MasterKeyRetrievableFile\022 \n\030encr" +
      "ypted_initiator_mask\030\003 \001(\014\022\027\n\017encrypted_" +
      "share\030\004 \002(\014\022 \n\030encrypted_to_fingerprint\030" +
      "\005 \002(\014\022\031\n\021owner_fingerprint\030\006 \002(\014\022\036\n\026orig" +
      "inator_fingerprint\030\007 \002(\014\"\305\001\n\013ShareUpload" +
      "\022\024\n\014allow_access\030\001 \002(\010\022\035\n\025retriever_fing",
      "erprint\030\002 \002(\014\022\035\n\025retrievee_fingerprint\030\003" +
      " \002(\014\022\037\n\005share\030\004 \001(\0132\020.pamrac.KeyShare\022\037\n" +
      "\004list\030\005 \001(\0132\021.pamrac.ShareList\022\r\n\005nonce\030" +
      "\006 \002(\014\022\021\n\tsignature\030\007 \002(\014\"\312\001\n\rFriendNameM" +
      "ap\0225\n\007friends\030\001 \003(\0132$.pamrac.FriendNameM" +
      "ap.FriendNickname\032\201\001\n\016FriendNickname\022\014\n\004" +
      "name\030\001 \002(\t\022\032\n\022friend_fingerprint\030\002 \002(\014\022\032" +
      "\n\022server_fingerprint\030\003 \002(\014\022\026\n\016server_add" +
      "ress\030\004 \002(\t\022\021\n\tsignature\030\005 \002(\014"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_pamrac_PAMRACMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pamrac_PAMRACMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_PAMRACMessage_descriptor,
        new java.lang.String[] { "UserFingerprint", "Type", "InitBlobRequest", "InitBlobResponse", "BlobRequest", "BlobResponse", "InitUploadRequest", "InitUploadResponse", "BlobUpload", "NonceResponse", "ShareUpload", "InitShareRequest", "ShareRequest", "KeyShare", "InitShareListRequest", "ShareListRequest", "ShareList", });
    internal_static_pamrac_BlobFile_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pamrac_BlobFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_BlobFile_descriptor,
        new java.lang.String[] { "Salt", "Version", "AesInitVector", "InnerBlobCiphertext", });
    internal_static_pamrac_InnerBlob_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_pamrac_InnerBlob_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_InnerBlob_descriptor,
        new java.lang.String[] { "Filename", "Fields", });
    internal_static_pamrac_InnerBlob_KeyValue_descriptor =
      internal_static_pamrac_InnerBlob_descriptor.getNestedTypes().get(0);
    internal_static_pamrac_InnerBlob_KeyValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_InnerBlob_KeyValue_descriptor,
        new java.lang.String[] { "Name", "Value", });
    internal_static_pamrac_InitBlobRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_pamrac_InitBlobRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_InitBlobRequest_descriptor,
        new java.lang.String[] { "AllHashXor", });
    internal_static_pamrac_InitBlobResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_pamrac_InitBlobResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_InitBlobResponse_descriptor,
        new java.lang.String[] { "XorMatches", "Nonce", });
    internal_static_pamrac_BlobRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_pamrac_BlobRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_BlobRequest_descriptor,
        new java.lang.String[] { "CachedBlobs", "DOWNLOADSECRETProof", "ProofNonce", });
    internal_static_pamrac_BlobRequest_BlobHash_descriptor =
      internal_static_pamrac_BlobRequest_descriptor.getNestedTypes().get(0);
    internal_static_pamrac_BlobRequest_BlobHash_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_BlobRequest_BlobHash_descriptor,
        new java.lang.String[] { "BlobName", "BlobHash", "Irretrievable", });
    internal_static_pamrac_BlobResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_pamrac_BlobResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_BlobResponse_descriptor,
        new java.lang.String[] { "NewBlobs", });
    internal_static_pamrac_InitUploadRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_pamrac_InitUploadRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_InitUploadRequest_descriptor,
        new java.lang.String[] { "HashedFilename", "ProposedVersion", });
    internal_static_pamrac_InitUploadResponse_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_pamrac_InitUploadResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_InitUploadResponse_descriptor,
        new java.lang.String[] { "UploadOk", "Nonce", });
    internal_static_pamrac_BlobUpload_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_pamrac_BlobUpload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_BlobUpload_descriptor,
        new java.lang.String[] { "Blob", "Nonce", "Signature", });
    internal_static_pamrac_MasterKeyPasswordedFile_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_pamrac_MasterKeyPasswordedFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_MasterKeyPasswordedFile_descriptor,
        new java.lang.String[] { "Salt", "AesInitVector", "InnerCiphertext", });
    internal_static_pamrac_InnerPassworded_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_pamrac_InnerPassworded_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_InnerPassworded_descriptor,
        new java.lang.String[] { "MasterKey", "Filenamesalt", "SiteNames", "DOWNLOADSECRET", "PrivateKey", });
    internal_static_pamrac_MasterKeyRetrievableFile_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_pamrac_MasterKeyRetrievableFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_MasterKeyRetrievableFile_descriptor,
        new java.lang.String[] { "Timestamp", "AesInitVector", "InnerRetrievableCiphertext", });
    internal_static_pamrac_InnerRetrievable_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_pamrac_InnerRetrievable_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_InnerRetrievable_descriptor,
        new java.lang.String[] { "MasterKey", "DOWNLOADSECRET", });
    internal_static_pamrac_InitShareListRequest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_pamrac_InitShareListRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_InitShareListRequest_descriptor,
        new java.lang.String[] { "RequesterFingerprint", });
    internal_static_pamrac_NonceResponse_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_pamrac_NonceResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_NonceResponse_descriptor,
        new java.lang.String[] { "Nonce", });
    internal_static_pamrac_ShareListRequest_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_pamrac_ShareListRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_ShareListRequest_descriptor,
        new java.lang.String[] { "RequesterFingerprint", "Nonce", "Signature", });
    internal_static_pamrac_ShareList_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_pamrac_ShareList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_ShareList_descriptor,
        new java.lang.String[] { "Timestamp", "Threshold", "Recipients", "Signature", });
    internal_static_pamrac_ShareList_ShareRecipient_descriptor =
      internal_static_pamrac_ShareList_descriptor.getNestedTypes().get(0);
    internal_static_pamrac_ShareList_ShareRecipient_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_ShareList_ShareRecipient_descriptor,
        new java.lang.String[] { "Nickname", "Initiator", });
    internal_static_pamrac_InitShareRequest_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_pamrac_InitShareRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_InitShareRequest_descriptor,
        new java.lang.String[] { "RequesterFingerprint", "RequesteeFingerprint", });
    internal_static_pamrac_ShareRequest_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_pamrac_ShareRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_ShareRequest_descriptor,
        new java.lang.String[] { "RequesterFingerprint", "RequesteeFingerprint", "Nonce", "Signature", });
    internal_static_pamrac_KeyShare_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_pamrac_KeyShare_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_KeyShare_descriptor,
        new java.lang.String[] { "Timestamp", "MasterkeyRetrievableFile", "EncryptedInitiatorMask", "EncryptedShare", "EncryptedToFingerprint", "OwnerFingerprint", "OriginatorFingerprint", });
    internal_static_pamrac_ShareUpload_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_pamrac_ShareUpload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_ShareUpload_descriptor,
        new java.lang.String[] { "AllowAccess", "RetrieverFingerprint", "RetrieveeFingerprint", "Share", "List", "Nonce", "Signature", });
    internal_static_pamrac_FriendNameMap_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_pamrac_FriendNameMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_FriendNameMap_descriptor,
        new java.lang.String[] { "Friends", });
    internal_static_pamrac_FriendNameMap_FriendNickname_descriptor =
      internal_static_pamrac_FriendNameMap_descriptor.getNestedTypes().get(0);
    internal_static_pamrac_FriendNameMap_FriendNickname_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pamrac_FriendNameMap_FriendNickname_descriptor,
        new java.lang.String[] { "Name", "FriendFingerprint", "ServerFingerprint", "ServerAddress", "Signature", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
